import { deleteZoomMeeting, getZoomAPIToken, } from '@zoom_meeting/_libs/api-helper';
const publisher = async (req, res) => {
    try {
        const eventItem = req.body;
        // validate
        if (!eventItem?.meetingId) {
            return res.status(400).json({
                message: 'no meetingId present',
                event: eventItem,
            });
        }
        if (!eventItem?.userId) {
            return res.status(400).json({
                message: 'no userId',
                event: eventItem,
            });
        }
        const zoomToken = await getZoomAPIToken(eventItem?.userId);
        await deleteZoomMeeting(zoomToken, eventItem?.meetingId, eventItem?.scheduleForReminder, eventItem?.cancelMeetingReminder);
        res.status(202).json('del zoom meeting successfully');
    }
    catch (e) {
        console.log(e, ' unable to process message');
        res.status(400).json({
            message: `error processing queue mesages: message: ${e?.message}, code: ${e?.statusCode}`,
            event: e,
        });
    }
};
export default publisher;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsZXRlLXpvb20tbWVldC1hdXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGVsZXRlLXpvb20tbWVldC1hdXRoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsZUFBZSxHQUNoQixNQUFNLGdDQUFnQyxDQUFDO0FBR3hDLE1BQU0sU0FBUyxHQUFHLEtBQUssRUFBRSxHQUFZLEVBQUUsR0FBYSxFQUFFLEVBQUU7SUFDdEQsSUFBSSxDQUFDO1FBQ0gsTUFBTSxTQUFTLEdBQTZCLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFFckQsV0FBVztRQUNYLElBQUksQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLENBQUM7WUFDMUIsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLHNCQUFzQjtnQkFDL0IsS0FBSyxFQUFFLFNBQVM7YUFDakIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLENBQUM7WUFDdkIsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLFdBQVc7Z0JBQ3BCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxNQUFNLFNBQVMsR0FBRyxNQUFNLGVBQWUsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFFM0QsTUFBTSxpQkFBaUIsQ0FDckIsU0FBUyxFQUNULFNBQVMsRUFBRSxTQUFTLEVBQ3BCLFNBQVMsRUFBRSxtQkFBbUIsRUFDOUIsU0FBUyxFQUFFLHFCQUFxQixDQUNqQyxDQUFDO1FBRUYsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsK0JBQStCLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLDRCQUE0QixDQUFDLENBQUM7UUFFN0MsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDbkIsT0FBTyxFQUFFLDRDQUE0QyxDQUFDLEVBQUUsT0FBTyxXQUFXLENBQUMsRUFBRSxVQUFVLEVBQUU7WUFDekYsS0FBSyxFQUFFLENBQUM7U0FDVCxDQUFDLENBQUM7SUFDTCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsZUFBZSxTQUFTLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHtcbiAgZGVsZXRlWm9vbU1lZXRpbmcsXG4gIGdldFpvb21BUElUb2tlbixcbn0gZnJvbSAnQHpvb21fbWVldGluZy9fbGlicy9hcGktaGVscGVyJztcbmltcG9ydCB7IERlbGV0ZVpvb21NZWV0T2JqZWN0VHlwZSB9IGZyb20gJ0B6b29tX21lZXRpbmcvX2xpYnMvdHlwZXMnO1xuXG5jb25zdCBwdWJsaXNoZXIgPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZXZlbnRJdGVtOiBEZWxldGVab29tTWVldE9iamVjdFR5cGUgPSByZXEuYm9keTtcblxuICAgIC8vIHZhbGlkYXRlXG4gICAgaWYgKCFldmVudEl0ZW0/Lm1lZXRpbmdJZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIG1lZXRpbmdJZCBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IGV2ZW50SXRlbSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghZXZlbnRJdGVtPy51c2VySWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdubyB1c2VySWQnLFxuICAgICAgICBldmVudDogZXZlbnRJdGVtLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3Qgem9vbVRva2VuID0gYXdhaXQgZ2V0Wm9vbUFQSVRva2VuKGV2ZW50SXRlbT8udXNlcklkKTtcblxuICAgIGF3YWl0IGRlbGV0ZVpvb21NZWV0aW5nKFxuICAgICAgem9vbVRva2VuLFxuICAgICAgZXZlbnRJdGVtPy5tZWV0aW5nSWQsXG4gICAgICBldmVudEl0ZW0/LnNjaGVkdWxlRm9yUmVtaW5kZXIsXG4gICAgICBldmVudEl0ZW0/LmNhbmNlbE1lZXRpbmdSZW1pbmRlclxuICAgICk7XG5cbiAgICByZXMuc3RhdHVzKDIwMikuanNvbignZGVsIHpvb20gbWVldGluZyBzdWNjZXNzZnVsbHknKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKGUsICcgdW5hYmxlIHRvIHByb2Nlc3MgbWVzc2FnZScpO1xuXG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgbWVzc2FnZTogYGVycm9yIHByb2Nlc3NpbmcgcXVldWUgbWVzYWdlczogbWVzc2FnZTogJHtlPy5tZXNzYWdlfSwgY29kZTogJHtlPy5zdGF0dXNDb2RlfWAsXG4gICAgICBldmVudDogZSxcbiAgICB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcHVibGlzaGVyO1xuIl19