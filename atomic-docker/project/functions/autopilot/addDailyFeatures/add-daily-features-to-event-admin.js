import { createInitialFeaturesApplyToEventTrigger } from '@autopilot/_libs/api-helper';
const handler = async (req, res) => {
    try {
        const eventItem = req.body;
        // validate
        if (!eventItem?.body?.userId) {
            return res.status(400).json({
                message: 'no userId present',
                event: eventItem,
            });
        }
        if (!eventItem?.body?.windowStartDate) {
            return res.status(400).json({
                message: 'no startDate',
                event: eventItem,
            });
        }
        if (!eventItem?.body?.windowEndDate) {
            return res.status(400).json({
                message: 'no endDate',
                event: eventItem,
            });
        }
        if (!eventItem?.body?.timezone) {
            return res.status(400).json({
                message: 'no timezone present',
                event: eventItem,
            });
        }
        if (!eventItem?.autopilot?.userId) {
            return res.status(400).json({
                message: 'no timezone present',
                event: eventItem,
            });
        }
        if (!eventItem?.autopilot?.scheduleAt) {
            return res.status(400).json({
                message: 'no autopilot scheduleAt present',
                event: eventItem,
            });
        }
        if (!eventItem?.autopilot?.timezone) {
            return res.status(400).json({
                message: 'no timezone present',
                event: eventItem,
            });
        }
        if (!eventItem?.autopilot?.payload) {
            return res.status(400).json({
                message: 'no payload present',
                event: eventItem,
            });
        }
        await createInitialFeaturesApplyToEventTrigger(eventItem?.autopilot, eventItem?.body);
        res.status(200).json('successfully started add daily features to event');
    }
    catch (e) {
        console.log(e, ' unable to add daily features to event');
        res.status(400).json(e);
    }
};
export default handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWRhaWx5LWZlYXR1cmVzLXRvLWV2ZW50LWFkbWluLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYWRkLWRhaWx5LWZlYXR1cmVzLXRvLWV2ZW50LWFkbWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRXZGLE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxHQUFZLEVBQUUsR0FBYSxFQUFFLEVBQUU7SUFDcEQsSUFBSSxDQUFDO1FBQ0gsTUFBTSxTQUFTLEdBQTBDLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFFbEUsV0FBVztRQUNYLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLE1BQU0sRUFBRSxDQUFDO1lBQzdCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxlQUFlLEVBQUUsQ0FBQztZQUN0QyxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUMxQixPQUFPLEVBQUUsY0FBYztnQkFDdkIsS0FBSyxFQUFFLFNBQVM7YUFDakIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLGFBQWEsRUFBRSxDQUFDO1lBQ3BDLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxZQUFZO2dCQUNyQixLQUFLLEVBQUUsU0FBUzthQUNqQixDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsSUFBSSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLENBQUM7WUFDL0IsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLHFCQUFxQjtnQkFDOUIsS0FBSyxFQUFFLFNBQVM7YUFDakIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxDQUFDO1lBQ2xDLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxxQkFBcUI7Z0JBQzlCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQztZQUN0QyxPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUMxQixPQUFPLEVBQUUsaUNBQWlDO2dCQUMxQyxLQUFLLEVBQUUsU0FBUzthQUNqQixDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsSUFBSSxDQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLENBQUM7WUFDcEMsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLHFCQUFxQjtnQkFDOUIsS0FBSyxFQUFFLFNBQVM7YUFDakIsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLE9BQU8sRUFBRSxDQUFDO1lBQ25DLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxvQkFBb0I7Z0JBQzdCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxNQUFNLHdDQUF3QyxDQUM1QyxTQUFTLEVBQUUsU0FBUyxFQUNwQixTQUFTLEVBQUUsSUFBSSxDQUNoQixDQUFDO1FBRUYsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsa0RBQWtELENBQUMsQ0FBQztJQUMzRSxDQUFDO0lBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLHdDQUF3QyxDQUFDLENBQUM7UUFDekQsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsQ0FBQztBQUNILENBQUMsQ0FBQztBQUVGLGVBQWUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IEFkZERhaWx5RmVhdHVyZXNBcHBseUV2ZW50VHJpZ2dlclR5cGUgfSBmcm9tICdAYXV0b3BpbG90L19saWJzL3R5cGVzJztcbmltcG9ydCB7IGNyZWF0ZUluaXRpYWxGZWF0dXJlc0FwcGx5VG9FdmVudFRyaWdnZXIgfSBmcm9tICdAYXV0b3BpbG90L19saWJzL2FwaS1oZWxwZXInO1xuXG5jb25zdCBoYW5kbGVyID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IGV2ZW50SXRlbTogQWRkRGFpbHlGZWF0dXJlc0FwcGx5RXZlbnRUcmlnZ2VyVHlwZSA9IHJlcS5ib2R5O1xuXG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoIWV2ZW50SXRlbT8uYm9keT8udXNlcklkKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnbm8gdXNlcklkIHByZXNlbnQnLFxuICAgICAgICBldmVudDogZXZlbnRJdGVtLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFldmVudEl0ZW0/LmJvZHk/LndpbmRvd1N0YXJ0RGF0ZSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIHN0YXJ0RGF0ZScsXG4gICAgICAgIGV2ZW50OiBldmVudEl0ZW0sXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIWV2ZW50SXRlbT8uYm9keT8ud2luZG93RW5kRGF0ZSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIGVuZERhdGUnLFxuICAgICAgICBldmVudDogZXZlbnRJdGVtLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFldmVudEl0ZW0/LmJvZHk/LnRpbWV6b25lKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnbm8gdGltZXpvbmUgcHJlc2VudCcsXG4gICAgICAgIGV2ZW50OiBldmVudEl0ZW0sXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIWV2ZW50SXRlbT8uYXV0b3BpbG90Py51c2VySWQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdubyB0aW1lem9uZSBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IGV2ZW50SXRlbSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghZXZlbnRJdGVtPy5hdXRvcGlsb3Q/LnNjaGVkdWxlQXQpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdubyBhdXRvcGlsb3Qgc2NoZWR1bGVBdCBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IGV2ZW50SXRlbSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghZXZlbnRJdGVtPy5hdXRvcGlsb3Q/LnRpbWV6b25lKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnbm8gdGltZXpvbmUgcHJlc2VudCcsXG4gICAgICAgIGV2ZW50OiBldmVudEl0ZW0sXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIWV2ZW50SXRlbT8uYXV0b3BpbG90Py5wYXlsb2FkKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnbm8gcGF5bG9hZCBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IGV2ZW50SXRlbSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGF3YWl0IGNyZWF0ZUluaXRpYWxGZWF0dXJlc0FwcGx5VG9FdmVudFRyaWdnZXIoXG4gICAgICBldmVudEl0ZW0/LmF1dG9waWxvdCxcbiAgICAgIGV2ZW50SXRlbT8uYm9keVxuICAgICk7XG5cbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbignc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQgYWRkIGRhaWx5IGZlYXR1cmVzIHRvIGV2ZW50Jyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBjb25zb2xlLmxvZyhlLCAnIHVuYWJsZSB0byBhZGQgZGFpbHkgZmVhdHVyZXMgdG8gZXZlbnQnKTtcbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbihlKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcbiJdfQ==