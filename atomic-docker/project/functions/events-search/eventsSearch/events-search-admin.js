// OpenSearch-related imports removed
// import { listRepositoriesInSearch, listSnapshotsOfRepositoryOfSearchData, restoreSnapshotInSearch, deleteIndexInSearch, createTrainEventIndexInOpenSearch, createAllEventIndexInOpenSearch, getVectorInAllEventIndexInOpenSearch, putDataInTrainEventIndexInOpenSearch, deleteDocInTrainEventIndexInOpenSearch, updateDocInTrainEventIndexInOpenSearch, convertEventTitleToOpenAIVector, searchTrainEventIndexInOpenSearch, getVectorInTrainEventIndexInOpenSearch } from '@events_search/_libs/api-helper'
// dayjs and utc are no longer needed as the function body is replaced
// import dayjs from 'dayjs'
// import utc from 'dayjs/plugin/utc'
// dayjs.extend(utc)
const opensearch = async (req, res) => {
    // The entire logic of this service is being deprecated.
    // All OpenSearch related operations are removed.
    return res.status(410).json({
        message: 'This OpenSearch event search service is deprecated and no longer operational. Please use the new LanceDB-based event matching service.',
    });
};
export default opensearch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRzLXNlYXJjaC1hZG1pbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImV2ZW50cy1zZWFyY2gtYWRtaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEscUNBQXFDO0FBQ3JDLDhlQUE4ZTtBQUU5ZSxzRUFBc0U7QUFDdEUsNEJBQTRCO0FBQzVCLHFDQUFxQztBQUNyQyxvQkFBb0I7QUFFcEIsTUFBTSxVQUFVLEdBQUcsS0FBSyxFQUFFLEdBQVksRUFBRSxHQUFhLEVBQUUsRUFBRTtJQUN2RCx3REFBd0Q7SUFDeEQsaURBQWlEO0lBQ2pELE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDMUIsT0FBTyxFQUNMLHdJQUF3STtLQUMzSSxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFFRixlQUFlLFVBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlcXVlc3QsIFJlc3BvbnNlIH0gZnJvbSAnZXhwcmVzcyc7XG5cbi8vIE9wZW5TZWFyY2gtcmVsYXRlZCBpbXBvcnRzIHJlbW92ZWRcbi8vIGltcG9ydCB7IGxpc3RSZXBvc2l0b3JpZXNJblNlYXJjaCwgbGlzdFNuYXBzaG90c09mUmVwb3NpdG9yeU9mU2VhcmNoRGF0YSwgcmVzdG9yZVNuYXBzaG90SW5TZWFyY2gsIGRlbGV0ZUluZGV4SW5TZWFyY2gsIGNyZWF0ZVRyYWluRXZlbnRJbmRleEluT3BlblNlYXJjaCwgY3JlYXRlQWxsRXZlbnRJbmRleEluT3BlblNlYXJjaCwgZ2V0VmVjdG9ySW5BbGxFdmVudEluZGV4SW5PcGVuU2VhcmNoLCBwdXREYXRhSW5UcmFpbkV2ZW50SW5kZXhJbk9wZW5TZWFyY2gsIGRlbGV0ZURvY0luVHJhaW5FdmVudEluZGV4SW5PcGVuU2VhcmNoLCB1cGRhdGVEb2NJblRyYWluRXZlbnRJbmRleEluT3BlblNlYXJjaCwgY29udmVydEV2ZW50VGl0bGVUb09wZW5BSVZlY3Rvciwgc2VhcmNoVHJhaW5FdmVudEluZGV4SW5PcGVuU2VhcmNoLCBnZXRWZWN0b3JJblRyYWluRXZlbnRJbmRleEluT3BlblNlYXJjaCB9IGZyb20gJ0BldmVudHNfc2VhcmNoL19saWJzL2FwaS1oZWxwZXInXG5cbi8vIGRheWpzIGFuZCB1dGMgYXJlIG5vIGxvbmdlciBuZWVkZWQgYXMgdGhlIGZ1bmN0aW9uIGJvZHkgaXMgcmVwbGFjZWRcbi8vIGltcG9ydCBkYXlqcyBmcm9tICdkYXlqcydcbi8vIGltcG9ydCB1dGMgZnJvbSAnZGF5anMvcGx1Z2luL3V0Yydcbi8vIGRheWpzLmV4dGVuZCh1dGMpXG5cbmNvbnN0IG9wZW5zZWFyY2ggPSBhc3luYyAocmVxOiBSZXF1ZXN0LCByZXM6IFJlc3BvbnNlKSA9PiB7XG4gIC8vIFRoZSBlbnRpcmUgbG9naWMgb2YgdGhpcyBzZXJ2aWNlIGlzIGJlaW5nIGRlcHJlY2F0ZWQuXG4gIC8vIEFsbCBPcGVuU2VhcmNoIHJlbGF0ZWQgb3BlcmF0aW9ucyBhcmUgcmVtb3ZlZC5cbiAgcmV0dXJuIHJlcy5zdGF0dXMoNDEwKS5qc29uKHtcbiAgICBtZXNzYWdlOlxuICAgICAgJ1RoaXMgT3BlblNlYXJjaCBldmVudCBzZWFyY2ggc2VydmljZSBpcyBkZXByZWNhdGVkIGFuZCBubyBsb25nZXIgb3BlcmF0aW9uYWwuIFBsZWFzZSB1c2UgdGhlIG5ldyBMYW5jZURCLWJhc2VkIGV2ZW50IG1hdGNoaW5nIHNlcnZpY2UuJyxcbiAgfSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBvcGVuc2VhcmNoO1xuIl19