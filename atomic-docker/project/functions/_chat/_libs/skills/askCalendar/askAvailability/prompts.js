export const summarizeAvailabilityPrompt = `
    The user will give you his/her availability time slots generated from the calendar using code. Rewrite the availability in a more simple and concise terms. Write the response in first person as if conveying the information to a third party. Do not make up availability or hallucinate or fill unknown values. Do not provide any availability until information is provided to you. Combine contiguous time slots into 1 time slot covering the whole range. Respond time slot in format h:mm AM/PM - h:mm AM/PM.
`;
export const summarizeAvailabilityExampleInput = `02/20/2023 - 8:00 AM - 8:30 AM, 8:30 AM - 9:00 AM, 9:00 AM - 9:30 AM, 9:30 AM - 10:00 AM, 10:00 AM - 10:30 AM, 10:30 AM - 11:00 AM, 11:00 AM - 11:30 AM, 11:30 AM - 12:00 PM, 12:00 PM - 12:30 PM, 12:30 PM - 1:00 PM`;
export const summarizeAvailabilityExampleOutput = `On February 20, I'm available: \n - 8:00 AM - 1:00 PM \n.
`;
export const summarizeAvailabilityResponsesPrompt = `The user will provide his/her availability. Rewrite the availability in a more simple and concise terms. Write the response in first person as if conveying the information to a third party. Do not make up availability or hallucinate. Do not provide any availability until information is provided to you. Respond time slot in format 'from h:mm AM/PM to h:mm AM/PM.'`;
export const summarizeAvailabilityResponsesPromptExampleInput = `On February 19, I'm available from 7:00 AM to 10:30 PM. On February 20, I'm available from 6:00 AM to 12:00 PM and from 3:00 PM to 10:00 PM.`;
export const summarizeAvailabilityResponsesPromptExampleOutput = `I'm available on February 19 from 7:00 AM to 10:30 PM, and on February 20 from 6:00 AM to 12:00 PM and from 3:00 PM to 10:00 PM.`;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvbXB0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInByb21wdHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7O0NBRTFDLENBQUM7QUFDRixNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FBRyx1TkFBdU4sQ0FBQztBQUN6USxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBRztDQUNqRCxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQUcsOFdBQThXLENBQUM7QUFFbmEsTUFBTSxDQUFDLE1BQU0sZ0RBQWdELEdBQUcsOElBQThJLENBQUM7QUFFL00sTUFBTSxDQUFDLE1BQU0saURBQWlELEdBQUcsa0lBQWtJLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc3VtbWFyaXplQXZhaWxhYmlsaXR5UHJvbXB0ID0gYFxuICAgIFRoZSB1c2VyIHdpbGwgZ2l2ZSB5b3UgaGlzL2hlciBhdmFpbGFiaWxpdHkgdGltZSBzbG90cyBnZW5lcmF0ZWQgZnJvbSB0aGUgY2FsZW5kYXIgdXNpbmcgY29kZS4gUmV3cml0ZSB0aGUgYXZhaWxhYmlsaXR5IGluIGEgbW9yZSBzaW1wbGUgYW5kIGNvbmNpc2UgdGVybXMuIFdyaXRlIHRoZSByZXNwb25zZSBpbiBmaXJzdCBwZXJzb24gYXMgaWYgY29udmV5aW5nIHRoZSBpbmZvcm1hdGlvbiB0byBhIHRoaXJkIHBhcnR5LiBEbyBub3QgbWFrZSB1cCBhdmFpbGFiaWxpdHkgb3IgaGFsbHVjaW5hdGUgb3IgZmlsbCB1bmtub3duIHZhbHVlcy4gRG8gbm90IHByb3ZpZGUgYW55IGF2YWlsYWJpbGl0eSB1bnRpbCBpbmZvcm1hdGlvbiBpcyBwcm92aWRlZCB0byB5b3UuIENvbWJpbmUgY29udGlndW91cyB0aW1lIHNsb3RzIGludG8gMSB0aW1lIHNsb3QgY292ZXJpbmcgdGhlIHdob2xlIHJhbmdlLiBSZXNwb25kIHRpbWUgc2xvdCBpbiBmb3JtYXQgaDptbSBBTS9QTSAtIGg6bW0gQU0vUE0uXG5gO1xuZXhwb3J0IGNvbnN0IHN1bW1hcml6ZUF2YWlsYWJpbGl0eUV4YW1wbGVJbnB1dCA9IGAwMi8yMC8yMDIzIC0gODowMCBBTSAtIDg6MzAgQU0sIDg6MzAgQU0gLSA5OjAwIEFNLCA5OjAwIEFNIC0gOTozMCBBTSwgOTozMCBBTSAtIDEwOjAwIEFNLCAxMDowMCBBTSAtIDEwOjMwIEFNLCAxMDozMCBBTSAtIDExOjAwIEFNLCAxMTowMCBBTSAtIDExOjMwIEFNLCAxMTozMCBBTSAtIDEyOjAwIFBNLCAxMjowMCBQTSAtIDEyOjMwIFBNLCAxMjozMCBQTSAtIDE6MDAgUE1gO1xuZXhwb3J0IGNvbnN0IHN1bW1hcml6ZUF2YWlsYWJpbGl0eUV4YW1wbGVPdXRwdXQgPSBgT24gRmVicnVhcnkgMjAsIEknbSBhdmFpbGFibGU6IFxcbiAtIDg6MDAgQU0gLSAxOjAwIFBNIFxcbi5cbmA7XG5leHBvcnQgY29uc3Qgc3VtbWFyaXplQXZhaWxhYmlsaXR5UmVzcG9uc2VzUHJvbXB0ID0gYFRoZSB1c2VyIHdpbGwgcHJvdmlkZSBoaXMvaGVyIGF2YWlsYWJpbGl0eS4gUmV3cml0ZSB0aGUgYXZhaWxhYmlsaXR5IGluIGEgbW9yZSBzaW1wbGUgYW5kIGNvbmNpc2UgdGVybXMuIFdyaXRlIHRoZSByZXNwb25zZSBpbiBmaXJzdCBwZXJzb24gYXMgaWYgY29udmV5aW5nIHRoZSBpbmZvcm1hdGlvbiB0byBhIHRoaXJkIHBhcnR5LiBEbyBub3QgbWFrZSB1cCBhdmFpbGFiaWxpdHkgb3IgaGFsbHVjaW5hdGUuIERvIG5vdCBwcm92aWRlIGFueSBhdmFpbGFiaWxpdHkgdW50aWwgaW5mb3JtYXRpb24gaXMgcHJvdmlkZWQgdG8geW91LiBSZXNwb25kIHRpbWUgc2xvdCBpbiBmb3JtYXQgJ2Zyb20gaDptbSBBTS9QTSB0byBoOm1tIEFNL1BNLidgO1xuXG5leHBvcnQgY29uc3Qgc3VtbWFyaXplQXZhaWxhYmlsaXR5UmVzcG9uc2VzUHJvbXB0RXhhbXBsZUlucHV0ID0gYE9uIEZlYnJ1YXJ5IDE5LCBJJ20gYXZhaWxhYmxlIGZyb20gNzowMCBBTSB0byAxMDozMCBQTS4gT24gRmVicnVhcnkgMjAsIEknbSBhdmFpbGFibGUgZnJvbSA2OjAwIEFNIHRvIDEyOjAwIFBNIGFuZCBmcm9tIDM6MDAgUE0gdG8gMTA6MDAgUE0uYDtcblxuZXhwb3J0IGNvbnN0IHN1bW1hcml6ZUF2YWlsYWJpbGl0eVJlc3BvbnNlc1Byb21wdEV4YW1wbGVPdXRwdXQgPSBgSSdtIGF2YWlsYWJsZSBvbiBGZWJydWFyeSAxOSBmcm9tIDc6MDAgQU0gdG8gMTA6MzAgUE0sIGFuZCBvbiBGZWJydWFyeSAyMCBmcm9tIDY6MDAgQU0gdG8gMTI6MDAgUE0gYW5kIGZyb20gMzowMCBQTSB0byAxMDowMCBQTS5gO1xuIl19