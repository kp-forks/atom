import QueryCalendarExtractedJSONType from '@chat/_libs/datetime/QueryCalendarExtractedDateJSONType';
import UserInputToJSONType from '@chat/_libs/types/UserInputToJSONType';
import { QueryCalendarExtractedAttributesType } from '../types';
import { QueryNextEventType } from './types';
import { SkillMessageHistoryType } from '@chat/_libs/types/Messaging/MessagingTypes';
import OpenAI from 'openai';
import ResponseActionType from '@chat/_libs/types/ResponseActionType';
export declare const finalStepQueryNextEvent: (body: QueryNextEventType, windowStartDate: string, windowEndDate: string, timezone: string, response: any) => Promise<any>;
export declare const processQueryNextEventPending: (userId: string, timezone: string, jsonBody: UserInputToJSONType, attributesObject: QueryCalendarExtractedAttributesType, queryDateJSONBody: QueryCalendarExtractedJSONType, currentTime: string) => Promise<ResponseActionType>;
export declare const processQueryNextEventMissingFieldsReturned: (userId: string, timezone: string, jsonBody: UserInputToJSONType, attributesObject: QueryCalendarExtractedAttributesType, queryDateJSONBody: QueryCalendarExtractedJSONType, currentTime: string, messageHistoryObject: SkillMessageHistoryType) => Promise<any>;
export declare const nextEventControlCenter: (openai: OpenAI, userId: string, timezone: string, messageHistoryObject: SkillMessageHistoryType, userCurrentTime: string, query: "missing_fields" | "completed" | "event_not_found" | "pending") => Promise<any>;
