import DateTimeJSONType from '@chat/_libs/datetime/DateTimeJSONJSONType';
import UserInputToJSONType from '@chat/_libs/types/UserInputToJSONType';
import { ChatMeetingPreferencesType } from '@chat/_libs/types/ChatMeetingPreferencesType';
import { ScheduleMeetingType } from './types';
import ResponseActionType from '@chat/_libs/types/ResponseActionType';
import { SkillMessageHistoryType } from '@chat/_libs/types/Messaging/MessagingTypes';
import OpenAI from 'openai';
export declare const getChatMeetingPreferenceGivenUserId: (userId: string) => Promise<any>;
export declare const finalStepScheduleMeeting: (body: ScheduleMeetingType, defaultMeetingPreferences: ChatMeetingPreferencesType, response: any) => Promise<any>;
export declare const processScheduleMeetingPending: (userId: string, timezone: string, jsonBody: UserInputToJSONType, dateJSONBody: DateTimeJSONType, currentTime: string) => Promise<ResponseActionType>;
export declare const processScheduleMeetingMissingFieldsReturned: (userId: string, timezone: string, jsonBody: UserInputToJSONType, dateJSONBody: DateTimeJSONType, currentTime: string, messageHistoryObject: SkillMessageHistoryType) => Promise<any>;
export declare const scheduleMeetingControlCenter: (openai: OpenAI, userId: string, timezone: string, messageHistoryObject: SkillMessageHistoryType, userCurrentTime: string, query: "missing_fields" | "completed" | "event_not_found" | "pending") => Promise<any>;
