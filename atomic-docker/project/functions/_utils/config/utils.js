// * Helpers for casting environment variables
export const castStringEnv = (envVar, defaultValue = '') => {
    const env = process.env[envVar];
    return env || defaultValue;
};
export const castBooleanEnv = (envVar, defaultValue = false) => {
    const env = process.env[envVar];
    return env ? env.toLowerCase() === 'true' : defaultValue;
};
export const castIntEnv = (envVar, defaultValue) => {
    const env = process.env[envVar];
    return env ? parseInt(env, 10) : defaultValue;
};
export const castStringArrayEnv = (envVar, defaultValue = []) => {
    const env = process.env[envVar];
    return env?.length
        ? env.split(',').map((field) => field.trim())
        : defaultValue;
};
export const castObjectEnv = (envVar, defaultValue = {}) => {
    const env = process.env[envVar];
    return env ? JSON.parse(env) : defaultValue;
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ1dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEM7QUFFOUMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQUMsTUFBYyxFQUFFLFlBQVksR0FBRyxFQUFFLEVBQVUsRUFBRTtJQUN6RSxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQztBQUM3QixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsQ0FDNUIsTUFBYyxFQUNkLFlBQVksR0FBRyxLQUFLLEVBQ1gsRUFBRTtJQUNYLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztBQUMzRCxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxNQUFjLEVBQUUsWUFBb0IsRUFBVSxFQUFFO0lBQ3pFLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztBQUNoRCxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxDQUNoQyxNQUFjLEVBQ2QsZUFBeUIsRUFBRSxFQUNqQixFQUFFO0lBQ1osTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxPQUFPLEdBQUcsRUFBRSxNQUFNO1FBQ2hCLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQzdDLENBQUMsQ0FBQyxZQUFZLENBQUM7QUFDbkIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLE1BQWMsRUFDZCxlQUFrQixFQUFPLEVBQ3RCLEVBQUU7SUFDTCxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ2hDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7QUFDOUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gKiBIZWxwZXJzIGZvciBjYXN0aW5nIGVudmlyb25tZW50IHZhcmlhYmxlc1xuXG5leHBvcnQgY29uc3QgY2FzdFN0cmluZ0VudiA9IChlbnZWYXI6IHN0cmluZywgZGVmYXVsdFZhbHVlID0gJycpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBlbnYgPSBwcm9jZXNzLmVudltlbnZWYXJdO1xuICByZXR1cm4gZW52IHx8IGRlZmF1bHRWYWx1ZTtcbn07XG5cbmV4cG9ydCBjb25zdCBjYXN0Qm9vbGVhbkVudiA9IChcbiAgZW52VmFyOiBzdHJpbmcsXG4gIGRlZmF1bHRWYWx1ZSA9IGZhbHNlXG4pOiBib29sZWFuID0+IHtcbiAgY29uc3QgZW52ID0gcHJvY2Vzcy5lbnZbZW52VmFyXTtcbiAgcmV0dXJuIGVudiA/IGVudi50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZScgOiBkZWZhdWx0VmFsdWU7XG59O1xuXG5leHBvcnQgY29uc3QgY2FzdEludEVudiA9IChlbnZWYXI6IHN0cmluZywgZGVmYXVsdFZhbHVlOiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICBjb25zdCBlbnYgPSBwcm9jZXNzLmVudltlbnZWYXJdO1xuICByZXR1cm4gZW52ID8gcGFyc2VJbnQoZW52LCAxMCkgOiBkZWZhdWx0VmFsdWU7XG59O1xuXG5leHBvcnQgY29uc3QgY2FzdFN0cmluZ0FycmF5RW52ID0gKFxuICBlbnZWYXI6IHN0cmluZyxcbiAgZGVmYXVsdFZhbHVlOiBzdHJpbmdbXSA9IFtdXG4pOiBzdHJpbmdbXSA9PiB7XG4gIGNvbnN0IGVudiA9IHByb2Nlc3MuZW52W2VudlZhcl07XG4gIHJldHVybiBlbnY/Lmxlbmd0aFxuICAgID8gZW52LnNwbGl0KCcsJykubWFwKChmaWVsZCkgPT4gZmllbGQudHJpbSgpKVxuICAgIDogZGVmYXVsdFZhbHVlO1xufTtcblxuZXhwb3J0IGNvbnN0IGNhc3RPYmplY3RFbnYgPSA8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHVua25vd24+PihcbiAgZW52VmFyOiBzdHJpbmcsXG4gIGRlZmF1bHRWYWx1ZTogVCA9IHt9IGFzIFRcbik6IFQgPT4ge1xuICBjb25zdCBlbnYgPSBwcm9jZXNzLmVudltlbnZWYXJdO1xuICByZXR1cm4gZW52ID8gSlNPTi5wYXJzZShlbnYpIDogZGVmYXVsdFZhbHVlO1xufTtcbiJdfQ==