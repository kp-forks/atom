export const MAX_CHARACTER_LIMIT = 3250;
// export const HTML_REGEX_PATTERN = /<html>(.*?)<\/html>/gs
// /<html[^>]*>([\s\S]*?)<\/html>/i
export const HTML_REGEX_PATTERN = /<html[^>]*>([\s\S]*?)<\/html>/gi;
export const A_TAG_REGEX_PATTERN = /<a href="(.*?)"/;
export const URL_REGEX_PATTERN = /(https?:\/\/\S+)/g;
// matches spaces and ends with ">" character
// https?:\/\/([a-z0-9]+\.)?calendar\.atomiclife\.app\S+[\S, \S]+[">Atomic<\/a> :)]
export const ATOMIC_SUBDOMAIN_PATTERN = /https?:\/\/([a-z0-9]+\.)?calendar\.atomiclife\.app\S+[\S, \S]+\S+[> ]/g;
export const NUMBER_TO_REMOVE_FOR_SUBDOMAIN_SLICE = 2;
export const emailKnwIndex = 'knn-knw-index';
export const hasuraGraphUrl = process.env.HASURA_GRAPHQL_GRAPHQL_URL;
export const openAIChatGPTModel = 'gpt-3.5-turbo';
export const hasuraAdminSecret = process.env.HASURA_GRAPHQL_ADMIN_SECRET;
export const googleClientIdIos = process.env.GOOGLE_ClIENT_ID_IOS;
export const googleClientIdAndroid = process.env.GOOGLE_CLIENT_ID_ANDROID;
export const googleClientIdWeb = process.env.GOOGLE_CLIENT_ID_WEB;
export const googleClientIdAtomicWeb = process.env.GOOGLE_CLIENT_ID_ATOMIC_WEB;
export const googleTokenUrl = 'https://oauth2.googleapis.com/token';
export const googleClientSecretWeb = process.env.GOOGLE_CLIENT_SECRET_WEB;
export const googleCalendarResource = 'google';
export const zoomResourceName = 'zoom';
export const zoomClientSecret = process.env.ZOOM_CLIENT_SECRET;
export const zoomClientId = process.env.ZOOM_CLIENT_ID;
export const zoomTokenUrl = 'https://zoom.us/oauth/token';
export const zoomBaseUrl = 'https://api.zoom.us/v2';
export const zoomBaseTokenUrl = 'https://zoom.us';
export const zoomSaltForPass = process.env.ZOOM_SALT_FOR_PASS;
export const zoomIVForPass = process.env.ZOOM_IV_FOR_PASS;
export const zoomPassKey = process.env.ZOOM_PASS_KEY;
export const googleClientSecretAtomicWeb = process.env.GOOGLE_CLIENT_SECRET_ATOMIC_WEB;
export const defaultOpenAIAPIKey = process.env.OPENAI_API_KEY;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLElBQUksQ0FBQztBQUN4Qyw0REFBNEQ7QUFDNUQsbUNBQW1DO0FBQ25DLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLGlDQUFpQyxDQUFDO0FBQ3BFLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLGlCQUFpQixDQUFDO0FBQ3JELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLG1CQUFtQixDQUFDO0FBQ3JELDZDQUE2QztBQUM3QyxtRkFBbUY7QUFDbkYsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQ25DLHdFQUF3RSxDQUFDO0FBQzNFLE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUFHLENBQUMsQ0FBQztBQUV0RCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDO0FBQ3JFLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLGVBQWUsQ0FBQztBQUNsRCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDO0FBQ3pFLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUM7QUFDbEUsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQztBQUMxRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDO0FBQ2xFLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUM7QUFFL0UsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLHFDQUFxQyxDQUFDO0FBRXBFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUM7QUFFMUUsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsUUFBUSxDQUFDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQztBQUN2QyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDO0FBQy9ELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUN2RCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsNkJBQTZCLENBQUM7QUFDMUQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLHdCQUF3QixDQUFDO0FBQ3BELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLGlCQUFpQixDQUFDO0FBQ2xELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDO0FBQzlELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDO0FBQzFELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQztBQUVyRCxNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FDdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsQ0FBQztBQUU5QyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBNQVhfQ0hBUkFDVEVSX0xJTUlUID0gMzI1MDtcbi8vIGV4cG9ydCBjb25zdCBIVE1MX1JFR0VYX1BBVFRFUk4gPSAvPGh0bWw+KC4qPyk8XFwvaHRtbD4vZ3Ncbi8vIC88aHRtbFtePl0qPihbXFxzXFxTXSo/KTxcXC9odG1sPi9pXG5leHBvcnQgY29uc3QgSFRNTF9SRUdFWF9QQVRURVJOID0gLzxodG1sW14+XSo+KFtcXHNcXFNdKj8pPFxcL2h0bWw+L2dpO1xuZXhwb3J0IGNvbnN0IEFfVEFHX1JFR0VYX1BBVFRFUk4gPSAvPGEgaHJlZj1cIiguKj8pXCIvO1xuZXhwb3J0IGNvbnN0IFVSTF9SRUdFWF9QQVRURVJOID0gLyhodHRwcz86XFwvXFwvXFxTKykvZztcbi8vIG1hdGNoZXMgc3BhY2VzIGFuZCBlbmRzIHdpdGggXCI+XCIgY2hhcmFjdGVyXG4vLyBodHRwcz86XFwvXFwvKFthLXowLTldK1xcLik/Y2FsZW5kYXJcXC5hdG9taWNsaWZlXFwuYXBwXFxTK1tcXFMsIFxcU10rW1wiPkF0b21pYzxcXC9hPiA6KV1cbmV4cG9ydCBjb25zdCBBVE9NSUNfU1VCRE9NQUlOX1BBVFRFUk4gPVxuICAvaHR0cHM/OlxcL1xcLyhbYS16MC05XStcXC4pP2NhbGVuZGFyXFwuYXRvbWljbGlmZVxcLmFwcFxcUytbXFxTLCBcXFNdK1xcUytbPiBdL2c7XG5leHBvcnQgY29uc3QgTlVNQkVSX1RPX1JFTU9WRV9GT1JfU1VCRE9NQUlOX1NMSUNFID0gMjtcblxuZXhwb3J0IGNvbnN0IGVtYWlsS253SW5kZXggPSAna25uLWtudy1pbmRleCc7XG5leHBvcnQgY29uc3QgaGFzdXJhR3JhcGhVcmwgPSBwcm9jZXNzLmVudi5IQVNVUkFfR1JBUEhRTF9HUkFQSFFMX1VSTDtcbmV4cG9ydCBjb25zdCBvcGVuQUlDaGF0R1BUTW9kZWwgPSAnZ3B0LTMuNS10dXJibyc7XG5leHBvcnQgY29uc3QgaGFzdXJhQWRtaW5TZWNyZXQgPSBwcm9jZXNzLmVudi5IQVNVUkFfR1JBUEhRTF9BRE1JTl9TRUNSRVQ7XG5leHBvcnQgY29uc3QgZ29vZ2xlQ2xpZW50SWRJb3MgPSBwcm9jZXNzLmVudi5HT09HTEVfQ2xJRU5UX0lEX0lPUztcbmV4cG9ydCBjb25zdCBnb29nbGVDbGllbnRJZEFuZHJvaWQgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEX0FORFJPSUQ7XG5leHBvcnQgY29uc3QgZ29vZ2xlQ2xpZW50SWRXZWIgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEX1dFQjtcbmV4cG9ydCBjb25zdCBnb29nbGVDbGllbnRJZEF0b21pY1dlYiA9IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfSURfQVRPTUlDX1dFQjtcblxuZXhwb3J0IGNvbnN0IGdvb2dsZVRva2VuVXJsID0gJ2h0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuJztcblxuZXhwb3J0IGNvbnN0IGdvb2dsZUNsaWVudFNlY3JldFdlYiA9IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfU0VDUkVUX1dFQjtcblxuZXhwb3J0IGNvbnN0IGdvb2dsZUNhbGVuZGFyUmVzb3VyY2UgPSAnZ29vZ2xlJztcbmV4cG9ydCBjb25zdCB6b29tUmVzb3VyY2VOYW1lID0gJ3pvb20nO1xuZXhwb3J0IGNvbnN0IHpvb21DbGllbnRTZWNyZXQgPSBwcm9jZXNzLmVudi5aT09NX0NMSUVOVF9TRUNSRVQ7XG5leHBvcnQgY29uc3Qgem9vbUNsaWVudElkID0gcHJvY2Vzcy5lbnYuWk9PTV9DTElFTlRfSUQ7XG5leHBvcnQgY29uc3Qgem9vbVRva2VuVXJsID0gJ2h0dHBzOi8vem9vbS51cy9vYXV0aC90b2tlbic7XG5leHBvcnQgY29uc3Qgem9vbUJhc2VVcmwgPSAnaHR0cHM6Ly9hcGkuem9vbS51cy92Mic7XG5leHBvcnQgY29uc3Qgem9vbUJhc2VUb2tlblVybCA9ICdodHRwczovL3pvb20udXMnO1xuZXhwb3J0IGNvbnN0IHpvb21TYWx0Rm9yUGFzcyA9IHByb2Nlc3MuZW52LlpPT01fU0FMVF9GT1JfUEFTUztcbmV4cG9ydCBjb25zdCB6b29tSVZGb3JQYXNzID0gcHJvY2Vzcy5lbnYuWk9PTV9JVl9GT1JfUEFTUztcbmV4cG9ydCBjb25zdCB6b29tUGFzc0tleSA9IHByb2Nlc3MuZW52LlpPT01fUEFTU19LRVk7XG5cbmV4cG9ydCBjb25zdCBnb29nbGVDbGllbnRTZWNyZXRBdG9taWNXZWIgPVxuICBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX1NFQ1JFVF9BVE9NSUNfV0VCO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdE9wZW5BSUFQSUtleSA9IHByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZO1xuIl19