export const hasuraMetadataUrl = process.env.HASURA_GRAPHQL_METADATA_URL;
export const hasuraGraphUrl = process.env.HASURA_GRAPHQL_GRAPHQL_URL;
export const hasuraAdminSecret = process.env.HASURA_GRAPHQL_ADMIN_SECRET;
export const authApiToken = process.env.API_TOKEN;
export const text2VectorUrl = process.env.TEXT_TO_VECTOR_URL;
export const openSearchEndPoint = process.env.OPENSEARCH_ENDPOINT;
export const eventVectorName = 'event-vector';
export const vectorDimensions = 384;
export const searchIndex = 'knn-events-index';
export const googleCalendarResource = 'google';
export const googlePeopleResource = 'google';
export const googlePeopleName = 'Google Contacts';
export const googleMeetResource = 'google';
export const googleClientIdIos = process.env.GOOGLE_ClIENT_ID_IOS;
export const googleClientIdAndroid = process.env.GOOGLE_CLIENT_ID_ANDROID;
export const googleClientIdWeb = process.env.GOOGLE_CLIENT_ID_WEB;
export const googleTokenUrl = 'https://oauth2.googleapis.com/token';
export const googleClientSecretWeb = process.env.GOOGLE_CLIENT_SECRET_WEB;
export const googleClientIdAtomicWeb = process.env.GOOGLE_CLIENT_ID_ATOMIC_WEB;
export const zoomResourceName = 'zoom';
export const zoomClientSecret = process.env.ZOOM_CLIENT_SECRET;
export const zoomClientId = process.env.ZOOM_CLIENT_ID;
export const zoomBaseUrl = 'https://api.zoom.us/v2';
export const zoomBaseTokenUrl = 'https://zoom.us';
export const googleColorUrl = 'https://www.googleapis.com/calendar/v3/colors';
// CHANGE THIS!!!
export const selfGoogleCalendarWebhookPublicUrl = process.env.GOOGLE_CALENDAR_WEBHOOK_URL;
// CHANGE THIS!!
export const selfGooglePeopleAdminUrl = process.env.GOOGLE_PEOPLE_SYNC_ADMIN_URL;
export const zoomSaltForPass = process.env.ZOOM_SALT_FOR_PASS;
export const zoomIVForPass = process.env.ZOOM_IV_FOR_PASS;
export const zoomPassKey = process.env.ZOOM_PASS_KEY;
// GOOGLE_CLIENT_SECRET_ATOMIC_WEB
export const googleClientSecretAtomicWeb = process.env.GOOGLE_CLIENT_SECRET_ATOMIC_WEB;
export const bucketName = process.env.S3_BUCKET;
export const defaultOpenAIAPIKey = process.env.OPENAI_API_KEY;
export const openAllEventIndex = 'knn-open-all-event-index';
export const openAllEventVectorDimensions = 1536;
export const openAIChatGPT35Model = 'gpt-3.5-turbo';
export const openAIChatGPT35LongModel = 'gpt-3.5-turbo-16k';
export const openAIChatGPT4Model = 'gpt-4';
export const openAllEventVectorName = 'embeddings';
export const googleCalendarStopWatchUrl = 'https://www.googleapis.com/calendar/v3/channels/stop';
export const openTrainEventVectorName = 'embeddings';
export const openTrainEventVectorDimensions = 1536;
export const openTrainEventIndex = 'knn-open-train-event-index';
export const kafkaGoogleCalendarSyncTopic = 'google-calendar-sync';
export const kafkaGoogleCalendarSyncGroupId = 'google-calendar-sync';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUM7QUFDekUsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUM7QUFFckUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQztBQUN6RSxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUM7QUFFbEQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUM7QUFDN0QsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQztBQUNsRSxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsY0FBYyxDQUFDO0FBQzlDLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEdBQUcsQ0FBQztBQUNwQyxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsa0JBQWtCLENBQUM7QUFFOUMsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsUUFBUSxDQUFDO0FBRS9DLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLFFBQVEsQ0FBQztBQUM3QyxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxpQkFBaUIsQ0FBQztBQUVsRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxRQUFRLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztBQUNsRSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0FBQzFFLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUM7QUFDbEUsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLHFDQUFxQyxDQUFDO0FBQ3BFLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUM7QUFDMUUsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQztBQUUvRSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxNQUFNLENBQUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztBQUMvRCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7QUFDdkQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLHdCQUF3QixDQUFDO0FBQ3BELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLGlCQUFpQixDQUFDO0FBQ2xELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRywrQ0FBK0MsQ0FBQztBQUU5RSxpQkFBaUI7QUFDakIsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQzdDLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkJBQTJCLENBQUM7QUFFMUMsZ0JBQWdCO0FBQ2hCLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQUE0QixDQUFDO0FBRTNDLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDO0FBQzlELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDO0FBQzFELE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQztBQUVyRCxrQ0FBa0M7QUFDbEMsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUM7QUFFOUMsTUFBTSxDQUFDLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDO0FBRWhELE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO0FBRTlELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLDBCQUEwQixDQUFDO0FBRTVELE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHLElBQUksQ0FBQztBQUVqRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxlQUFlLENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsbUJBQW1CLENBQUM7QUFDNUQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDO0FBRTNDLE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUFHLFlBQVksQ0FBQztBQUVuRCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FDckMsc0RBQXNELENBQUM7QUFFekQsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsWUFBWSxDQUFDO0FBQ3JELE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFHLElBQUksQ0FBQztBQUNuRCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyw0QkFBNEIsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyxzQkFBc0IsQ0FBQztBQUNuRSxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxzQkFBc0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBoYXN1cmFNZXRhZGF0YVVybCA9IHByb2Nlc3MuZW52LkhBU1VSQV9HUkFQSFFMX01FVEFEQVRBX1VSTDtcbmV4cG9ydCBjb25zdCBoYXN1cmFHcmFwaFVybCA9IHByb2Nlc3MuZW52LkhBU1VSQV9HUkFQSFFMX0dSQVBIUUxfVVJMO1xuXG5leHBvcnQgY29uc3QgaGFzdXJhQWRtaW5TZWNyZXQgPSBwcm9jZXNzLmVudi5IQVNVUkFfR1JBUEhRTF9BRE1JTl9TRUNSRVQ7XG5leHBvcnQgY29uc3QgYXV0aEFwaVRva2VuID0gcHJvY2Vzcy5lbnYuQVBJX1RPS0VOO1xuXG5leHBvcnQgY29uc3QgdGV4dDJWZWN0b3JVcmwgPSBwcm9jZXNzLmVudi5URVhUX1RPX1ZFQ1RPUl9VUkw7XG5leHBvcnQgY29uc3Qgb3BlblNlYXJjaEVuZFBvaW50ID0gcHJvY2Vzcy5lbnYuT1BFTlNFQVJDSF9FTkRQT0lOVDtcbmV4cG9ydCBjb25zdCBldmVudFZlY3Rvck5hbWUgPSAnZXZlbnQtdmVjdG9yJztcbmV4cG9ydCBjb25zdCB2ZWN0b3JEaW1lbnNpb25zID0gMzg0O1xuZXhwb3J0IGNvbnN0IHNlYXJjaEluZGV4ID0gJ2tubi1ldmVudHMtaW5kZXgnO1xuXG5leHBvcnQgY29uc3QgZ29vZ2xlQ2FsZW5kYXJSZXNvdXJjZSA9ICdnb29nbGUnO1xuXG5leHBvcnQgY29uc3QgZ29vZ2xlUGVvcGxlUmVzb3VyY2UgPSAnZ29vZ2xlJztcbmV4cG9ydCBjb25zdCBnb29nbGVQZW9wbGVOYW1lID0gJ0dvb2dsZSBDb250YWN0cyc7XG5cbmV4cG9ydCBjb25zdCBnb29nbGVNZWV0UmVzb3VyY2UgPSAnZ29vZ2xlJztcbmV4cG9ydCBjb25zdCBnb29nbGVDbGllbnRJZElvcyA9IHByb2Nlc3MuZW52LkdPT0dMRV9DbElFTlRfSURfSU9TO1xuZXhwb3J0IGNvbnN0IGdvb2dsZUNsaWVudElkQW5kcm9pZCA9IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfSURfQU5EUk9JRDtcbmV4cG9ydCBjb25zdCBnb29nbGVDbGllbnRJZFdlYiA9IHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfSURfV0VCO1xuZXhwb3J0IGNvbnN0IGdvb2dsZVRva2VuVXJsID0gJ2h0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuJztcbmV4cG9ydCBjb25zdCBnb29nbGVDbGllbnRTZWNyZXRXZWIgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX1NFQ1JFVF9XRUI7XG5leHBvcnQgY29uc3QgZ29vZ2xlQ2xpZW50SWRBdG9taWNXZWIgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEX0FUT01JQ19XRUI7XG5cbmV4cG9ydCBjb25zdCB6b29tUmVzb3VyY2VOYW1lID0gJ3pvb20nO1xuZXhwb3J0IGNvbnN0IHpvb21DbGllbnRTZWNyZXQgPSBwcm9jZXNzLmVudi5aT09NX0NMSUVOVF9TRUNSRVQ7XG5leHBvcnQgY29uc3Qgem9vbUNsaWVudElkID0gcHJvY2Vzcy5lbnYuWk9PTV9DTElFTlRfSUQ7XG5leHBvcnQgY29uc3Qgem9vbUJhc2VVcmwgPSAnaHR0cHM6Ly9hcGkuem9vbS51cy92Mic7XG5leHBvcnQgY29uc3Qgem9vbUJhc2VUb2tlblVybCA9ICdodHRwczovL3pvb20udXMnO1xuZXhwb3J0IGNvbnN0IGdvb2dsZUNvbG9yVXJsID0gJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2NhbGVuZGFyL3YzL2NvbG9ycyc7XG5cbi8vIENIQU5HRSBUSElTISEhXG5leHBvcnQgY29uc3Qgc2VsZkdvb2dsZUNhbGVuZGFyV2ViaG9va1B1YmxpY1VybCA9XG4gIHByb2Nlc3MuZW52LkdPT0dMRV9DQUxFTkRBUl9XRUJIT09LX1VSTDtcblxuLy8gQ0hBTkdFIFRISVMhIVxuZXhwb3J0IGNvbnN0IHNlbGZHb29nbGVQZW9wbGVBZG1pblVybCA9XG4gIHByb2Nlc3MuZW52LkdPT0dMRV9QRU9QTEVfU1lOQ19BRE1JTl9VUkw7XG5cbmV4cG9ydCBjb25zdCB6b29tU2FsdEZvclBhc3MgPSBwcm9jZXNzLmVudi5aT09NX1NBTFRfRk9SX1BBU1M7XG5leHBvcnQgY29uc3Qgem9vbUlWRm9yUGFzcyA9IHByb2Nlc3MuZW52LlpPT01fSVZfRk9SX1BBU1M7XG5leHBvcnQgY29uc3Qgem9vbVBhc3NLZXkgPSBwcm9jZXNzLmVudi5aT09NX1BBU1NfS0VZO1xuXG4vLyBHT09HTEVfQ0xJRU5UX1NFQ1JFVF9BVE9NSUNfV0VCXG5leHBvcnQgY29uc3QgZ29vZ2xlQ2xpZW50U2VjcmV0QXRvbWljV2ViID1cbiAgcHJvY2Vzcy5lbnYuR09PR0xFX0NMSUVOVF9TRUNSRVRfQVRPTUlDX1dFQjtcblxuZXhwb3J0IGNvbnN0IGJ1Y2tldE5hbWUgPSBwcm9jZXNzLmVudi5TM19CVUNLRVQ7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0T3BlbkFJQVBJS2V5ID0gcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVk7XG5cbmV4cG9ydCBjb25zdCBvcGVuQWxsRXZlbnRJbmRleCA9ICdrbm4tb3Blbi1hbGwtZXZlbnQtaW5kZXgnO1xuXG5leHBvcnQgY29uc3Qgb3BlbkFsbEV2ZW50VmVjdG9yRGltZW5zaW9ucyA9IDE1MzY7XG5cbmV4cG9ydCBjb25zdCBvcGVuQUlDaGF0R1BUMzVNb2RlbCA9ICdncHQtMy41LXR1cmJvJztcbmV4cG9ydCBjb25zdCBvcGVuQUlDaGF0R1BUMzVMb25nTW9kZWwgPSAnZ3B0LTMuNS10dXJiby0xNmsnO1xuZXhwb3J0IGNvbnN0IG9wZW5BSUNoYXRHUFQ0TW9kZWwgPSAnZ3B0LTQnO1xuXG5leHBvcnQgY29uc3Qgb3BlbkFsbEV2ZW50VmVjdG9yTmFtZSA9ICdlbWJlZGRpbmdzJztcblxuZXhwb3J0IGNvbnN0IGdvb2dsZUNhbGVuZGFyU3RvcFdhdGNoVXJsID1cbiAgJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2NhbGVuZGFyL3YzL2NoYW5uZWxzL3N0b3AnO1xuXG5leHBvcnQgY29uc3Qgb3BlblRyYWluRXZlbnRWZWN0b3JOYW1lID0gJ2VtYmVkZGluZ3MnO1xuZXhwb3J0IGNvbnN0IG9wZW5UcmFpbkV2ZW50VmVjdG9yRGltZW5zaW9ucyA9IDE1MzY7XG5leHBvcnQgY29uc3Qgb3BlblRyYWluRXZlbnRJbmRleCA9ICdrbm4tb3Blbi10cmFpbi1ldmVudC1pbmRleCc7XG5cbmV4cG9ydCBjb25zdCBrYWZrYUdvb2dsZUNhbGVuZGFyU3luY1RvcGljID0gJ2dvb2dsZS1jYWxlbmRhci1zeW5jJztcbmV4cG9ydCBjb25zdCBrYWZrYUdvb2dsZUNhbGVuZGFyU3luY0dyb3VwSWQgPSAnZ29vZ2xlLWNhbGVuZGFyLXN5bmMnO1xuIl19