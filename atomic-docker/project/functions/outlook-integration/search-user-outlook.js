import { searchUserOutlookEmails } from '../outlook-service/service';
const handler = async (req, res) => {
    const userId = req.body.session_variables['x-hasura-user-id'];
    const { query, maxResults = 10 } = req.body.input;
    if (!userId) {
        return res
            .status(401)
            .json({ success: false, message: 'User ID is missing. Unauthorized.' });
    }
    try {
        const results = await searchUserOutlookEmails(userId, query, maxResults);
        return res.status(200).json({ success: true, results });
    }
    catch (error) {
        console.error('Error searching Outlook emails:', error);
        return res
            .status(500)
            .json({ success: false, message: 'Error searching Outlook emails.' });
    }
};
export default handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLXVzZXItb3V0bG9vay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNlYXJjaC11c2VyLW91dGxvb2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFjckUsTUFBTSxPQUFPLEdBQUcsS0FBSyxFQUNuQixHQUFrRCxFQUNsRCxHQUFhLEVBQ2IsRUFBRTtJQUNGLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQUM5RCxNQUFNLEVBQUUsS0FBSyxFQUFFLFVBQVUsR0FBRyxFQUFFLEVBQUUsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUVsRCxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7UUFDWixPQUFPLEdBQUc7YUFDUCxNQUFNLENBQUMsR0FBRyxDQUFDO2FBQ1gsSUFBSSxDQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFRCxJQUFJLENBQUM7UUFDSCxNQUFNLE9BQU8sR0FBRyxNQUFNLHVCQUF1QixDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDekUsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBQUMsT0FBTyxLQUFLLEVBQUUsQ0FBQztRQUNmLE9BQU8sQ0FBQyxLQUFLLENBQUMsaUNBQWlDLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDeEQsT0FBTyxHQUFHO2FBQ1AsTUFBTSxDQUFDLEdBQUcsQ0FBQzthQUNYLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLENBQUMsQ0FBQztJQUMxRSxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsZUFBZSxPQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgc2VhcmNoVXNlck91dGxvb2tFbWFpbHMgfSBmcm9tICcuLi9vdXRsb29rLXNlcnZpY2Uvc2VydmljZSc7XG5cbmludGVyZmFjZSBTZWFyY2hVc2VyT3V0bG9va0lucHV0IHtcbiAgcXVlcnk6IHN0cmluZztcbiAgbWF4UmVzdWx0cz86IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIFNlYXJjaFVzZXJPdXRsb29rUmVxdWVzdEJvZHkge1xuICBzZXNzaW9uX3ZhcmlhYmxlczoge1xuICAgICd4LWhhc3VyYS11c2VyLWlkJzogc3RyaW5nO1xuICB9O1xuICBpbnB1dDogU2VhcmNoVXNlck91dGxvb2tJbnB1dDtcbn1cblxuY29uc3QgaGFuZGxlciA9IGFzeW5jIChcbiAgcmVxOiBSZXF1ZXN0PHt9LCB7fSwgU2VhcmNoVXNlck91dGxvb2tSZXF1ZXN0Qm9keT4sXG4gIHJlczogUmVzcG9uc2VcbikgPT4ge1xuICBjb25zdCB1c2VySWQgPSByZXEuYm9keS5zZXNzaW9uX3ZhcmlhYmxlc1sneC1oYXN1cmEtdXNlci1pZCddO1xuICBjb25zdCB7IHF1ZXJ5LCBtYXhSZXN1bHRzID0gMTAgfSA9IHJlcS5ib2R5LmlucHV0O1xuXG4gIGlmICghdXNlcklkKSB7XG4gICAgcmV0dXJuIHJlc1xuICAgICAgLnN0YXR1cyg0MDEpXG4gICAgICAuanNvbih7IHN1Y2Nlc3M6IGZhbHNlLCBtZXNzYWdlOiAnVXNlciBJRCBpcyBtaXNzaW5nLiBVbmF1dGhvcml6ZWQuJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IHNlYXJjaFVzZXJPdXRsb29rRW1haWxzKHVzZXJJZCwgcXVlcnksIG1heFJlc3VsdHMpO1xuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUsIHJlc3VsdHMgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VhcmNoaW5nIE91dGxvb2sgZW1haWxzOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzXG4gICAgICAuc3RhdHVzKDUwMClcbiAgICAgIC5qc29uKHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6ICdFcnJvciBzZWFyY2hpbmcgT3V0bG9vayBlbWFpbHMuJyB9KTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcbiJdfQ==