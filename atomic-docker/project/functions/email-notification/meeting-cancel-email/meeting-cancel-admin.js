import { sendBulkCancelToMeetingEmail } from '@email_notification/_libs/api-helpter';
const handler = async (req, res) => {
    try {
        const eventItem = req.body;
        // validate
        if (!(eventItem?.attendees?.length > 0)) {
            return res.status(400).json({
                message: 'missing attendees',
                event: eventItem,
            });
        }
        if (!eventItem?.hostName) {
            return res.status(400).json({
                message: 'missing hostName',
                event: eventItem,
            });
        }
        if (!eventItem?.hostEmail) {
            return res.status(400).json({
                message: 'missing hostEmail',
                event: eventItem,
            });
        }
        await sendBulkCancelToMeetingEmail(eventItem);
        res.status(200).send('successfully sendBulkCancelToMeetingEmail');
    }
    catch (e) {
        console.log(e, ' unable to process message');
        console.log(res.status(400).json({
            message: `error processing queue mesages: message: ${e?.message}, code: ${e?.statusCode}`,
        }));
        res.status(400).json(e);
    }
};
export default handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVldGluZy1jYW5jZWwtYWRtaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJtZWV0aW5nLWNhbmNlbC1hZG1pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUdyRixNQUFNLE9BQU8sR0FBRyxLQUFLLEVBQUUsR0FBWSxFQUFFLEdBQWEsRUFBRSxFQUFFO0lBQ3BELElBQUksQ0FBQztRQUNILE1BQU0sU0FBUyxHQUE4QyxHQUFHLENBQUMsSUFBSSxDQUFDO1FBQ3RFLFdBQVc7UUFFWCxJQUFJLENBQUMsQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDO1lBQ3hDLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxDQUFDO1lBQ3pCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxrQkFBa0I7Z0JBQzNCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxDQUFDO1lBQzFCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLEtBQUssRUFBRSxTQUFTO2FBQ2pCLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxNQUFNLDRCQUE0QixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTlDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLDJDQUEyQyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7UUFDWCxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSw0QkFBNEIsQ0FBQyxDQUFDO1FBRTdDLE9BQU8sQ0FBQyxHQUFHLENBQ1QsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDbkIsT0FBTyxFQUFFLDRDQUE0QyxDQUFDLEVBQUUsT0FBTyxXQUFXLENBQUMsRUFBRSxVQUFVLEVBQUU7U0FDMUYsQ0FBQyxDQUNILENBQUM7UUFFRixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsZUFBZSxPQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgc2VuZEJ1bGtDYW5jZWxUb01lZXRpbmdFbWFpbCB9IGZyb20gJ0BlbWFpbF9ub3RpZmljYXRpb24vX2xpYnMvYXBpLWhlbHB0ZXInO1xuaW1wb3J0IHsgQnVsa01lZXRpbmdDYW5jZWxsZWREZXRhaWxzVG9BdHRlbmRlZVR5cGUgfSBmcm9tICdAZW1haWxfbm90aWZpY2F0aW9uL19saWJzL3R5cGVzJztcblxuY29uc3QgaGFuZGxlciA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBldmVudEl0ZW06IEJ1bGtNZWV0aW5nQ2FuY2VsbGVkRGV0YWlsc1RvQXR0ZW5kZWVUeXBlID0gcmVxLmJvZHk7XG4gICAgLy8gdmFsaWRhdGVcblxuICAgIGlmICghKGV2ZW50SXRlbT8uYXR0ZW5kZWVzPy5sZW5ndGggPiAwKSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ21pc3NpbmcgYXR0ZW5kZWVzJyxcbiAgICAgICAgZXZlbnQ6IGV2ZW50SXRlbSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghZXZlbnRJdGVtPy5ob3N0TmFtZSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ21pc3NpbmcgaG9zdE5hbWUnLFxuICAgICAgICBldmVudDogZXZlbnRJdGVtLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKCFldmVudEl0ZW0/Lmhvc3RFbWFpbCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ21pc3NpbmcgaG9zdEVtYWlsJyxcbiAgICAgICAgZXZlbnQ6IGV2ZW50SXRlbSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGF3YWl0IHNlbmRCdWxrQ2FuY2VsVG9NZWV0aW5nRW1haWwoZXZlbnRJdGVtKTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdzdWNjZXNzZnVsbHkgc2VuZEJ1bGtDYW5jZWxUb01lZXRpbmdFbWFpbCcpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSwgJyB1bmFibGUgdG8gcHJvY2VzcyBtZXNzYWdlJyk7XG5cbiAgICBjb25zb2xlLmxvZyhcbiAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogYGVycm9yIHByb2Nlc3NpbmcgcXVldWUgbWVzYWdlczogbWVzc2FnZTogJHtlPy5tZXNzYWdlfSwgY29kZTogJHtlPy5zdGF0dXNDb2RlfWAsXG4gICAgICB9KVxuICAgICk7XG5cbiAgICByZXMuc3RhdHVzKDQwMCkuanNvbihlKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcbiJdfQ==