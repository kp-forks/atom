export const bucketName = process.env.S3_BUCKET;
export const hasuraGraphUrl = process.env.HASURA_GRAPHQL_GRAPHQL_URL;
export const hasuraAdminSecret = process.env.HASURA_GRAPHQL_ADMIN_SECRET;
export const authApiToken = process.env.API_TOKEN;
export const dayOfWeekIntToString = {
    1: 'MONDAY',
    2: 'TUESDAY',
    3: 'WEDNESDAY',
    4: 'THURSDAY',
    5: 'FRIDAY',
    6: 'SATURDAY',
    7: 'SUNDAY',
};
export const optaPlannerUrl = process.env.OPTAPLANNER_URL;
export const optaPlannerUsername = process.env.OPTAPLANNER_USERNAME;
export const optaPlannerPassword = process.env.OPTAPLANNER_PASSWORD;
// export const calendarPremiumDelay = 300000
export const optaplannerDuration = parseInt(process.env.OPTAPLANNER_DURATION, 10);
export const optaplannerShortDuration = parseInt(process.env.OPTAPLANNER_SHORT_DURATION, 10);
export const onOptaPlanCalendarAdminCallBackUrl = process.env.OPTAPLAN_ADMIN_CALLBACK_URL;
// export const defaultFreemiumUsage = 5
export const text2VectorUrl = process.env.TEXT_TO_VECTOR_URL;
export const openSearchEndPoint = process.env.OPENSEARCH_ENDPOINT;
export const eventVectorName = 'event-vector';
export const vectorDimensions = 384;
export const searchIndex = 'knn-events-index';
export const defaultOpenAIAPIKey = process.env.OPENAI_API_KEY;
export const openAllEventIndex = 'knn-open-all-event-index';
export const openAllEventVectorDimensions = 1536;
export const openAllEventVectorName = 'embeddings';
export const openTrainEventVectorName = 'embeddings';
export const openTrainEventVectorDimensions = 1536;
export const openTrainEventIndex = 'knn-open-train-event-index';
export const classificationUrl = process.env.CLASSIFICATION_URL;
export const minThresholdScore = 0.6;
export const externalMeetingLabel = 'External Meeting';
export const meetingLabel = 'Meeting';
export const kafkaScheduleEventGroupId = 'schedule-event';
export const kafkaScheduleEventTopic = 'schedule-event-worker';
export const kafkaScheduleShortEventTopic = 'schedule-short-event-worker';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUVoRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztBQUVyRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDO0FBQ3pFLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUNsRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRztJQUNsQyxDQUFDLEVBQUUsUUFBUTtJQUNYLENBQUMsRUFBRSxTQUFTO0lBQ1osQ0FBQyxFQUFFLFdBQVc7SUFDZCxDQUFDLEVBQUUsVUFBVTtJQUNiLENBQUMsRUFBRSxRQUFRO0lBQ1gsQ0FBQyxFQUFFLFVBQVU7SUFDYixDQUFDLEVBQUUsUUFBUTtDQUNaLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUM7QUFDMUQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztBQUNwRSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDO0FBRXBFLDZDQUE2QztBQUM3QyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxRQUFRLENBQ3pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLEVBQ2hDLEVBQUUsQ0FDSCxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsUUFBUSxDQUM5QyxPQUFPLENBQUMsR0FBRyxDQUFDLDBCQUEwQixFQUN0QyxFQUFFLENBQ0gsQ0FBQztBQUNGLE1BQU0sQ0FBQyxNQUFNLGtDQUFrQyxHQUM3QyxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDO0FBRTFDLHdDQUF3QztBQUN4QyxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztBQUM3RCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDO0FBQ2xFLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxjQUFjLENBQUM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxrQkFBa0IsQ0FBQztBQUU5QyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUM5RCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRywwQkFBMEIsQ0FBQztBQUM1RCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyxJQUFJLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsWUFBWSxDQUFDO0FBQ25ELE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLFlBQVksQ0FBQztBQUVyRCxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FBRyxJQUFJLENBQUM7QUFDbkQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsNEJBQTRCLENBQUM7QUFFaEUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztBQUNoRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLENBQUM7QUFDckMsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsa0JBQWtCLENBQUM7QUFDdkQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQztBQUN0QyxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxnQkFBZ0IsQ0FBQztBQUUxRCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyx1QkFBdUIsQ0FBQztBQUMvRCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyw2QkFBNkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBidWNrZXROYW1lID0gcHJvY2Vzcy5lbnYuUzNfQlVDS0VUO1xuXG5leHBvcnQgY29uc3QgaGFzdXJhR3JhcGhVcmwgPSBwcm9jZXNzLmVudi5IQVNVUkFfR1JBUEhRTF9HUkFQSFFMX1VSTDtcblxuZXhwb3J0IGNvbnN0IGhhc3VyYUFkbWluU2VjcmV0ID0gcHJvY2Vzcy5lbnYuSEFTVVJBX0dSQVBIUUxfQURNSU5fU0VDUkVUO1xuZXhwb3J0IGNvbnN0IGF1dGhBcGlUb2tlbiA9IHByb2Nlc3MuZW52LkFQSV9UT0tFTjtcbmV4cG9ydCBjb25zdCBkYXlPZldlZWtJbnRUb1N0cmluZyA9IHtcbiAgMTogJ01PTkRBWScsXG4gIDI6ICdUVUVTREFZJyxcbiAgMzogJ1dFRE5FU0RBWScsXG4gIDQ6ICdUSFVSU0RBWScsXG4gIDU6ICdGUklEQVknLFxuICA2OiAnU0FUVVJEQVknLFxuICA3OiAnU1VOREFZJyxcbn07XG5cbmV4cG9ydCBjb25zdCBvcHRhUGxhbm5lclVybCA9IHByb2Nlc3MuZW52Lk9QVEFQTEFOTkVSX1VSTDtcbmV4cG9ydCBjb25zdCBvcHRhUGxhbm5lclVzZXJuYW1lID0gcHJvY2Vzcy5lbnYuT1BUQVBMQU5ORVJfVVNFUk5BTUU7XG5leHBvcnQgY29uc3Qgb3B0YVBsYW5uZXJQYXNzd29yZCA9IHByb2Nlc3MuZW52Lk9QVEFQTEFOTkVSX1BBU1NXT1JEO1xuXG4vLyBleHBvcnQgY29uc3QgY2FsZW5kYXJQcmVtaXVtRGVsYXkgPSAzMDAwMDBcbmV4cG9ydCBjb25zdCBvcHRhcGxhbm5lckR1cmF0aW9uID0gcGFyc2VJbnQoXG4gIHByb2Nlc3MuZW52Lk9QVEFQTEFOTkVSX0RVUkFUSU9OLFxuICAxMFxuKTtcbmV4cG9ydCBjb25zdCBvcHRhcGxhbm5lclNob3J0RHVyYXRpb24gPSBwYXJzZUludChcbiAgcHJvY2Vzcy5lbnYuT1BUQVBMQU5ORVJfU0hPUlRfRFVSQVRJT04sXG4gIDEwXG4pO1xuZXhwb3J0IGNvbnN0IG9uT3B0YVBsYW5DYWxlbmRhckFkbWluQ2FsbEJhY2tVcmwgPVxuICBwcm9jZXNzLmVudi5PUFRBUExBTl9BRE1JTl9DQUxMQkFDS19VUkw7XG5cbi8vIGV4cG9ydCBjb25zdCBkZWZhdWx0RnJlZW1pdW1Vc2FnZSA9IDVcbmV4cG9ydCBjb25zdCB0ZXh0MlZlY3RvclVybCA9IHByb2Nlc3MuZW52LlRFWFRfVE9fVkVDVE9SX1VSTDtcbmV4cG9ydCBjb25zdCBvcGVuU2VhcmNoRW5kUG9pbnQgPSBwcm9jZXNzLmVudi5PUEVOU0VBUkNIX0VORFBPSU5UO1xuZXhwb3J0IGNvbnN0IGV2ZW50VmVjdG9yTmFtZSA9ICdldmVudC12ZWN0b3InO1xuZXhwb3J0IGNvbnN0IHZlY3RvckRpbWVuc2lvbnMgPSAzODQ7XG5leHBvcnQgY29uc3Qgc2VhcmNoSW5kZXggPSAna25uLWV2ZW50cy1pbmRleCc7XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0T3BlbkFJQVBJS2V5ID0gcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVk7XG5leHBvcnQgY29uc3Qgb3BlbkFsbEV2ZW50SW5kZXggPSAna25uLW9wZW4tYWxsLWV2ZW50LWluZGV4JztcbmV4cG9ydCBjb25zdCBvcGVuQWxsRXZlbnRWZWN0b3JEaW1lbnNpb25zID0gMTUzNjtcbmV4cG9ydCBjb25zdCBvcGVuQWxsRXZlbnRWZWN0b3JOYW1lID0gJ2VtYmVkZGluZ3MnO1xuZXhwb3J0IGNvbnN0IG9wZW5UcmFpbkV2ZW50VmVjdG9yTmFtZSA9ICdlbWJlZGRpbmdzJztcblxuZXhwb3J0IGNvbnN0IG9wZW5UcmFpbkV2ZW50VmVjdG9yRGltZW5zaW9ucyA9IDE1MzY7XG5leHBvcnQgY29uc3Qgb3BlblRyYWluRXZlbnRJbmRleCA9ICdrbm4tb3Blbi10cmFpbi1ldmVudC1pbmRleCc7XG5cbmV4cG9ydCBjb25zdCBjbGFzc2lmaWNhdGlvblVybCA9IHByb2Nlc3MuZW52LkNMQVNTSUZJQ0FUSU9OX1VSTDtcbmV4cG9ydCBjb25zdCBtaW5UaHJlc2hvbGRTY29yZSA9IDAuNjtcbmV4cG9ydCBjb25zdCBleHRlcm5hbE1lZXRpbmdMYWJlbCA9ICdFeHRlcm5hbCBNZWV0aW5nJztcbmV4cG9ydCBjb25zdCBtZWV0aW5nTGFiZWwgPSAnTWVldGluZyc7XG5leHBvcnQgY29uc3Qga2Fma2FTY2hlZHVsZUV2ZW50R3JvdXBJZCA9ICdzY2hlZHVsZS1ldmVudCc7XG5cbmV4cG9ydCBjb25zdCBrYWZrYVNjaGVkdWxlRXZlbnRUb3BpYyA9ICdzY2hlZHVsZS1ldmVudC13b3JrZXInO1xuZXhwb3J0IGNvbnN0IGthZmthU2NoZWR1bGVTaG9ydEV2ZW50VG9waWMgPSAnc2NoZWR1bGUtc2hvcnQtZXZlbnQtd29ya2VyJztcbiJdfQ==