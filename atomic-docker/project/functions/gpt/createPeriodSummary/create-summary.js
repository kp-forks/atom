import { createSummaryOfTimePeriod } from '../_libs/api-helper';
const handler = async (req, res) => {
    try {
        const reqBody = req?.body;
        // validate
        if (!reqBody?.userId) {
            return res.status(400).json({
                message: 'no userId present',
                event: reqBody,
            });
        }
        if (!reqBody?.startDate) {
            return res.status(400).json({
                message: 'no startDate present',
                event: reqBody,
            });
        }
        if (!reqBody?.endDate) {
            return res.status(400).json({
                message: 'no endDate present',
                event: reqBody,
            });
        }
        if (!reqBody?.timezone) {
            return res.status(400).json({
                message: 'no timezone present',
                event: reqBody,
            });
        }
        await createSummaryOfTimePeriod(reqBody?.userId, reqBody?.startDate, reqBody?.endDate, reqBody?.timezone, reqBody?.email, reqBody?.name);
        res.status(200).send('succesfully created summary of time period');
    }
    catch (e) {
        console.log(e, ' unable to create summary');
        res.status(400).json(e);
    }
};
export default handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXN1bW1hcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjcmVhdGUtc3VtbWFyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVoRSxNQUFNLE9BQU8sR0FBRyxLQUFLLEVBQUUsR0FBWSxFQUFFLEdBQWEsRUFBRSxFQUFFO0lBQ3BELElBQUksQ0FBQztRQUNILE1BQU0sT0FBTyxHQUF1QyxHQUFHLEVBQUUsSUFBSSxDQUFDO1FBRTlELFdBQVc7UUFDWCxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxDQUFDO1lBQ3JCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxtQkFBbUI7Z0JBQzVCLEtBQUssRUFBRSxPQUFPO2FBQ2YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLENBQUM7WUFDeEIsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLHNCQUFzQjtnQkFDL0IsS0FBSyxFQUFFLE9BQU87YUFDZixDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsQ0FBQztZQUN0QixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUMxQixPQUFPLEVBQUUsb0JBQW9CO2dCQUM3QixLQUFLLEVBQUUsT0FBTzthQUNmLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxDQUFDO1lBQ3ZCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxxQkFBcUI7Z0JBQzlCLEtBQUssRUFBRSxPQUFPO2FBQ2YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELE1BQU0seUJBQXlCLENBQzdCLE9BQU8sRUFBRSxNQUFNLEVBQ2YsT0FBTyxFQUFFLFNBQVMsRUFDbEIsT0FBTyxFQUFFLE9BQU8sRUFDaEIsT0FBTyxFQUFFLFFBQVEsRUFDakIsT0FBTyxFQUFFLEtBQUssRUFDZCxPQUFPLEVBQUUsSUFBSSxDQUNkLENBQUM7UUFFRixHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7SUFBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1FBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUM1QyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxQixDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsZUFBZSxPQUFPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgQ3JlYXRlUGVyaW9kU3VtbWFyeVJlcXVlc3RCb2R5VHlwZSB9IGZyb20gJy4uL19saWJzL3R5cGVzJztcbmltcG9ydCB7IGNyZWF0ZVN1bW1hcnlPZlRpbWVQZXJpb2QgfSBmcm9tICcuLi9fbGlicy9hcGktaGVscGVyJztcblxuY29uc3QgaGFuZGxlciA9IGFzeW5jIChyZXE6IFJlcXVlc3QsIHJlczogUmVzcG9uc2UpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXFCb2R5OiBDcmVhdGVQZXJpb2RTdW1tYXJ5UmVxdWVzdEJvZHlUeXBlID0gcmVxPy5ib2R5O1xuXG4gICAgLy8gdmFsaWRhdGVcbiAgICBpZiAoIXJlcUJvZHk/LnVzZXJJZCkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIHVzZXJJZCBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcUJvZHk/LnN0YXJ0RGF0ZSkge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIHN0YXJ0RGF0ZSBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcUJvZHk/LmVuZERhdGUpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdubyBlbmREYXRlIHByZXNlbnQnLFxuICAgICAgICBldmVudDogcmVxQm9keSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghcmVxQm9keT8udGltZXpvbmUpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdubyB0aW1lem9uZSBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBhd2FpdCBjcmVhdGVTdW1tYXJ5T2ZUaW1lUGVyaW9kKFxuICAgICAgcmVxQm9keT8udXNlcklkLFxuICAgICAgcmVxQm9keT8uc3RhcnREYXRlLFxuICAgICAgcmVxQm9keT8uZW5kRGF0ZSxcbiAgICAgIHJlcUJvZHk/LnRpbWV6b25lLFxuICAgICAgcmVxQm9keT8uZW1haWwsXG4gICAgICByZXFCb2R5Py5uYW1lXG4gICAgKTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdzdWNjZXNmdWxseSBjcmVhdGVkIHN1bW1hcnkgb2YgdGltZSBwZXJpb2QnKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUubG9nKGUsICcgdW5hYmxlIHRvIGNyZWF0ZSBzdW1tYXJ5Jyk7XG4gICAgcmVzLnN0YXR1cyg0MDApLmpzb24oZSk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXI7XG4iXX0=