import { createAgenda } from '../_libs/api-helper';
const handler = async (req, res) => {
    try {
        const reqBody = req.body;
        console.log(reqBody, ' reqBody');
        // validate
        if (!reqBody?.userId) {
            console.log('no userId');
            return res.status(400).json({
                message: 'no userId present',
                event: reqBody,
            });
        }
        if (!reqBody?.timezone) {
            console.log('no timezone');
            return res.status(400).json({
                message: 'no timezone present',
                event: reqBody,
            });
        }
        if (!reqBody?.startDate) {
            console.log('no startDate');
            return res.status(400).json({
                message: 'no startDate present',
                event: reqBody,
            });
        }
        if (!reqBody?.endDate) {
            console.log('no endDate');
            return res.status(400).json({
                message: 'no endDate present',
                event: reqBody,
            });
        }
        if (!reqBody?.mainTopic) {
            console.log('no mainTopic');
            return res.status(400).json({
                message: 'no mainTopic present',
                event: reqBody,
            });
        }
        await createAgenda(reqBody?.userId, reqBody?.isAllDay, reqBody?.timezone, reqBody?.startDate, reqBody?.endDate, reqBody?.mainTopic, reqBody?.email, reqBody?.name, reqBody?.relevantPoints, reqBody?.goals, reqBody?.location, reqBody?.isTwo);
        res.status(200).send('succesfully created agenda');
    }
    catch (e) {
        console.log(e, ' unable to create agenda');
        res.status(400).json(e);
    }
};
export default handler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWFnZW5kYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNyZWF0ZS1hZ2VuZGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRW5ELE1BQU0sT0FBTyxHQUFHLEtBQUssRUFBRSxHQUFZLEVBQUUsR0FBYSxFQUFFLEVBQUU7SUFDcEQsSUFBSSxDQUFDO1FBQ0gsTUFBTSxPQUFPLEdBQWdDLEdBQUcsQ0FBQyxJQUFJLENBQUM7UUFDdEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDakMsV0FBVztRQUVYLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUM7WUFDckIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUN6QixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUMxQixPQUFPLEVBQUUsbUJBQW1CO2dCQUM1QixLQUFLLEVBQUUsT0FBTzthQUNmLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxDQUFDO1lBQ3ZCLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDM0IsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLHFCQUFxQjtnQkFDOUIsS0FBSyxFQUFFLE9BQU87YUFDZixDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsSUFBSSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQztZQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQzVCLE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzFCLE9BQU8sRUFBRSxzQkFBc0I7Z0JBQy9CLEtBQUssRUFBRSxPQUFPO2FBQ2YsQ0FBQyxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxFQUFFLENBQUM7WUFDdEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztZQUMxQixPQUFPLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUMxQixPQUFPLEVBQUUsb0JBQW9CO2dCQUM3QixLQUFLLEVBQUUsT0FBTzthQUNmLENBQUMsQ0FBQztRQUNMLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxDQUFDO1lBQ3hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDNUIsT0FBTyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDMUIsT0FBTyxFQUFFLHNCQUFzQjtnQkFDL0IsS0FBSyxFQUFFLE9BQU87YUFDZixDQUFDLENBQUM7UUFDTCxDQUFDO1FBRUQsTUFBTSxZQUFZLENBQ2hCLE9BQU8sRUFBRSxNQUFNLEVBQ2YsT0FBTyxFQUFFLFFBQVEsRUFDakIsT0FBTyxFQUFFLFFBQVEsRUFDakIsT0FBTyxFQUFFLFNBQVMsRUFDbEIsT0FBTyxFQUFFLE9BQU8sRUFDaEIsT0FBTyxFQUFFLFNBQVMsRUFDbEIsT0FBTyxFQUFFLEtBQUssRUFDZCxPQUFPLEVBQUUsSUFBSSxFQUNiLE9BQU8sRUFBRSxjQUFjLEVBQ3ZCLE9BQU8sRUFBRSxLQUFLLEVBQ2QsT0FBTyxFQUFFLFFBQVEsRUFDakIsT0FBTyxFQUFFLEtBQUssQ0FDZixDQUFDO1FBRUYsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQztJQUNyRCxDQUFDO0lBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztRQUNYLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLDBCQUEwQixDQUFDLENBQUM7UUFDM0MsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUIsQ0FBQztBQUNILENBQUMsQ0FBQztBQUVGLGVBQWUsT0FBTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdCwgUmVzcG9uc2UgfSBmcm9tICdleHByZXNzJztcbmltcG9ydCB7IENyZWF0ZUFnZW5kYVJlcXVlc3RCb2R5VHlwZSB9IGZyb20gJy4uL19saWJzL3R5cGVzJztcbmltcG9ydCB7IGNyZWF0ZUFnZW5kYSB9IGZyb20gJy4uL19saWJzL2FwaS1oZWxwZXInO1xuXG5jb25zdCBoYW5kbGVyID0gYXN5bmMgKHJlcTogUmVxdWVzdCwgcmVzOiBSZXNwb25zZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHJlcUJvZHk6IENyZWF0ZUFnZW5kYVJlcXVlc3RCb2R5VHlwZSA9IHJlcS5ib2R5O1xuICAgIGNvbnNvbGUubG9nKHJlcUJvZHksICcgcmVxQm9keScpO1xuICAgIC8vIHZhbGlkYXRlXG5cbiAgICBpZiAoIXJlcUJvZHk/LnVzZXJJZCkge1xuICAgICAgY29uc29sZS5sb2coJ25vIHVzZXJJZCcpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIHVzZXJJZCBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcUJvZHk/LnRpbWV6b25lKSB7XG4gICAgICBjb25zb2xlLmxvZygnbm8gdGltZXpvbmUnKTtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgIG1lc3NhZ2U6ICdubyB0aW1lem9uZSBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcUJvZHk/LnN0YXJ0RGF0ZSkge1xuICAgICAgY29uc29sZS5sb2coJ25vIHN0YXJ0RGF0ZScpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIHN0YXJ0RGF0ZSBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcUJvZHk/LmVuZERhdGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdubyBlbmREYXRlJyk7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnbm8gZW5kRGF0ZSBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXJlcUJvZHk/Lm1haW5Ub3BpYykge1xuICAgICAgY29uc29sZS5sb2coJ25vIG1haW5Ub3BpYycpO1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgbWVzc2FnZTogJ25vIG1haW5Ub3BpYyBwcmVzZW50JyxcbiAgICAgICAgZXZlbnQ6IHJlcUJvZHksXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBhd2FpdCBjcmVhdGVBZ2VuZGEoXG4gICAgICByZXFCb2R5Py51c2VySWQsXG4gICAgICByZXFCb2R5Py5pc0FsbERheSxcbiAgICAgIHJlcUJvZHk/LnRpbWV6b25lLFxuICAgICAgcmVxQm9keT8uc3RhcnREYXRlLFxuICAgICAgcmVxQm9keT8uZW5kRGF0ZSxcbiAgICAgIHJlcUJvZHk/Lm1haW5Ub3BpYyxcbiAgICAgIHJlcUJvZHk/LmVtYWlsLFxuICAgICAgcmVxQm9keT8ubmFtZSxcbiAgICAgIHJlcUJvZHk/LnJlbGV2YW50UG9pbnRzLFxuICAgICAgcmVxQm9keT8uZ29hbHMsXG4gICAgICByZXFCb2R5Py5sb2NhdGlvbixcbiAgICAgIHJlcUJvZHk/LmlzVHdvXG4gICAgKTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5zZW5kKCdzdWNjZXNmdWxseSBjcmVhdGVkIGFnZW5kYScpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5sb2coZSwgJyB1bmFibGUgdG8gY3JlYXRlIGFnZW5kYScpO1xuICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKGUpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGVyO1xuIl19