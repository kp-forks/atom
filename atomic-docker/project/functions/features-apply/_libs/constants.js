export const bucketName = process.env.S3_BUCKET;
export const hasuraGraphUrl = process.env.HASURA_GRAPHQL_GRAPHQL_URL;
export const hasuraAdminSecret = process.env.HASURA_GRAPHQL_ADMIN_SECRET;
export const authApiToken = process.env.API_TOKEN;
export const dayOfWeekIntToString = {
    1: 'MONDAY',
    2: 'TUESDAY',
    3: 'WEDNESDAY',
    4: 'THURSDAY',
    5: 'FRIDAY',
    6: 'SATURDAY',
    7: 'SUNDAY',
};
export const optaPlannerUrl = process.env.OPTAPLANNER_URL;
export const optaPlannerUsername = process.env.OPTAPLANNER_USERNAME;
export const optaPlannerPassword = process.env.OPTAPLANNER_PASSWORD;
export const onOptaPlanCalendarAdminCallBackUrl = process.env.OPTAPLAN_ADMIN_CALLBACK_URL;
export const openSearchEndPoint = process.env.OPENSEARCH_ENDPOINT;
export const openTrainEventVectorName = 'embeddings';
export const openTrainEventVectorDimensions = 1536;
export const openTrainEventIndex = 'knn-open-train-event-index';
export const defaultOpenAIAPIKey = process.env.OPENAI_API_KEY;
export const openAllEventIndex = 'knn-open-all-event-index';
export const openAllEventVectorDimensions = 1536;
export const openAllEventVectorName = 'embeddings';
export const classificationUrl = process.env.CLASSIFICATION_URL;
export const minThresholdScore = 0.6;
export const externalMeetingLabel = 'External Meeting';
export const meetingLabel = 'Meeting';
export const kafkaFeaturesApplyGroupId = 'features-apply';
export const kafkaFeaturesApplyTopic = 'features-apply';
export const optaplannerDuration = parseInt(process.env.OPTAPLANNER_DURATION, 10);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUVoRCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztBQUVyRSxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDO0FBQ3pFLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQztBQUNsRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRztJQUNsQyxDQUFDLEVBQUUsUUFBUTtJQUNYLENBQUMsRUFBRSxTQUFTO0lBQ1osQ0FBQyxFQUFFLFdBQVc7SUFDZCxDQUFDLEVBQUUsVUFBVTtJQUNiLENBQUMsRUFBRSxRQUFRO0lBQ1gsQ0FBQyxFQUFFLFVBQVU7SUFDYixDQUFDLEVBQUUsUUFBUTtDQUNaLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUM7QUFDMUQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztBQUNwRSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDO0FBRXBFLE1BQU0sQ0FBQyxNQUFNLGtDQUFrQyxHQUM3QyxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDO0FBRTFDLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUM7QUFFbEUsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsWUFBWSxDQUFDO0FBQ3JELE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFHLElBQUksQ0FBQztBQUNuRCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyw0QkFBNEIsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztBQUU5RCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRywwQkFBMEIsQ0FBQztBQUM1RCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRyxJQUFJLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsWUFBWSxDQUFDO0FBRW5ELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUM7QUFDaEUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FBRyxDQUFDO0FBQ3JDLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLGtCQUFrQixDQUFDO0FBQ3ZELE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxTQUFTLENBQUM7QUFFdEMsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUcsZ0JBQWdCLENBQUM7QUFFMUQsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsZ0JBQWdCLENBQUM7QUFFeEQsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsUUFBUSxDQUN6QyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixFQUNoQyxFQUFFLENBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBidWNrZXROYW1lID0gcHJvY2Vzcy5lbnYuUzNfQlVDS0VUO1xuXG5leHBvcnQgY29uc3QgaGFzdXJhR3JhcGhVcmwgPSBwcm9jZXNzLmVudi5IQVNVUkFfR1JBUEhRTF9HUkFQSFFMX1VSTDtcblxuZXhwb3J0IGNvbnN0IGhhc3VyYUFkbWluU2VjcmV0ID0gcHJvY2Vzcy5lbnYuSEFTVVJBX0dSQVBIUUxfQURNSU5fU0VDUkVUO1xuZXhwb3J0IGNvbnN0IGF1dGhBcGlUb2tlbiA9IHByb2Nlc3MuZW52LkFQSV9UT0tFTjtcbmV4cG9ydCBjb25zdCBkYXlPZldlZWtJbnRUb1N0cmluZyA9IHtcbiAgMTogJ01PTkRBWScsXG4gIDI6ICdUVUVTREFZJyxcbiAgMzogJ1dFRE5FU0RBWScsXG4gIDQ6ICdUSFVSU0RBWScsXG4gIDU6ICdGUklEQVknLFxuICA2OiAnU0FUVVJEQVknLFxuICA3OiAnU1VOREFZJyxcbn07XG5cbmV4cG9ydCBjb25zdCBvcHRhUGxhbm5lclVybCA9IHByb2Nlc3MuZW52Lk9QVEFQTEFOTkVSX1VSTDtcbmV4cG9ydCBjb25zdCBvcHRhUGxhbm5lclVzZXJuYW1lID0gcHJvY2Vzcy5lbnYuT1BUQVBMQU5ORVJfVVNFUk5BTUU7XG5leHBvcnQgY29uc3Qgb3B0YVBsYW5uZXJQYXNzd29yZCA9IHByb2Nlc3MuZW52Lk9QVEFQTEFOTkVSX1BBU1NXT1JEO1xuXG5leHBvcnQgY29uc3Qgb25PcHRhUGxhbkNhbGVuZGFyQWRtaW5DYWxsQmFja1VybCA9XG4gIHByb2Nlc3MuZW52Lk9QVEFQTEFOX0FETUlOX0NBTExCQUNLX1VSTDtcblxuZXhwb3J0IGNvbnN0IG9wZW5TZWFyY2hFbmRQb2ludCA9IHByb2Nlc3MuZW52Lk9QRU5TRUFSQ0hfRU5EUE9JTlQ7XG5cbmV4cG9ydCBjb25zdCBvcGVuVHJhaW5FdmVudFZlY3Rvck5hbWUgPSAnZW1iZWRkaW5ncyc7XG5leHBvcnQgY29uc3Qgb3BlblRyYWluRXZlbnRWZWN0b3JEaW1lbnNpb25zID0gMTUzNjtcbmV4cG9ydCBjb25zdCBvcGVuVHJhaW5FdmVudEluZGV4ID0gJ2tubi1vcGVuLXRyYWluLWV2ZW50LWluZGV4JztcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRPcGVuQUlBUElLZXkgPSBwcm9jZXNzLmVudi5PUEVOQUlfQVBJX0tFWTtcblxuZXhwb3J0IGNvbnN0IG9wZW5BbGxFdmVudEluZGV4ID0gJ2tubi1vcGVuLWFsbC1ldmVudC1pbmRleCc7XG5leHBvcnQgY29uc3Qgb3BlbkFsbEV2ZW50VmVjdG9yRGltZW5zaW9ucyA9IDE1MzY7XG5leHBvcnQgY29uc3Qgb3BlbkFsbEV2ZW50VmVjdG9yTmFtZSA9ICdlbWJlZGRpbmdzJztcblxuZXhwb3J0IGNvbnN0IGNsYXNzaWZpY2F0aW9uVXJsID0gcHJvY2Vzcy5lbnYuQ0xBU1NJRklDQVRJT05fVVJMO1xuZXhwb3J0IGNvbnN0IG1pblRocmVzaG9sZFNjb3JlID0gMC42O1xuZXhwb3J0IGNvbnN0IGV4dGVybmFsTWVldGluZ0xhYmVsID0gJ0V4dGVybmFsIE1lZXRpbmcnO1xuZXhwb3J0IGNvbnN0IG1lZXRpbmdMYWJlbCA9ICdNZWV0aW5nJztcblxuZXhwb3J0IGNvbnN0IGthZmthRmVhdHVyZXNBcHBseUdyb3VwSWQgPSAnZmVhdHVyZXMtYXBwbHknO1xuXG5leHBvcnQgY29uc3Qga2Fma2FGZWF0dXJlc0FwcGx5VG9waWMgPSAnZmVhdHVyZXMtYXBwbHknO1xuXG5leHBvcnQgY29uc3Qgb3B0YXBsYW5uZXJEdXJhdGlvbiA9IHBhcnNlSW50KFxuICBwcm9jZXNzLmVudi5PUFRBUExBTk5FUl9EVVJBVElPTixcbiAgMTBcbik7XG4iXX0=