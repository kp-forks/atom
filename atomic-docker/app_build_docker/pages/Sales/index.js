"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const salesContext_1 = require("../../contexts/sales/salesContext");
const FeaturePageGuard_1 = __importDefault(require("../../lib/components/FeaturePageGuard"));
/**
 * The content for the Sales Meeting Assistant page.
 * This component is responsible for fetching and displaying sales data.
 * It assumes that role-based access has already been verified by a parent component.
 */
const SalesPageContent = () => {
    const { salesData, loading, error, fetchSalesData } = (0, salesContext_1.useSales)();
    // Fetch sales data when the component mounts.
    (0, react_1.useEffect)(() => {
        fetchSalesData();
    }, [fetchSalesData]);
    if (loading) {
        return (0, jsx_runtime_1.jsx)("div", { children: "Loading sales data..." });
    }
    if (error) {
        return (0, jsx_runtime_1.jsxs)("div", { children: ["Error: ", error.message] });
    }
    return ((0, jsx_runtime_1.jsxs)("div", { style: { padding: "20px", fontFamily: "Arial, sans-serif" }, children: [(0, jsx_runtime_1.jsxs)("div", { style: {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                }, children: [(0, jsx_runtime_1.jsx)("h1", { children: "Sales Meeting Assistant" }), (0, jsx_runtime_1.jsx)("button", { onClick: () => fetchSalesData(), disabled: loading, style: { padding: "10px 15px", cursor: "pointer" }, children: loading ? "Refreshing..." : "Refresh Data" })] }), salesData ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Upcoming Opportunities" }), (0, jsx_runtime_1.jsx)("ul", { children: salesData.opportunities.map((opp) => ((0, jsx_runtime_1.jsxs)("li", { children: [(0, jsx_runtime_1.jsx)("strong", { children: opp.name }), " - ", opp.stage, " ($", opp.value.toLocaleString(), ")"] }, opp.id))) }), (0, jsx_runtime_1.jsx)("h2", { children: "Key Contacts" }), (0, jsx_runtime_1.jsx)("ul", { children: salesData.contacts.map((contact) => ((0, jsx_runtime_1.jsx)("li", { children: contact.name }, contact.id))) }), (0, jsx_runtime_1.jsx)("h2", { children: "Pending Tasks" }), (0, jsx_runtime_1.jsx)("ul", { children: salesData.tasks.map((task) => ((0, jsx_runtime_1.jsxs)("li", { children: [task.description, " (Due: ", task.dueDate, ")"] }, task.id))) })] })) : ((0, jsx_runtime_1.jsx)("p", { children: "No sales data available. Click \"Refresh Data\" to load." }))] }));
};
/**
 * The main Sales page component.
 * It uses the FeaturePageGuard to protect the route and wraps the page content
 * with the SalesProvider to provide the necessary context.
 */
const SalesPage = () => ((0, jsx_runtime_1.jsx)(FeaturePageGuard_1.default, { role: "sales", roleName: "Sales Agent Skill", children: (0, jsx_runtime_1.jsx)(salesContext_1.SalesProvider, { children: (0, jsx_runtime_1.jsx)(SalesPageContent, {}) }) }));
exports.default = SalesPage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsaUNBQXlDO0FBQ3pDLG9FQUE0RTtBQUM1RSw2RkFBcUU7QUFFckU7Ozs7R0FJRztBQUNILE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxFQUFFO0lBQzVCLE1BQU0sRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUUsR0FBRyxJQUFBLHVCQUFRLEdBQUUsQ0FBQztJQUVqRSw4Q0FBOEM7SUFDOUMsSUFBQSxpQkFBUyxFQUFDLEdBQUcsRUFBRTtRQUNiLGNBQWMsRUFBRSxDQUFDO0lBQ25CLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7SUFFckIsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUNaLE9BQU8sb0VBQWdDLENBQUM7SUFDMUMsQ0FBQztJQUVELElBQUksS0FBSyxFQUFFLENBQUM7UUFDVixPQUFPLHVEQUFhLEtBQUssQ0FBQyxPQUFPLElBQU8sQ0FBQztJQUMzQyxDQUFDO0lBRUQsT0FBTyxDQUNMLGlDQUFLLEtBQUssRUFBRSxFQUFFLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLG1CQUFtQixFQUFFLGFBQzlELGlDQUNFLEtBQUssRUFBRTtvQkFDTCxPQUFPLEVBQUUsTUFBTTtvQkFDZixjQUFjLEVBQUUsZUFBZTtvQkFDL0IsVUFBVSxFQUFFLFFBQVE7aUJBQ3JCLGFBRUQscUVBQWdDLEVBQ2hDLG1DQUNFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxjQUFjLEVBQUUsRUFDL0IsUUFBUSxFQUFFLE9BQU8sRUFDakIsS0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFlBRWpELE9BQU8sQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxjQUFjLEdBQ3BDLElBQ0wsRUFDTCxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQ1gsNkRBQ0Usb0VBQStCLEVBQy9CLHlDQUNHLFNBQVMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUNwQywyQ0FDRSw2Q0FBUyxHQUFHLENBQUMsSUFBSSxHQUFVLFNBQUksR0FBRyxDQUFDLEtBQUssU0FDdkMsR0FBRyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUUsVUFGcEIsR0FBRyxDQUFDLEVBQUUsQ0FHVixDQUNOLENBQUMsR0FDQyxFQUVMLDBEQUFxQixFQUNyQix5Q0FDRyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FDbkMseUNBQXNCLE9BQU8sQ0FBQyxJQUFJLElBQXpCLE9BQU8sQ0FBQyxFQUFFLENBQXFCLENBQ3pDLENBQUMsR0FDQyxFQUVMLDJEQUFzQixFQUN0Qix5Q0FDRyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FDN0IsMkNBQ0csSUFBSSxDQUFDLFdBQVcsYUFBUyxJQUFJLENBQUMsT0FBTyxVQUQvQixJQUFJLENBQUMsRUFBRSxDQUVYLENBQ04sQ0FBQyxHQUNDLElBQ0osQ0FDSixDQUFDLENBQUMsQ0FBQyxDQUNGLHFHQUE2RCxDQUM5RCxJQUNHLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGOzs7O0dBSUc7QUFDSCxNQUFNLFNBQVMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUN0Qix1QkFBQywwQkFBZ0IsSUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLFFBQVEsRUFBQyxtQkFBbUIsWUFDekQsdUJBQUMsNEJBQWEsY0FDWix1QkFBQyxnQkFBZ0IsS0FBRyxHQUNOLEdBQ0MsQ0FDcEIsQ0FBQztBQUVGLGtCQUFlLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVNhbGVzLCBTYWxlc1Byb3ZpZGVyIH0gZnJvbSBcIi4uLy4uL2NvbnRleHRzL3NhbGVzL3NhbGVzQ29udGV4dFwiO1xuaW1wb3J0IEZlYXR1cmVQYWdlR3VhcmQgZnJvbSBcIi4uLy4uL2xpYi9jb21wb25lbnRzL0ZlYXR1cmVQYWdlR3VhcmRcIjtcblxuLyoqXG4gKiBUaGUgY29udGVudCBmb3IgdGhlIFNhbGVzIE1lZXRpbmcgQXNzaXN0YW50IHBhZ2UuXG4gKiBUaGlzIGNvbXBvbmVudCBpcyByZXNwb25zaWJsZSBmb3IgZmV0Y2hpbmcgYW5kIGRpc3BsYXlpbmcgc2FsZXMgZGF0YS5cbiAqIEl0IGFzc3VtZXMgdGhhdCByb2xlLWJhc2VkIGFjY2VzcyBoYXMgYWxyZWFkeSBiZWVuIHZlcmlmaWVkIGJ5IGEgcGFyZW50IGNvbXBvbmVudC5cbiAqL1xuY29uc3QgU2FsZXNQYWdlQ29udGVudCA9ICgpID0+IHtcbiAgY29uc3QgeyBzYWxlc0RhdGEsIGxvYWRpbmcsIGVycm9yLCBmZXRjaFNhbGVzRGF0YSB9ID0gdXNlU2FsZXMoKTtcblxuICAvLyBGZXRjaCBzYWxlcyBkYXRhIHdoZW4gdGhlIGNvbXBvbmVudCBtb3VudHMuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZmV0Y2hTYWxlc0RhdGEoKTtcbiAgfSwgW2ZldGNoU2FsZXNEYXRhXSk7XG5cbiAgaWYgKGxvYWRpbmcpIHtcbiAgICByZXR1cm4gPGRpdj5Mb2FkaW5nIHNhbGVzIGRhdGEuLi48L2Rpdj47XG4gIH1cblxuICBpZiAoZXJyb3IpIHtcbiAgICByZXR1cm4gPGRpdj5FcnJvcjoge2Vycm9yLm1lc3NhZ2V9PC9kaXY+O1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IHN0eWxlPXt7IHBhZGRpbmc6IFwiMjBweFwiLCBmb250RmFtaWx5OiBcIkFyaWFsLCBzYW5zLXNlcmlmXCIgfX0+XG4gICAgICA8ZGl2XG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtYmV0d2VlblwiLFxuICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxoMT5TYWxlcyBNZWV0aW5nIEFzc2lzdGFudDwvaDE+XG4gICAgICAgIDxidXR0b25cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBmZXRjaFNhbGVzRGF0YSgpfVxuICAgICAgICAgIGRpc2FibGVkPXtsb2FkaW5nfVxuICAgICAgICAgIHN0eWxlPXt7IHBhZGRpbmc6IFwiMTBweCAxNXB4XCIsIGN1cnNvcjogXCJwb2ludGVyXCIgfX1cbiAgICAgICAgPlxuICAgICAgICAgIHtsb2FkaW5nID8gXCJSZWZyZXNoaW5nLi4uXCIgOiBcIlJlZnJlc2ggRGF0YVwifVxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuICAgICAge3NhbGVzRGF0YSA/IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8aDI+VXBjb21pbmcgT3Bwb3J0dW5pdGllczwvaDI+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAge3NhbGVzRGF0YS5vcHBvcnR1bml0aWVzLm1hcCgob3BwKSA9PiAoXG4gICAgICAgICAgICAgIDxsaSBrZXk9e29wcC5pZH0+XG4gICAgICAgICAgICAgICAgPHN0cm9uZz57b3BwLm5hbWV9PC9zdHJvbmc+IC0ge29wcC5zdGFnZX0gKCRcbiAgICAgICAgICAgICAgICB7b3BwLnZhbHVlLnRvTG9jYWxlU3RyaW5nKCl9KVxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC91bD5cblxuICAgICAgICAgIDxoMj5LZXkgQ29udGFjdHM8L2gyPlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICAgIHtzYWxlc0RhdGEuY29udGFjdHMubWFwKChjb250YWN0KSA9PiAoXG4gICAgICAgICAgICAgIDxsaSBrZXk9e2NvbnRhY3QuaWR9Pntjb250YWN0Lm5hbWV9PC9saT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvdWw+XG5cbiAgICAgICAgICA8aDI+UGVuZGluZyBUYXNrczwvaDI+XG4gICAgICAgICAgPHVsPlxuICAgICAgICAgICAge3NhbGVzRGF0YS50YXNrcy5tYXAoKHRhc2spID0+IChcbiAgICAgICAgICAgICAgPGxpIGtleT17dGFzay5pZH0+XG4gICAgICAgICAgICAgICAge3Rhc2suZGVzY3JpcHRpb259IChEdWU6IHt0YXNrLmR1ZURhdGV9KVxuICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgPC91bD5cbiAgICAgICAgPC8+XG4gICAgICApIDogKFxuICAgICAgICA8cD5ObyBzYWxlcyBkYXRhIGF2YWlsYWJsZS4gQ2xpY2sgXCJSZWZyZXNoIERhdGFcIiB0byBsb2FkLjwvcD5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG4vKipcbiAqIFRoZSBtYWluIFNhbGVzIHBhZ2UgY29tcG9uZW50LlxuICogSXQgdXNlcyB0aGUgRmVhdHVyZVBhZ2VHdWFyZCB0byBwcm90ZWN0IHRoZSByb3V0ZSBhbmQgd3JhcHMgdGhlIHBhZ2UgY29udGVudFxuICogd2l0aCB0aGUgU2FsZXNQcm92aWRlciB0byBwcm92aWRlIHRoZSBuZWNlc3NhcnkgY29udGV4dC5cbiAqL1xuY29uc3QgU2FsZXNQYWdlID0gKCkgPT4gKFxuICA8RmVhdHVyZVBhZ2VHdWFyZCByb2xlPVwic2FsZXNcIiByb2xlTmFtZT1cIlNhbGVzIEFnZW50IFNraWxsXCI+XG4gICAgPFNhbGVzUHJvdmlkZXI+XG4gICAgICA8U2FsZXNQYWdlQ29udGVudCAvPlxuICAgIDwvU2FsZXNQcm92aWRlcj5cbiAgPC9GZWF0dXJlUGFnZUd1YXJkPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgU2FsZXNQYWdlO1xuIl19