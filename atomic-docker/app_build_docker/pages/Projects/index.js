"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const projectContext_1 = require("../../contexts/projects/projectContext");
const FeaturePageGuard_1 = __importDefault(require("../../lib/components/FeaturePageGuard"));
/**
 * The main content component for the Project Status Reporter page.
 * It handles fetching, displaying, and refreshing project data,
 * and ensures the user has the correct role to view the content.
 */
const ProjectPageContent = () => {
    const { projectData, loading, error, fetchProjectData } = (0, projectContext_1.useProject)();
    (0, react_1.useEffect)(() => {
        // Fetch data when the component mounts.
        fetchProjectData();
    }, [fetchProjectData]);
    // Show a loading message while fetching data.
    if (loading && !projectData) {
        return (0, jsx_runtime_1.jsx)("div", { children: "Loading project data..." });
    }
    // Show an error message if fetching fails.
    if (error) {
        return (0, jsx_runtime_1.jsxs)("div", { children: ["Error: ", error.message] });
    }
    // Helper to determine the color for the project status badge.
    const getStatusColor = (status) => {
        switch (status) {
            case "On Track":
                return "green";
            case "At Risk":
                return "orange";
            case "Off Track":
                return "red";
            default:
                return "grey";
        }
    };
    return ((0, jsx_runtime_1.jsxs)("div", { style: { padding: "20px", fontFamily: "Arial, sans-serif" }, children: [(0, jsx_runtime_1.jsxs)("div", { style: {
                    display: "flex",
                    justifyContent: "space-between",
                    alignItems: "center",
                }, children: [(0, jsx_runtime_1.jsx)("h1", { children: "Project Status Reporter" }), (0, jsx_runtime_1.jsx)("button", { onClick: () => fetchProjectData(), disabled: loading, style: { padding: "10px 15px", cursor: "pointer" }, children: loading ? "Refreshing..." : "Refresh Data" })] }), projectData ? ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("div", { style: { marginBottom: "30px" }, children: [(0, jsx_runtime_1.jsxs)("h2", { children: [projectData.project.name, " ", (0, jsx_runtime_1.jsx)("span", { style: {
                                            backgroundColor: getStatusColor(projectData.project.status),
                                            color: "white",
                                            padding: "4px 8px",
                                            borderRadius: "12px",
                                            fontSize: "0.8em",
                                            verticalAlign: "middle",
                                        }, children: projectData.project.status })] }), (0, jsx_runtime_1.jsx)("p", { children: projectData.project.description })] }), (0, jsx_runtime_1.jsxs)("div", { style: { marginBottom: "30px" }, children: [(0, jsx_runtime_1.jsx)("h3", { children: "Tasks" }), (0, jsx_runtime_1.jsx)("ul", { style: { listStyle: "none", padding: 0 }, children: projectData.tasks.map((task) => ((0, jsx_runtime_1.jsxs)("li", { style: { borderBottom: "1px solid #eee", padding: "10px 0" }, children: [(0, jsx_runtime_1.jsx)("strong", { children: task.title }), " - ", task.assignee, " (", task.status, ")"] }, task.id))) })] }), (0, jsx_runtime_1.jsxs)("div", { style: { marginBottom: "30px" }, children: [(0, jsx_runtime_1.jsx)("h3", { children: "Team" }), (0, jsx_runtime_1.jsx)("ul", { style: { listStyle: "none", padding: 0 }, children: projectData.team.map((member) => ((0, jsx_runtime_1.jsxs)("li", { style: { padding: "5px 0" }, children: [member.name, " (", member.role, ")"] }, member.id))) })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { children: "Recent Activity" }), (0, jsx_runtime_1.jsx)("ul", { style: { listStyle: "none", padding: 0 }, children: projectData.activityStream.map((activity) => ((0, jsx_runtime_1.jsxs)("li", { style: { borderBottom: "1px solid #eee", padding: "10px 0" }, children: [(0, jsx_runtime_1.jsxs)("span", { style: { color: "#666" }, children: [new Date(activity.timestamp).toLocaleString(), ":"] }), " ", activity.description] }, activity.id))) })] })] })) : ((0, jsx_runtime_1.jsx)("p", { children: "No project data available. Click \"Refresh Data\" to load." }))] }));
};
/**
 * The main Projects page component.
 * It wraps the page content with the ProjectProvider to ensure
 * the context is available to all child components.
 */
const ProjectsPage = () => ((0, jsx_runtime_1.jsx)(FeaturePageGuard_1.default, { role: "project_manager", roleName: "Project Manager Agent Skill", children: (0, jsx_runtime_1.jsx)(projectContext_1.ProjectProvider, { children: (0, jsx_runtime_1.jsx)(ProjectPageContent, {}) }) }));
exports.default = ProjectsPage;
//# sourceMappingURL=data:application/json;base64,