"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const SideBarWithHeader_1 = __importDefault(require("../../layouts/SideBarWithHeader"));
const user_context_1 = require("../../lib/user-context");
const user_context_2 = require("../../lib/user-context");
const material_1 = require("@mui/material");
const recharts_1 = require("recharts");
const icons_1 = require("@material-ui/icons");
const FinanceDashboard = () => {
    const { user } = (0, user_context_1.useUser)();
    const { hasRole } = (0, user_context_2.useUserRole)();
    const [activeTab, setActiveTab] = (0, react_1.useState)(0);
    const [accounts, setAccounts] = (0, react_1.useState)([]);
    const [transactions, setTransactions] = (0, react_1.useState)([]);
    const [budgets, setBudgets] = (0, react_1.useState)([]);
    const [goals, setGoals] = (0, react_1.useState)([]);
    const [netWorthHistory, setNetWorthHistory] = (0, react_1.useState)([]);
    const [netWorth, setNetWorth] = (0, react_1.useState)(0);
    const [loading, setLoading] = (0, react_1.useState)(true);
    const fetchAllData = (0, react_1.useCallback)(async () => {
        try {
            // Mock data for demo - replace with actual API calls
            const mockAccounts = [
                {
                    id: "1",
                    name: "Chase Checking",
                    type: "checking",
                    balance: 5234.56,
                    institution: "Chase",
                },
                {
                    id: "2",
                    name: "High Yield Savings",
                    type: "savings",
                    balance: 15890.23,
                    institution: "Ally",
                },
                {
                    id: "3",
                    name: "Investment Account",
                    type: "investment",
                    balance: 48750.89,
                    institution: "Vanguard",
                },
                {
                    id: "4",
                    name: "Credit Card",
                    type: "credit",
                    balance: -1298.45,
                    institution: "Bank of America",
                },
            ];
            const mockTransactions = [
                {
                    id: "1",
                    name: "Whole Foods",
                    amount: -127.45,
                    date: "2024-12-10",
                    category: "Groceries",
                    merchant: "Whole Foods Market",
                },
                {
                    id: "2",
                    name: "Salary Deposit",
                    amount: 3500.0,
                    date: "2024-12-05",
                    category: "Income",
                    merchant: "Employer Inc.",
                },
                {
                    id: "3",
                    name: "Netflix Subscription",
                    amount: -15.99,
                    date: "2024-12-01",
                    category: "Entertainment",
                    merchant: "Netflix",
                },
                {
                    id: "4",
                    name: "Gas Station",
                    amount: -45.3,
                    date: "2024-11-28",
                    category: "Transportation",
                    merchant: "Shell",
                },
            ];
            const mockBudgets = [
                {
                    category: "Groceries",
                    budgeted: 500,
                    spent: 420,
                    remaining: 80,
                    utilization: 84,
                },
                {
                    category: "Dining",
                    budgeted: 300,
                    spent: 285,
                    remaining: 15,
                    utilization: 95,
                },
                {
                    category: "Transportation",
                    budgeted: 200,
                    spent: 145,
                    remaining: 55,
                    utilization: 72.5,
                },
                {
                    category: "Entertainment",
                    budgeted: 150,
                    spent: 180,
                    remaining: -30,
                    utilization: 120,
                },
                {
                    category: "Shopping",
                    budgeted: 250,
                    spent: 190,
                    remaining: 60,
                    utilization: 76,
                },
            ];
            const mockGoals = [
                {
                    id: "1",
                    name: "Emergency Fund",
                    description: "3-6 months living expenses",
                    targetAmount: 15000,
                    current: 8750,
                    progress: 58.3,
                    goalType: "emergency",
                },
                {
                    id: "2",
                    name: "Vacation Fund - Hawaii",
                    description: "2-week family vacation",
                    targetAmount: 8000,
                    current: 2200,
                    progress: 27.5,
                    goalType: "vacation",
                    targetDate: "2025-06-30",
                },
                {
                    id: "3",
                    name: "Retirement IRA",
                    description: "Annual contribution",
                    targetAmount: 6500,
                    current: 4800,
                    progress: 73.8,
                    goalType: "retirement",
                },
            ];
            const mockNetWorth = [
                {
                    date: "Nov 2024",
                    netWorth: 125430,
                    assets: 145430,
                    liabilities: 20000,
                },
                {
                    date: "Oct 2024",
                    netWorth: 122190,
                    assets: 141190,
                    liabilities: 19000,
                },
                {
                    date: "Sep 2024",
                    netWorth: 119890,
                    assets: 137890,
                    liabilities: 18000,
                },
                {
                    date: "Aug 2024",
                    netWorth: 116290,
                    assets: 133290,
                    liabilities: 17000,
                },
            ];
            setAccounts(mockAccounts);
            setTransactions(mockTransactions);
            setBudgets(mockBudgets);
            setGoals(mockGoals);
            setNetWorthHistory(mockNetWorth);
            setNetWorth(netWorthHistory[netWorthHistory.length - 1]?.netWorth || 0);
        }
        catch (error) {
            console.error("Error fetching finance data:", error);
        }
        finally {
            setLoading(false);
        }
    }, []);
    (0, react_1.useEffect)(() => {
        if (user && hasRole("finance")) {
            fetchAllData();
        }
    }, [user, hasRole, fetchAllData]);
    const totalAssets = accounts
        .filter((acc) => [
        "checking",
        "savings",
        "investment",
        "money_market",
        "certificate_of_deposit",
        "brokerage",
    ].includes(acc.type))
        .reduce((sum, acc) => sum + acc.balance, 0);
    const totalLiabilities = accounts
        .filter((acc) => ["credit", "loan", "mortgage", "liability"].includes(acc.type))
        .reduce((sum, acc) => sum + Math.abs(acc.balance), 0);
    const spendingByCategory = transactions
        .filter((t) => t.amount < 0)
        .reduce((acc, t) => {
        const cat = t.category;
        acc[cat] = (acc[cat] || 0) + Math.abs(t.amount);
        return acc;
    }, {});
    const COLORS = ["#0088FE", "#00C49F", "#FFBB28", "#FF8042", "#8884d8"];
    if (!hasRole("finance")) {
        return ((0, jsx_runtime_1.jsxs)("div", { style: { padding: 20 }, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h4", color: "error", gutterBottom: true, children: "Access Denied" }), (0, jsx_runtime_1.jsx)(material_1.Typography, { children: "You do not have permission to access financial features. Contact your administrator to enable finance capabilities." })] }));
    }
    if (loading) {
        return (0, jsx_runtime_1.jsx)("div", { style: { padding: 20 }, children: "Loading finance dashboard..." });
    }
    const renderTabContent = () => {
        switch (activeTab) {
            case 0:
                return ((0, jsx_runtime_1.jsx)(NetWorthOverview, { netWorth: netWorth, assets: totalAssets, liabilities: totalLiabilities, history: netWorthHistory }));
            case 1:
                return ((0, jsx_runtime_1.jsx)(SpendingAnalysis, { transactions: transactions, budgets: budgets, spendingByCategory: spendingByCategory }));
            case 2:
                return (0, jsx_runtime_1.jsx)(BudgetManagement, { budgets: budgets });
            case 3:
                return (0, jsx_runtime_1.jsx)(FinancialGoals, { goals: goals });
            case 4:
                return ((0, jsx_runtime_1.jsx)(InvestmentPortfolio, { accounts: accounts.filter((a) => a.type === "investment") }));
            case 5:
                return (0, jsx_runtime_1.jsx)(TransactionHistory, { transactions: transactions });
            default:
                return ((0, jsx_runtime_1.jsx)(NetWorthOverview, { netWorth: netWorth, assets: totalAssets, liabilities: totalLiabilities, history: netWorthHistory }));
        }
    };
    return ((0, jsx_runtime_1.jsxs)("div", { style: { padding: 20 }, children: [(0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 3, children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h4", component: "h2", children: "\uD83D\uDCB0 Atom Finance Dashboard" }), (0, jsx_runtime_1.jsx)(material_1.Button, { variant: "outlined", onClick: fetchAllData, children: "Refresh Data" })] }), (0, jsx_runtime_1.jsxs)(material_1.Tabs, { value: activeTab, onChange: (_, newValue) => setActiveTab(newValue), variant: "scrollable", children: [(0, jsx_runtime_1.jsx)(material_1.Tab, { label: "Net Worth", icon: (0, jsx_runtime_1.jsx)(icons_1.TrendingUp, {}) }), (0, jsx_runtime_1.jsx)(material_1.Tab, { label: "Spending", icon: (0, jsx_runtime_1.jsx)(icons_1.Wallet, {}) }), (0, jsx_runtime_1.jsx)(material_1.Tab, { label: "Budgets", icon: (0, jsx_runtime_1.jsx)(icons_1.Target, {}) }), (0, jsx_runtime_1.jsx)(material_1.Tab, { label: "Goals", icon: (0, jsx_runtime_1.jsx)(icons_1.Target, {}) }), (0, jsx_runtime_1.jsx)(material_1.Tab, { label: "Investments", icon: (0, jsx_runtime_1.jsx)(icons_1.PieChart, {}) }), (0, jsx_runtime_1.jsx)(material_1.Tab, { label: "Transactions", icon: (0, jsx_runtime_1.jsx)(icons_1.Calendar, {}) })] }), (0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, style: { marginTop: 20 }, children: [(0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 3, children: (0, jsx_runtime_1.jsx)(StatCard, { title: "Net Worth", value: `$${netWorth.toLocaleString()}`, change: "+1,250" }) }), (0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 3, children: (0, jsx_runtime_1.jsx)(StatCard, { title: "Total Assets", value: `$${totalAssets.toLocaleString()}` }) }), (0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 3, children: (0, jsx_runtime_1.jsx)(StatCard, { title: "Total Liabilities", value: `$${totalLiabilities.toLocaleString()}` }) }), (0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 3, children: (0, jsx_runtime_1.jsx)(StatCard, { title: "Monthly Budget", value: budgets
                                .reduce((sum, b) => sum + b.budgeted, 0)
                                .toLocaleString() }) })] }), (0, jsx_runtime_1.jsx)(material_1.Box, { mt: 3, children: renderTabContent() })] }));
};
const StatCard = ({ title, value, change, }) => ((0, jsx_runtime_1.jsx)(material_1.Card, { elevation: 3, style: { height: 120 }, children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { color: "textSecondary", gutterBottom: true, children: title }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h4", children: value }), change && ((0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", color: "success.main", children: ["+", change] }))] }) }));
// Individual Tab Components
const NetWorthOverview = ({ netWorth, assets, liabilities, history }) => ((0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, children: [(0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 8, children: (0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Net Worth Trend" }), (0, jsx_runtime_1.jsx)(recharts_1.ResponsiveContainer, { width: "100%", height: 300, children: (0, jsx_runtime_1.jsxs)(recharts_1.LineChart, { data: history, children: [(0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, { strokeDasharray: "3 3" }), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, { dataKey: "date" }), (0, jsx_runtime_1.jsx)(recharts_1.YAxis, {}), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {}), (0, jsx_runtime_1.jsx)(recharts_1.Line, { type: "monotone", dataKey: "netWorth", stroke: "#8884d8", strokeWidth: 2 })] }) })] }) }) }), (0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 4, children: (0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Asset Allocation" }), (0, jsx_runtime_1.jsx)(recharts_1.ResponsiveContainer, { width: "100%", height: 300, children: (0, jsx_runtime_1.jsxs)(recharts_1.PieChart, { children: [(0, jsx_runtime_1.jsx)(recharts_1.Pie, { data: [
                                            { name: "Assets", value: assets },
                                            { name: "Liabilities", value: liabilities },
                                        ], cx: "50%", cy: "50%", outerRadius: 80, fill: "#8884d8", dataKey: "value", label: ({ name, value }) => `${name}: $${value.toLocaleString()}`, children: [
                                            { name: "Assets", value: assets },
                                            { name: "Liabilities", value: liabilities },
                                        ].map((entry, index) => ((0, jsx_runtime_1.jsx)(recharts_1.Cell, { fill: COLORS[index % COLORS.length] }, `cell-${index}`))) }), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {})] }) })] }) }) })] }));
const SpendingAnalysis = ({ transactions, budgets, spendingByCategory }) => ((0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, children: [(0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 6, children: (0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Spending by Category" }), (0, jsx_runtime_1.jsx)(recharts_1.ResponsiveContainer, { width: "100%", height: 300, children: (0, jsx_runtime_1.jsxs)(recharts_1.BarChart, { data: Object.entries(spendingByCategory).map(([cat, val]) => ({
                                    category: cat,
                                    amount: val,
                                })), children: [(0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, { strokeDasharray: "3 3" }), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, { dataKey: "category" }), (0, jsx_runtime_1.jsx)(recharts_1.YAxis, {}), (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {}), (0, jsx_runtime_1.jsx)(recharts_1.Bar, { dataKey: "amount", fill: "#82ca9d" })] }) })] }) }) }), (0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 6, children: (0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Budget Status" }), budgets.map((budget) => ((0, jsx_runtime_1.jsxs)(material_1.Box, { mb: 2, children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body1", gutterBottom: true, children: [budget.category, ": $", budget.spent.toLocaleString(), " / $", budget.budgeted.toLocaleString()] }), (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", alignItems: "center", gap: 1, children: [(0, jsx_runtime_1.jsx)(material_1.Box, { flex: 1, height: 8, bgcolor: "#f5f5f5", borderRadius: 4, children: (0, jsx_runtime_1.jsx)(material_1.Box, { width: `${Math.min(budget.utilization, 100)}%`, height: "100%", bgcolor: budget.utilization > 100 ? "error.main" : "primary.main", borderRadius: 4 }) }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", color: budget.utilization > 100 ? "error" : "success", children: [budget.utilization, "%"] })] })] }, budget.category)))] }) }) })] }));
const BudgetManagement = ({ budgets, }) => ((0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Current Budgets" }), (0, jsx_runtime_1.jsx)(material_1.Grid, { container: true, spacing: 2, children: budgets.map((budget) => ((0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 4, children: (0, jsx_runtime_1.jsx)(material_1.Card, { variant: "outlined", children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: budget.category }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", children: ["Spent: $", budget.spent.toLocaleString(), " of $", budget.budgeted.toLocaleString()] }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h5", color: budget.utilization > 100 ? "error" : "success", children: budget.utilization > 100
                                        ? `$${Math.abs(budget.remaining).toLocaleString()} over`
                                        : `$${budget.remaining.toLocaleString()} left` })] }) }) }, budget.category))) })] }) }));
const FinancialGoals = ({ goals }) => ((0, jsx_runtime_1.jsx)(material_1.Grid, { container: true, spacing: 3, children: goals.map((goal) => ((0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, md: 6, children: (0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: goal.name }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", gutterBottom: true, children: goal.description }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", children: ["$", goal.current.toLocaleString(), " / $", goal.targetAmount.toLocaleString()] }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body1", color: "primary", children: ["Progress: ", goal.progress.toFixed(1), "%"] }), (0, jsx_runtime_1.jsx)(material_1.Box, { mt: 1, display: "flex", alignItems: "center", gap: 1, children: (0, jsx_runtime_1.jsx)(material_1.Box, { flex: 1, height: 8, bgcolor: "#f5f5f5", borderRadius: 4, children: (0, jsx_runtime_1.jsx)(material_1.Box, { width: `${goal.progress}%`, height: "100%", bgcolor: "primary.main", borderRadius: 4 }) }) }), goal.targetDate && ((0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", color: "textSecondary", children: ["Target: ", new Date(goal.targetDate).toLocaleDateString()] }))] }) }) }, goal.id))) }));
const InvestmentPortfolio = ({ accounts, }) => ((0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Investment Holdings" }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", color: "primary", children: ["Portfolio Value: $", accounts.reduce((sum, acc) => sum + acc.balance, 0).toLocaleString()] }), (0, jsx_runtime_1.jsx)(material_1.Grid, { container: true, spacing: 2, style: { marginTop: 20 }, children: accounts.map((account) => ((0, jsx_runtime_1.jsx)(material_1.Grid, { item: true, xs: 12, children: (0, jsx_runtime_1.jsx)(material_1.Card, { variant: "outlined", children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: account.name }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", children: ["$", account.balance.toLocaleString()] }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", children: account.institution })] }) }) }, account.id))) })] }) }));
const TransactionHistory = ({ transactions, }) => ((0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Recent Transactions" }), transactions.map((transaction) => ((0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", py: 1, borderBottom: "1px solid #eee", children: [(0, jsx_runtime_1.jsxs)(material_1.Box, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "subtitle1", children: transaction.name }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: transaction.merchant || transaction.category }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: new Date(transaction.date).toLocaleDateString() })] }), (0, jsx_runtime_1.jsxs)(material_1.Box, { textAlign: "right", children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h6", color: transaction.amount < 0 ? "error.main" : "success.main", children: ["$", Math.abs(transaction.amount).toLocaleString()] }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: transaction.category })] })] }, transaction.id)))] }) }));
exports.default = (0, SideBarWithHeader_1.default)(FinanceDashboard);
//# sourceMappingURL=data:application/json;base64,