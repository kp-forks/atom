"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesProvider = exports.useSales = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const useDataFetching_1 = require("../../lib/hooks/useDataFetching");
// Create the context with a default value
const SalesContext = (0, react_1.createContext)(undefined);
// Custom hook to use the SalesContext
const useSales = () => {
    const context = (0, react_1.useContext)(SalesContext);
    if (!context) {
        throw new Error("useSales must be used within a SalesProvider");
    }
    return context;
};
exports.useSales = useSales;
// Create the provider component
const SalesProvider = ({ children }) => {
    const { data: salesData, loading, error, fetchData, } = (0, useDataFetching_1.useDataFetching)();
    // Function to fetch data from the CRM API, memoized with useCallback.
    const fetchSalesData = (0, react_1.useCallback)(async () => {
        await fetchData("/api/crm/data");
    }, [fetchData]);
    const value = {
        salesData,
        loading,
        error,
        fetchSalesData,
    };
    return ((0, jsx_runtime_1.jsx)(SalesContext.Provider, { value: value, children: children }));
};
exports.SalesProvider = SalesProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2FsZXNDb250ZXh0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2FsZXNDb250ZXh0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUNBS2U7QUFDZixxRUFBa0U7QUFvQ2xFLDBDQUEwQztBQUMxQyxNQUFNLFlBQVksR0FBRyxJQUFBLHFCQUFhLEVBQStCLFNBQVMsQ0FBQyxDQUFDO0FBRTVFLHNDQUFzQztBQUMvQixNQUFNLFFBQVEsR0FBRyxHQUFHLEVBQUU7SUFDM0IsTUFBTSxPQUFPLEdBQUcsSUFBQSxrQkFBVSxFQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3pDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNiLE1BQU0sSUFBSSxLQUFLLENBQUMsOENBQThDLENBQUMsQ0FBQztJQUNsRSxDQUFDO0lBQ0QsT0FBTyxPQUFPLENBQUM7QUFDakIsQ0FBQyxDQUFDO0FBTlcsUUFBQSxRQUFRLFlBTW5CO0FBRUYsZ0NBQWdDO0FBQ3pCLE1BQU0sYUFBYSxHQUFHLENBQUMsRUFBRSxRQUFRLEVBQTJCLEVBQUUsRUFBRTtJQUNyRSxNQUFNLEVBQ0osSUFBSSxFQUFFLFNBQVMsRUFDZixPQUFPLEVBQ1AsS0FBSyxFQUNMLFNBQVMsR0FDVixHQUFHLElBQUEsaUNBQWUsR0FBYSxDQUFDO0lBRWpDLHNFQUFzRTtJQUN0RSxNQUFNLGNBQWMsR0FBRyxJQUFBLG1CQUFXLEVBQUMsS0FBSyxJQUFJLEVBQUU7UUFDNUMsTUFBTSxTQUFTLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDbkMsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUVoQixNQUFNLEtBQUssR0FBRztRQUNaLFNBQVM7UUFDVCxPQUFPO1FBQ1AsS0FBSztRQUNMLGNBQWM7S0FDZixDQUFDO0lBRUYsT0FBTyxDQUNMLHVCQUFDLFlBQVksQ0FBQyxRQUFRLElBQUMsS0FBSyxFQUFFLEtBQUssWUFBRyxRQUFRLEdBQXlCLENBQ3hFLENBQUM7QUFDSixDQUFDLENBQUM7QUF2QlcsUUFBQSxhQUFhLGlCQXVCeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtcbiAgY3JlYXRlQ29udGV4dCxcbiAgdXNlQ29udGV4dCxcbiAgUmVhY3ROb2RlLFxuICB1c2VDYWxsYmFjayxcbn0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VEYXRhRmV0Y2hpbmcgfSBmcm9tIFwiLi4vLi4vbGliL2hvb2tzL3VzZURhdGFGZXRjaGluZ1wiO1xuXG4vLyBEZWZpbmUgVHlwZVNjcmlwdCBpbnRlcmZhY2VzIGZvciBvdXIgZGF0YSBzdHJ1Y3R1cmVzIGZvciB0eXBlIHNhZmV0eS5cbmludGVyZmFjZSBPcHBvcnR1bml0eSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgc3RhZ2U6IHN0cmluZztcbiAgdmFsdWU6IG51bWJlcjtcbn1cblxuaW50ZXJmYWNlIENvbnRhY3Qge1xuICBpZDogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIG9wcG9ydHVuaXR5SWQ6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIFRhc2sge1xuICBpZDogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBkdWVEYXRlOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBTYWxlc0RhdGEge1xuICBvcHBvcnR1bml0aWVzOiBPcHBvcnR1bml0eVtdO1xuICBjb250YWN0czogQ29udGFjdFtdO1xuICB0YXNrczogVGFza1tdO1xufVxuXG4vLyBEZWZpbmUgdGhlIHNoYXBlIG9mIHRoZSBjb250ZXh0IGRhdGFcbmludGVyZmFjZSBTYWxlc0NvbnRleHRUeXBlIHtcbiAgc2FsZXNEYXRhOiBTYWxlc0RhdGEgfCBudWxsO1xuICBsb2FkaW5nOiBib29sZWFuO1xuICBlcnJvcjogRXJyb3IgfCBudWxsO1xuICBmZXRjaFNhbGVzRGF0YTogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbn1cblxuLy8gQ3JlYXRlIHRoZSBjb250ZXh0IHdpdGggYSBkZWZhdWx0IHZhbHVlXG5jb25zdCBTYWxlc0NvbnRleHQgPSBjcmVhdGVDb250ZXh0PFNhbGVzQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZCk7XG5cbi8vIEN1c3RvbSBob29rIHRvIHVzZSB0aGUgU2FsZXNDb250ZXh0XG5leHBvcnQgY29uc3QgdXNlU2FsZXMgPSAoKSA9PiB7XG4gIGNvbnN0IGNvbnRleHQgPSB1c2VDb250ZXh0KFNhbGVzQ29udGV4dCk7XG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZVNhbGVzIG11c3QgYmUgdXNlZCB3aXRoaW4gYSBTYWxlc1Byb3ZpZGVyXCIpO1xuICB9XG4gIHJldHVybiBjb250ZXh0O1xufTtcblxuLy8gQ3JlYXRlIHRoZSBwcm92aWRlciBjb21wb25lbnRcbmV4cG9ydCBjb25zdCBTYWxlc1Byb3ZpZGVyID0gKHsgY2hpbGRyZW4gfTogeyBjaGlsZHJlbjogUmVhY3ROb2RlIH0pID0+IHtcbiAgY29uc3Qge1xuICAgIGRhdGE6IHNhbGVzRGF0YSxcbiAgICBsb2FkaW5nLFxuICAgIGVycm9yLFxuICAgIGZldGNoRGF0YSxcbiAgfSA9IHVzZURhdGFGZXRjaGluZzxTYWxlc0RhdGE+KCk7XG5cbiAgLy8gRnVuY3Rpb24gdG8gZmV0Y2ggZGF0YSBmcm9tIHRoZSBDUk0gQVBJLCBtZW1vaXplZCB3aXRoIHVzZUNhbGxiYWNrLlxuICBjb25zdCBmZXRjaFNhbGVzRGF0YSA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBmZXRjaERhdGEoXCIvYXBpL2NybS9kYXRhXCIpO1xuICB9LCBbZmV0Y2hEYXRhXSk7XG5cbiAgY29uc3QgdmFsdWUgPSB7XG4gICAgc2FsZXNEYXRhLFxuICAgIGxvYWRpbmcsXG4gICAgZXJyb3IsXG4gICAgZmV0Y2hTYWxlc0RhdGEsXG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8U2FsZXNDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt2YWx1ZX0+e2NoaWxkcmVufTwvU2FsZXNDb250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcbiJdfQ==