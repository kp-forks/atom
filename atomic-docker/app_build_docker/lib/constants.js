"use strict";
// prod VERSION
Object.defineProperty(exports, "__esModule", { value: true });
exports.SCHEDULER_API_URL = exports.ATOM_OPENAI_API_KEY = exports.PYTHON_TRAINING_API_URL = exports.zoomPassKey = exports.zoomResourceName = exports.zoomIVForPass = exports.zoomAuthUrl = exports.zoomSaltForPass = exports.googleOAuthAtomicWebRedirectUrl = exports.messyDoodleSVG = exports.googleSignInDarkButton = exports.googleSignInNormalButton = exports.googleOAuthAtomicWebAPIStartUrl = exports.googleTokenUrl = exports.postgraphileAdminSecret = exports.postgraphileGraphUrl = exports.googleClientSecretAtomicWeb = exports.googleCalendarIosAuthRefreshUrl = exports.googleAtomicWebAuthRefreshUrl = exports.googleCalendarAndroidAuthRefreshUrl = exports.googleClientIdAtomicWeb = exports.googleCalendarAndroidAuthUrl = exports.postgraphileWSUrl = exports.postgraphileDbUrl = exports.eventVectorName = exports.openTrainEventVectorName = exports.lanceEventMatcherUrl = exports.methodToSearchIndexAuthUrl = exports.featuresApplyToEventsAuthUrl = exports.calendarToQueueAuthUrl = exports.eventToQueueShortAuthUrl = exports.eventToQueueAuthUrl = exports.hasuraApiUrl = void 0;
exports.hasuraApiUrl = process.env.NEXT_PUBLIC_POSTGRAPHILE_GRAPHQL_URL;
exports.eventToQueueAuthUrl = process.env.NEXT_PUBLIC_EVENT_TO_QUEUE_AUTH_URL;
exports.eventToQueueShortAuthUrl = process.env.NEXT_PUBLIC_EVENT_TO_QUEUE_SHORT_AUTH_URL;
exports.calendarToQueueAuthUrl = process.env.NEXT_PUBLIC_CALENDAR_TO_QUEUE_AUTH_URL;
exports.featuresApplyToEventsAuthUrl = process.env.NEXT_PUBLIC_FEATURES_APPLY_TO_EVENTS_AUTH_URL;
exports.methodToSearchIndexAuthUrl = process.env.NEXT_PUBLIC_METHOD_TO_SEARCH_INDEX_AUTH_URL;
exports.lanceEventMatcherUrl = process.env.NEXT_PUBLIC_LANCE_EVENT_MATCHER_URL || '/api/lance-event-matcher';
exports.openTrainEventVectorName = 'embeddings';
exports.eventVectorName = exports.openTrainEventVectorName;
// export const hasuraDbUrl = process.env.NEXT_PUBLIC_POSTGRAPHILE_GRAPHQL_URL
// export const hasuraWSUrl = process.env.NEXT_PUBLIC_HASURA_GRAPHQL_GRAPHQL_WS_URL
exports.postgraphileDbUrl = process.env.NEXT_PUBLIC_POSTGRAPHILE_GRAPHQL_URL;
// IMPORTANT: PostGraphile V4 needs a plugin like @graphile/pg-pubsub for WebSocket subscriptions.
// The actual WebSocket URL might be different (e.g., ws://localhost:5000/graphql/subscriptions or similar)
// and needs to be configured on the PostGraphile server side.
// For now, we'll assume it's the same base URL with `/graphql` path, but this is a placeholder.
exports.postgraphileWSUrl = process.env
    .NEXT_PUBLIC_POSTGRAPHILE_GRAPHQL_URL
    ? process.env.NEXT_PUBLIC_POSTGRAPHILE_GRAPHQL_URL.replace(/^http/, 'ws')
    : undefined;
exports.googleCalendarAndroidAuthUrl = process.env.NEXT_PUBLIC_GOOGLE_CALENDAR_ANDROID_AUTH_URL;
exports.googleClientIdAtomicWeb = process.env.GOOGLE_CLIENT_ID_ATOMIC_WEB;
exports.googleCalendarAndroidAuthRefreshUrl = process.env.NEXT_PUBLIC_GOOGLE_CALENDAR_ANDROID_AUTH_REFRESH_URL;
exports.googleAtomicWebAuthRefreshUrl = process.env.NEXT_PUBLIC_GOOGLE_ATOMIC_WEB_AUTH_REFRESH_URL;
exports.googleCalendarIosAuthRefreshUrl = process.env.NEXT_PUBLIC_GOOGLE_CALENDAR_IOS_AUTH_REFRESH_URL;
exports.googleClientSecretAtomicWeb = process.env.GOOGLE_CLIENT_SECRET_ATOMIC_WEB;
exports.postgraphileGraphUrl = process.env.POSTGRAPHILE_GRAPHQL_URL;
exports.postgraphileAdminSecret = process.env.POSTGRAPHILE_ADMIN_SECRET;
exports.googleTokenUrl = 'https://oauth2.googleapis.com/token';
exports.googleOAuthAtomicWebAPIStartUrl = process.env.NEXT_PUBLIC_GOOGLE_OAUTH_ATOMIC_WEB_API_START_URL;
exports.googleSignInNormalButton = 'public/images/google-signin-normal.png';
exports.googleSignInDarkButton = 'public/images/google-signin-dark-normal.png';
exports.messyDoodleSVG = '/MessyDoodle.svg';
exports.googleOAuthAtomicWebRedirectUrl = process.env.NEXT_PUBLIC_GOOGLE_OAUTH_ATOMIC_WEB_REDIRECT_URL;
exports.zoomSaltForPass = process.env.ZOOM_SALT_FOR_PASS;
exports.zoomAuthUrl = 'https://zoom.us/oauth/authorize';
exports.zoomIVForPass = process.env.ZOOM_IV_FOR_PASS;
exports.zoomResourceName = 'zoom';
exports.zoomPassKey = process.env.ZOOM_PASS_KEY;
// Python API Service URLs (used by client-side calls if necessary)
exports.PYTHON_TRAINING_API_URL = process.env.NEXT_PUBLIC_PYTHON_TRAINING_API_URL;
// Assuming OpenAI API key might be needed client-side for some reason, or passed through if helper is used server-side.
// For direct client-to-Python-service calls that require this key, it must be exposed.
exports.ATOM_OPENAI_API_KEY = process.env.NEXT_PUBLIC_ATOM_OPENAI_API_KEY;
// Scheduler API URL
exports.SCHEDULER_API_URL = process.env.NEXT_PUBLIC_SCHEDULER_API_URL || 'http://localhost:8080';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxlQUFlOzs7QUFFRixRQUFBLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG9DQUFvQyxDQUFDO0FBRWhFLFFBQUEsbUJBQW1CLEdBQzlCLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUM7QUFDckMsUUFBQSx3QkFBd0IsR0FDbkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5Q0FBeUMsQ0FBQztBQUMzQyxRQUFBLHNCQUFzQixHQUNqQyxPQUFPLENBQUMsR0FBRyxDQUFDLHNDQUFzQyxDQUFDO0FBQ3hDLFFBQUEsNEJBQTRCLEdBQ3ZDLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkNBQTZDLENBQUM7QUFFL0MsUUFBQSwwQkFBMEIsR0FDckMsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQ0FBMkMsQ0FBQztBQUU3QyxRQUFBLG9CQUFvQixHQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLG1DQUFtQyxJQUFJLDBCQUEwQixDQUFDO0FBRW5FLFFBQUEsd0JBQXdCLEdBQUcsWUFBWSxDQUFDO0FBQ3hDLFFBQUEsZUFBZSxHQUFHLGdDQUF3QixDQUFDO0FBQ3hELDhFQUE4RTtBQUM5RSxtRkFBbUY7QUFDdEUsUUFBQSxpQkFBaUIsR0FDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBb0MsQ0FBQztBQUNuRCxrR0FBa0c7QUFDbEcsMkdBQTJHO0FBQzNHLDhEQUE4RDtBQUM5RCxnR0FBZ0c7QUFDbkYsUUFBQSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsR0FBRztLQUN6QyxvQ0FBb0M7SUFDckMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0NBQW9DLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUM7SUFDekUsQ0FBQyxDQUFDLFNBQVMsQ0FBQztBQUVELFFBQUEsNEJBQTRCLEdBQ3ZDLE9BQU8sQ0FBQyxHQUFHLENBQUMsNENBQTRDLENBQUM7QUFDOUMsUUFBQSx1QkFBdUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixDQUFDO0FBQ2xFLFFBQUEsbUNBQW1DLEdBQzlDLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0RBQW9ELENBQUM7QUFDdEQsUUFBQSw2QkFBNkIsR0FDeEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyw4Q0FBOEMsQ0FBQztBQUNoRCxRQUFBLCtCQUErQixHQUMxQyxPQUFPLENBQUMsR0FBRyxDQUFDLGdEQUFnRCxDQUFDO0FBQ2xELFFBQUEsMkJBQTJCLEdBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUM7QUFFakMsUUFBQSxvQkFBb0IsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0FBRTVELFFBQUEsdUJBQXVCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsQ0FBQztBQUNoRSxRQUFBLGNBQWMsR0FBRyxxQ0FBcUMsQ0FBQztBQUN2RCxRQUFBLCtCQUErQixHQUMxQyxPQUFPLENBQUMsR0FBRyxDQUFDLGlEQUFpRCxDQUFDO0FBQ25ELFFBQUEsd0JBQXdCLEdBQ25DLHdDQUF3QyxDQUFDO0FBQzlCLFFBQUEsc0JBQXNCLEdBQ2pDLDZDQUE2QyxDQUFDO0FBQ25DLFFBQUEsY0FBYyxHQUFHLGtCQUFrQixDQUFDO0FBQ3BDLFFBQUEsK0JBQStCLEdBQzFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0RBQWdELENBQUM7QUFDbEQsUUFBQSxlQUFlLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztBQUNqRCxRQUFBLFdBQVcsR0FBRyxpQ0FBaUMsQ0FBQztBQUNoRCxRQUFBLGFBQWEsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFDO0FBQzdDLFFBQUEsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDO0FBQzFCLFFBQUEsV0FBVyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDO0FBRXJELG1FQUFtRTtBQUN0RCxRQUFBLHVCQUF1QixHQUNsQyxPQUFPLENBQUMsR0FBRyxDQUFDLG1DQUFtQyxDQUFDO0FBQ2xELHdIQUF3SDtBQUN4SCx1RkFBdUY7QUFDMUUsUUFBQSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUErQixDQUFDO0FBRS9FLG9CQUFvQjtBQUNQLFFBQUEsaUJBQWlCLEdBQzVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkJBQTZCLElBQUksdUJBQXVCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBwcm9kIFZFUlNJT05cblxuZXhwb3J0IGNvbnN0IGhhc3VyYUFwaVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1BPU1RHUkFQSElMRV9HUkFQSFFMX1VSTDtcblxuZXhwb3J0IGNvbnN0IGV2ZW50VG9RdWV1ZUF1dGhVcmwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19FVkVOVF9UT19RVUVVRV9BVVRIX1VSTDtcbmV4cG9ydCBjb25zdCBldmVudFRvUXVldWVTaG9ydEF1dGhVcmwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19FVkVOVF9UT19RVUVVRV9TSE9SVF9BVVRIX1VSTDtcbmV4cG9ydCBjb25zdCBjYWxlbmRhclRvUXVldWVBdXRoVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQ0FMRU5EQVJfVE9fUVVFVUVfQVVUSF9VUkw7XG5leHBvcnQgY29uc3QgZmVhdHVyZXNBcHBseVRvRXZlbnRzQXV0aFVybCA9XG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZFQVRVUkVTX0FQUExZX1RPX0VWRU5UU19BVVRIX1VSTDtcblxuZXhwb3J0IGNvbnN0IG1ldGhvZFRvU2VhcmNoSW5kZXhBdXRoVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTUVUSE9EX1RPX1NFQVJDSF9JTkRFWF9BVVRIX1VSTDtcblxuZXhwb3J0IGNvbnN0IGxhbmNlRXZlbnRNYXRjaGVyVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTEFOQ0VfRVZFTlRfTUFUQ0hFUl9VUkwgfHwgJy9hcGkvbGFuY2UtZXZlbnQtbWF0Y2hlcic7XG5cbmV4cG9ydCBjb25zdCBvcGVuVHJhaW5FdmVudFZlY3Rvck5hbWUgPSAnZW1iZWRkaW5ncyc7XG5leHBvcnQgY29uc3QgZXZlbnRWZWN0b3JOYW1lID0gb3BlblRyYWluRXZlbnRWZWN0b3JOYW1lO1xuLy8gZXhwb3J0IGNvbnN0IGhhc3VyYURiVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUE9TVEdSQVBISUxFX0dSQVBIUUxfVVJMXG4vLyBleHBvcnQgY29uc3QgaGFzdXJhV1NVcmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19IQVNVUkFfR1JBUEhRTF9HUkFQSFFMX1dTX1VSTFxuZXhwb3J0IGNvbnN0IHBvc3RncmFwaGlsZURiVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUE9TVEdSQVBISUxFX0dSQVBIUUxfVVJMO1xuLy8gSU1QT1JUQU5UOiBQb3N0R3JhcGhpbGUgVjQgbmVlZHMgYSBwbHVnaW4gbGlrZSBAZ3JhcGhpbGUvcGctcHVic3ViIGZvciBXZWJTb2NrZXQgc3Vic2NyaXB0aW9ucy5cbi8vIFRoZSBhY3R1YWwgV2ViU29ja2V0IFVSTCBtaWdodCBiZSBkaWZmZXJlbnQgKGUuZy4sIHdzOi8vbG9jYWxob3N0OjUwMDAvZ3JhcGhxbC9zdWJzY3JpcHRpb25zIG9yIHNpbWlsYXIpXG4vLyBhbmQgbmVlZHMgdG8gYmUgY29uZmlndXJlZCBvbiB0aGUgUG9zdEdyYXBoaWxlIHNlcnZlciBzaWRlLlxuLy8gRm9yIG5vdywgd2UnbGwgYXNzdW1lIGl0J3MgdGhlIHNhbWUgYmFzZSBVUkwgd2l0aCBgL2dyYXBocWxgIHBhdGgsIGJ1dCB0aGlzIGlzIGEgcGxhY2Vob2xkZXIuXG5leHBvcnQgY29uc3QgcG9zdGdyYXBoaWxlV1NVcmwgPSBwcm9jZXNzLmVudlxuICAuTkVYVF9QVUJMSUNfUE9TVEdSQVBISUxFX0dSQVBIUUxfVVJMXG4gID8gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfUE9TVEdSQVBISUxFX0dSQVBIUUxfVVJMLnJlcGxhY2UoL15odHRwLywgJ3dzJylcbiAgOiB1bmRlZmluZWQ7XG5cbmV4cG9ydCBjb25zdCBnb29nbGVDYWxlbmRhckFuZHJvaWRBdXRoVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR09PR0xFX0NBTEVOREFSX0FORFJPSURfQVVUSF9VUkw7XG5leHBvcnQgY29uc3QgZ29vZ2xlQ2xpZW50SWRBdG9taWNXZWIgPSBwcm9jZXNzLmVudi5HT09HTEVfQ0xJRU5UX0lEX0FUT01JQ19XRUI7XG5leHBvcnQgY29uc3QgZ29vZ2xlQ2FsZW5kYXJBbmRyb2lkQXV0aFJlZnJlc2hVcmwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HT09HTEVfQ0FMRU5EQVJfQU5EUk9JRF9BVVRIX1JFRlJFU0hfVVJMO1xuZXhwb3J0IGNvbnN0IGdvb2dsZUF0b21pY1dlYkF1dGhSZWZyZXNoVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR09PR0xFX0FUT01JQ19XRUJfQVVUSF9SRUZSRVNIX1VSTDtcbmV4cG9ydCBjb25zdCBnb29nbGVDYWxlbmRhcklvc0F1dGhSZWZyZXNoVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR09PR0xFX0NBTEVOREFSX0lPU19BVVRIX1JFRlJFU0hfVVJMO1xuZXhwb3J0IGNvbnN0IGdvb2dsZUNsaWVudFNlY3JldEF0b21pY1dlYiA9XG4gIHByb2Nlc3MuZW52LkdPT0dMRV9DTElFTlRfU0VDUkVUX0FUT01JQ19XRUI7XG5cbmV4cG9ydCBjb25zdCBwb3N0Z3JhcGhpbGVHcmFwaFVybCA9IHByb2Nlc3MuZW52LlBPU1RHUkFQSElMRV9HUkFQSFFMX1VSTDtcblxuZXhwb3J0IGNvbnN0IHBvc3RncmFwaGlsZUFkbWluU2VjcmV0ID0gcHJvY2Vzcy5lbnYuUE9TVEdSQVBISUxFX0FETUlOX1NFQ1JFVDtcbmV4cG9ydCBjb25zdCBnb29nbGVUb2tlblVybCA9ICdodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbic7XG5leHBvcnQgY29uc3QgZ29vZ2xlT0F1dGhBdG9taWNXZWJBUElTdGFydFVybCA9XG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0dPT0dMRV9PQVVUSF9BVE9NSUNfV0VCX0FQSV9TVEFSVF9VUkw7XG5leHBvcnQgY29uc3QgZ29vZ2xlU2lnbkluTm9ybWFsQnV0dG9uID1cbiAgJ3B1YmxpYy9pbWFnZXMvZ29vZ2xlLXNpZ25pbi1ub3JtYWwucG5nJztcbmV4cG9ydCBjb25zdCBnb29nbGVTaWduSW5EYXJrQnV0dG9uID1cbiAgJ3B1YmxpYy9pbWFnZXMvZ29vZ2xlLXNpZ25pbi1kYXJrLW5vcm1hbC5wbmcnO1xuZXhwb3J0IGNvbnN0IG1lc3N5RG9vZGxlU1ZHID0gJy9NZXNzeURvb2RsZS5zdmcnO1xuZXhwb3J0IGNvbnN0IGdvb2dsZU9BdXRoQXRvbWljV2ViUmVkaXJlY3RVcmwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HT09HTEVfT0FVVEhfQVRPTUlDX1dFQl9SRURJUkVDVF9VUkw7XG5leHBvcnQgY29uc3Qgem9vbVNhbHRGb3JQYXNzID0gcHJvY2Vzcy5lbnYuWk9PTV9TQUxUX0ZPUl9QQVNTO1xuZXhwb3J0IGNvbnN0IHpvb21BdXRoVXJsID0gJ2h0dHBzOi8vem9vbS51cy9vYXV0aC9hdXRob3JpemUnO1xuZXhwb3J0IGNvbnN0IHpvb21JVkZvclBhc3MgPSBwcm9jZXNzLmVudi5aT09NX0lWX0ZPUl9QQVNTO1xuZXhwb3J0IGNvbnN0IHpvb21SZXNvdXJjZU5hbWUgPSAnem9vbSc7XG5leHBvcnQgY29uc3Qgem9vbVBhc3NLZXkgPSBwcm9jZXNzLmVudi5aT09NX1BBU1NfS0VZO1xuXG4vLyBQeXRob24gQVBJIFNlcnZpY2UgVVJMcyAodXNlZCBieSBjbGllbnQtc2lkZSBjYWxscyBpZiBuZWNlc3NhcnkpXG5leHBvcnQgY29uc3QgUFlUSE9OX1RSQUlOSU5HX0FQSV9VUkwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19QWVRIT05fVFJBSU5JTkdfQVBJX1VSTDtcbi8vIEFzc3VtaW5nIE9wZW5BSSBBUEkga2V5IG1pZ2h0IGJlIG5lZWRlZCBjbGllbnQtc2lkZSBmb3Igc29tZSByZWFzb24sIG9yIHBhc3NlZCB0aHJvdWdoIGlmIGhlbHBlciBpcyB1c2VkIHNlcnZlci1zaWRlLlxuLy8gRm9yIGRpcmVjdCBjbGllbnQtdG8tUHl0aG9uLXNlcnZpY2UgY2FsbHMgdGhhdCByZXF1aXJlIHRoaXMga2V5LCBpdCBtdXN0IGJlIGV4cG9zZWQuXG5leHBvcnQgY29uc3QgQVRPTV9PUEVOQUlfQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FUT01fT1BFTkFJX0FQSV9LRVk7XG5cbi8vIFNjaGVkdWxlciBBUEkgVVJMXG5leHBvcnQgY29uc3QgU0NIRURVTEVSX0FQSV9VUkwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TQ0hFRFVMRVJfQVBJX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo4MDgwJztcbiJdfQ==