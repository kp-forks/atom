"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDeepLink = exports.urlScheme = exports.meetingType = exports.zoomOAuthStartUrl = exports.zoomResourceName = exports.zoomName = exports.zoomDeleteMeetingUrl = exports.zoomUpdateMeetingUrl = exports.zoomCreateMeetingUrl = exports.zoomApiUrl = void 0;
exports.zoomApiUrl = 'https://api.zoom.us/v2';
exports.zoomCreateMeetingUrl = process.env.NEXT_PUBLIC_ZOOM_CREATE_MEETING_URL;
exports.zoomUpdateMeetingUrl = process.env.NEXT_PUBLIC_ZOOM_UPDATE_MEETING_URL;
exports.zoomDeleteMeetingUrl = process.env.NEXT_PUBLIC_ZOOM_DELETE_MEETING_URL;
exports.zoomName = 'Zoom Meeting';
exports.zoomResourceName = 'zoom';
exports.zoomOAuthStartUrl = process.env.NEXT_PUBLIC_ZOOM_OAUTH_START_URL;
// ANDROID
// atomiclife
// IOS
// atomiclife.auth
exports.meetingType = {
    instant: 1,
    scheduled: 2,
    recurring_no_fixed: 3,
    recurring_fixed: 8,
};
exports.urlScheme = 'atomiclife';
const getDeepLink = (path = '') => {
    const scheme = exports.urlScheme;
    const prefix = `${scheme}://`;
    return prefix + path;
};
exports.getDeepLink = getDeepLink;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY29uc3RhbnRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFhLFFBQUEsVUFBVSxHQUFHLHdCQUF3QixDQUFDO0FBQ3RDLFFBQUEsb0JBQW9CLEdBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUM7QUFDckMsUUFBQSxvQkFBb0IsR0FDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQ0FBbUMsQ0FBQztBQUNyQyxRQUFBLG9CQUFvQixHQUMvQixPQUFPLENBQUMsR0FBRyxDQUFDLG1DQUFtQyxDQUFDO0FBQ3JDLFFBQUEsUUFBUSxHQUFHLGNBQWMsQ0FBQztBQUMxQixRQUFBLGdCQUFnQixHQUFHLE1BQU0sQ0FBQztBQUMxQixRQUFBLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0NBQWdDLENBQUM7QUFDOUUsVUFBVTtBQUNWLGFBQWE7QUFDYixNQUFNO0FBQ04sa0JBQWtCO0FBQ0wsUUFBQSxXQUFXLEdBQUc7SUFDekIsT0FBTyxFQUFFLENBQUM7SUFDVixTQUFTLEVBQUUsQ0FBQztJQUNaLGtCQUFrQixFQUFFLENBQUM7SUFDckIsZUFBZSxFQUFFLENBQUM7Q0FDbkIsQ0FBQztBQUVXLFFBQUEsU0FBUyxHQUFHLFlBQVksQ0FBQztBQUUvQixNQUFNLFdBQVcsR0FBRyxDQUFDLElBQUksR0FBRyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxNQUFNLE1BQU0sR0FBRyxpQkFBUyxDQUFDO0lBQ3pCLE1BQU0sTUFBTSxHQUFHLEdBQUcsTUFBTSxLQUFLLENBQUM7SUFDOUIsT0FBTyxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLENBQUMsQ0FBQztBQUpXLFFBQUEsV0FBVyxlQUl0QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB6b29tQXBpVXJsID0gJ2h0dHBzOi8vYXBpLnpvb20udXMvdjInO1xuZXhwb3J0IGNvbnN0IHpvb21DcmVhdGVNZWV0aW5nVXJsID1cbiAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfWk9PTV9DUkVBVEVfTUVFVElOR19VUkw7XG5leHBvcnQgY29uc3Qgem9vbVVwZGF0ZU1lZXRpbmdVcmwgPVxuICBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19aT09NX1VQREFURV9NRUVUSU5HX1VSTDtcbmV4cG9ydCBjb25zdCB6b29tRGVsZXRlTWVldGluZ1VybCA9XG4gIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pPT01fREVMRVRFX01FRVRJTkdfVVJMO1xuZXhwb3J0IGNvbnN0IHpvb21OYW1lID0gJ1pvb20gTWVldGluZyc7XG5leHBvcnQgY29uc3Qgem9vbVJlc291cmNlTmFtZSA9ICd6b29tJztcbmV4cG9ydCBjb25zdCB6b29tT0F1dGhTdGFydFVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1pPT01fT0FVVEhfU1RBUlRfVVJMO1xuLy8gQU5EUk9JRFxuLy8gYXRvbWljbGlmZVxuLy8gSU9TXG4vLyBhdG9taWNsaWZlLmF1dGhcbmV4cG9ydCBjb25zdCBtZWV0aW5nVHlwZSA9IHtcbiAgaW5zdGFudDogMSxcbiAgc2NoZWR1bGVkOiAyLFxuICByZWN1cnJpbmdfbm9fZml4ZWQ6IDMsXG4gIHJlY3VycmluZ19maXhlZDogOCxcbn07XG5cbmV4cG9ydCBjb25zdCB1cmxTY2hlbWUgPSAnYXRvbWljbGlmZSc7XG5cbmV4cG9ydCBjb25zdCBnZXREZWVwTGluayA9IChwYXRoID0gJycpID0+IHtcbiAgY29uc3Qgc2NoZW1lID0gdXJsU2NoZW1lO1xuICBjb25zdCBwcmVmaXggPSBgJHtzY2hlbWV9Oi8vYDtcbiAgcmV0dXJuIHByZWZpeCArIHBhdGg7XG59O1xuIl19