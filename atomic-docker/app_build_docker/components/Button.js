"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = GaButton;
const jsx_runtime_1 = require("react/jsx-runtime");
// import tokens from '@shopify/polaris-tokens';
const theme_1 = require("@lib/theme/theme");
const sizes_1 = __importDefault(require("@lib/theme/sizes"));
const classnames_1 = __importDefault(require("classnames"));
function GaButton(props) {
    const { gradient, children, style, disabled, cancel, following, primary, onClick, className, ...rest } = props;
    if (disabled) {
        return ((0, jsx_runtime_1.jsx)("button", { className: (0, classnames_1.default)("btn btn-primary btn-disabled", { [`${className ?? 'atomic-placeholder'}`]: !!className }), style: { ...(styles.disabledButton ?? {}), ...(style ?? {}) }, ...rest, disabled: disabled, onClick: onClick, children: children }));
    }
    if (cancel) {
        return ((0, jsx_runtime_1.jsx)("button", { className: (0, classnames_1.default)("btn btn-ghost", { [`${className ?? 'atomic-placeholder'}`]: !!className }), style: { ...(styles.disabledButton ?? {}), ...(style ?? {}) }, ...rest, onClick: onClick, children: children }));
    }
    if (following) {
        return ((0, jsx_runtime_1.jsx)("button", { className: (0, classnames_1.default)("btn btn-ghost", { [`${className ?? 'atomic-placeholder'}`]: !!className }), style: { ...styles.followingButton, ...(style ?? {}) }, ...rest, onClick: onClick, children: children }));
    }
    if (primary) {
        return ((0, jsx_runtime_1.jsx)("button", { className: (0, classnames_1.default)("btn btn-primary", { [`${className ?? 'atomic-placeholder'}`]: !!className }), style: { ...styles.primaryButton, ...(style ?? {}) }, ...rest, onClick: onClick, children: children }));
    }
    return ((0, jsx_runtime_1.jsx)("button", { className: (0, classnames_1.default)("btn btn-primary", { [`${className ?? 'atomic-placeholder'}`]: !!className }), style: { ...styles.button, ...(style ?? {}) }, ...rest, onClick: onClick, children: children }));
}
const styles = {
    gradient: {
        borderWidth: 0,
        borderRadius: sizes_1.default.BASE * 2,
        backgroundColor: theme_1.palette.purplePrimary,
    },
    button: {
        borderWidth: 0,
        borderRadius: sizes_1.default.BASE * 2,
        // backgroundColor: palette.pinkPrimary,
    },
    disabledButton: {
        borderWidth: 0,
        borderRadius: sizes_1.default.BASE * 2,
    },
    followingButton: {
        borderWidth: 0,
        backgroundColor: theme_1.palette.white,
        borderRadius: sizes_1.default.BASE * 2,
        // borderColor: palette.black60,
    },
    primaryButton: {
        borderWidth: 0,
        borderRadius: sizes_1.default.BASE * 2,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnV0dG9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQnV0dG9uLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQVNBLDJCQTZHQzs7QUFwSEQsZ0RBQWdEO0FBQ2hELDRDQUF3QztBQUN4Qyw2REFBb0M7QUFDcEMsNERBQTRCO0FBSTVCLFNBQXdCLFFBQVEsQ0FBQyxLQVFoQztJQUVHLE1BQU0sRUFDRixRQUFRLEVBQ1IsUUFBUSxFQUNSLEtBQUssRUFDUCxRQUFRLEVBQ04sTUFBTSxFQUNOLFNBQVMsRUFDWCxPQUFPLEVBQ0wsT0FBTyxFQUNQLFNBQVMsRUFDVCxHQUFHLElBQUksRUFDUixHQUFHLEtBQUssQ0FBQTtJQUVYLElBQUksUUFBUSxFQUFFLENBQUM7UUFFYixPQUFPLENBR0gsbUNBQ0UsU0FBUyxFQUFFLElBQUEsb0JBQUcsRUFBQyw4QkFBOEIsRUFBRSxFQUFDLENBQUMsR0FBRyxTQUFTLElBQUksb0JBQW9CLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxFQUN0RyxLQUFLLEVBQUUsRUFBRSxHQUFHLENBQUMsTUFBTSxDQUFDLGNBQWMsSUFBSSxFQUFFLENBQUMsRUFBQyxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQ3hELElBQUksRUFDUixRQUFRLEVBQUUsUUFBUSxFQUNsQixPQUFPLEVBQUUsT0FBTyxZQUVqQixRQUFRLEdBQ0YsQ0FHZCxDQUFBO0lBQ0QsQ0FBQztJQUVILElBQUksTUFBTSxFQUFFLENBQUM7UUFFVCxPQUFPLENBR0gsbUNBQ0UsU0FBUyxFQUFFLElBQUEsb0JBQUcsRUFBQyxlQUFlLEVBQUUsRUFBQyxDQUFDLEdBQUcsU0FBUyxJQUFJLG9CQUFvQixFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsRUFDdkYsS0FBSyxFQUFFLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxjQUFjLElBQUksRUFBRSxDQUFDLEVBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsRUFBRSxLQUN4RCxJQUFJLEVBQ1IsT0FBTyxFQUFFLE9BQU8sWUFFakIsUUFBUSxHQUNGLENBR2QsQ0FBQTtJQUNELENBQUM7SUFFRCxJQUFJLFNBQVMsRUFBRSxDQUFDO1FBQ2QsT0FBTyxDQUdILG1DQUNFLFNBQVMsRUFBRSxJQUFBLG9CQUFHLEVBQUMsZUFBZSxFQUFFLEVBQUMsQ0FBQyxHQUFHLFNBQVMsSUFBSSxvQkFBb0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQ3ZGLEtBQUssRUFBRSxFQUFFLEdBQUcsTUFBTSxDQUFDLGVBQWUsRUFBRSxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxFQUFDLEtBQ3JELElBQUksRUFDUixPQUFPLEVBQUUsT0FBTyxZQUViLFFBQVEsR0FDRixDQUNaLENBQUE7SUFDSCxDQUFDO0lBRUQsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUNaLE9BQU8sQ0FHSCxtQ0FDRyxTQUFTLEVBQUUsSUFBQSxvQkFBRyxFQUFDLGlCQUFpQixFQUFFLEVBQUMsQ0FBQyxHQUFHLFNBQVMsSUFBSSxvQkFBb0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxDQUFDLEVBQzVGLEtBQUssRUFBRSxFQUFFLEdBQUcsTUFBTSxDQUFDLGFBQWEsRUFBRSxHQUFHLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBRWxELElBQUksRUFDUixPQUFPLEVBQUUsT0FBTyxZQUViLFFBQVEsR0FDQSxDQUdkLENBQUE7SUFDSCxDQUFDO0lBRUgsT0FBTyxDQUdILG1DQUNFLFNBQVMsRUFBRSxJQUFBLG9CQUFHLEVBQUMsaUJBQWlCLEVBQUUsRUFBQyxDQUFDLEdBQUcsU0FBUyxJQUFJLG9CQUFvQixFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsU0FBUyxFQUFFLENBQUMsRUFDM0YsS0FBSyxFQUFFLEVBQUUsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLEVBQUUsS0FFekMsSUFBSSxFQUNSLE9BQU8sRUFBRSxPQUFPLFlBRWYsUUFBUSxHQUNGLENBR1YsQ0FBQTtBQUVMLENBQUM7QUFFRCxNQUFNLE1BQU0sR0FBRztJQUNiLFFBQVEsRUFBRTtRQUNSLFdBQVcsRUFBRSxDQUFDO1FBQ2QsWUFBWSxFQUFFLGVBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQztRQUM1QixlQUFlLEVBQUUsZUFBTyxDQUFDLGFBQWE7S0FDdkM7SUFDRCxNQUFNLEVBQUU7UUFDTixXQUFXLEVBQUUsQ0FBQztRQUNkLFlBQVksRUFBRSxlQUFLLENBQUMsSUFBSSxHQUFHLENBQUM7UUFDNUIsd0NBQXdDO0tBQ3pDO0lBQ0QsY0FBYyxFQUFFO1FBQ2QsV0FBVyxFQUFFLENBQUM7UUFDZCxZQUFZLEVBQUUsZUFBSyxDQUFDLElBQUksR0FBRyxDQUFDO0tBQzdCO0lBQ0QsZUFBZSxFQUFFO1FBQ2YsV0FBVyxFQUFFLENBQUM7UUFDZCxlQUFlLEVBQUUsZUFBTyxDQUFDLEtBQUs7UUFDOUIsWUFBWSxFQUFFLGVBQUssQ0FBQyxJQUFJLEdBQUcsQ0FBQztRQUM1QixnQ0FBZ0M7S0FDakM7SUFDRCxhQUFhLEVBQUU7UUFDYixXQUFXLEVBQUUsQ0FBQztRQUNkLFlBQVksRUFBRSxlQUFLLENBQUMsSUFBSSxHQUFHLENBQUM7S0FDN0I7Q0FDRixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFJlYWN0RWxlbWVudCB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtTdHlsZVNoZWV0LCBCdXR0b24sIEJ1dHRvblByb3BzLCBWaWV3LCBTdHlsZVByb3AsIFZpZXdTdHlsZX0gZnJvbSAncmVhY3QtbmF0aXZlJ1xuLy8gaW1wb3J0IHRva2VucyBmcm9tICdAc2hvcGlmeS9wb2xhcmlzLXRva2Vucyc7XG5pbXBvcnQge3BhbGV0dGV9IGZyb20gJ0BsaWIvdGhlbWUvdGhlbWUnXG5pbXBvcnQgU0laRVMgZnJvbSAnQGxpYi90aGVtZS9zaXplcydcbmltcG9ydCBjbHMgZnJvbSAnY2xhc3NuYW1lcydcblxuaW1wb3J0IG1hdGVyaWFsVGhlbWUgZnJvbSAnQGxpYi90aGVtZS9jb25zdGFudHMvVGhlbWUnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdhQnV0dG9uKHByb3BzOiBSZWFjdC5EZXRhaWxlZEhUTUxQcm9wczxSZWFjdC5CdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4sIEhUTUxCdXR0b25FbGVtZW50PiAmIHtcbiAgZ3JhZGllbnQ/OiBzdHJpbmcsXG4gIGZvbGxvd2luZz86IGJvb2xlYW4sXG4gIGRpc2FibGVkPzogYm9vbGVhbixcbiAgY2FuY2VsPzogYm9vbGVhbixcbiAgcHJpbWFyeT86IGJvb2xlYW4sXG4gIHN0eWxlPzogb2JqZWN0LFxuICBjbGFzc05hbWU/OiBzdHJpbmcsXG59KSB7XG5cbiAgICBjb25zdCB7XG4gICAgICAgIGdyYWRpZW50LFxuICAgICAgICBjaGlsZHJlbixcbiAgICAgICAgc3R5bGUsXG4gICAgICBkaXNhYmxlZCxcbiAgICAgICAgY2FuY2VsLFxuICAgICAgICBmb2xsb3dpbmcsXG4gICAgICBwcmltYXJ5LFxuICAgICAgICBvbkNsaWNrLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIC4uLnJlc3RcbiAgICAgIH0gPSBwcm9wc1xuXG4gICAgaWYgKGRpc2FibGVkKSB7XG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIFxuICAgICAgXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHMoXCJidG4gYnRuLXByaW1hcnkgYnRuLWRpc2FibGVkXCIsIHtbYCR7Y2xhc3NOYW1lID8/ICdhdG9taWMtcGxhY2Vob2xkZXInfWBdOiAhIWNsYXNzTmFtZSB9KX1cbiAgICAgICAgICAgICAgc3R5bGU9e3sgLi4uKHN0eWxlcy5kaXNhYmxlZEJ1dHRvbiA/PyB7fSksLi4uKHN0eWxlID8/IHt9KSB9fVxuICAgICAgICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICBcbiAgICAgICAgIFxuICAgIClcbiAgICB9XG5cbiAgaWYgKGNhbmNlbCkge1xuXG4gICAgICByZXR1cm4gKFxuICAgICAgICBcbiAgICAgIFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzKFwiYnRuIGJ0bi1naG9zdFwiLCB7W2Ake2NsYXNzTmFtZSA/PyAnYXRvbWljLXBsYWNlaG9sZGVyJ31gXTogISFjbGFzc05hbWUgfSl9XG4gICAgICAgICAgICAgIHN0eWxlPXt7IC4uLihzdHlsZXMuZGlzYWJsZWRCdXR0b24gPz8ge30pLC4uLihzdHlsZSA/PyB7fSkgfX1cbiAgICAgICAgICAgICAgey4uLnJlc3R9XG4gICAgICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgIFxuICAgICAgICAgXG4gICAgKVxuICAgIH1cblxuICAgIGlmIChmb2xsb3dpbmcpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgXG4gICAgICAgXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbHMoXCJidG4gYnRuLWdob3N0XCIsIHtbYCR7Y2xhc3NOYW1lID8/ICdhdG9taWMtcGxhY2Vob2xkZXInfWBdOiAhIWNsYXNzTmFtZSB9KX1cbiAgICAgICAgICAgICAgc3R5bGU9e3sgLi4uc3R5bGVzLmZvbGxvd2luZ0J1dHRvbiwgLi4uKHN0eWxlID8/IHt9KX19XG4gICAgICAgICAgey4uLnJlc3R9XG4gICAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICApXG4gICAgfVxuXG4gICAgaWYgKHByaW1hcnkpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIFxuICAgICAgICAgXG4gICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xzKFwiYnRuIGJ0bi1wcmltYXJ5XCIsIHtbYCR7Y2xhc3NOYW1lID8/ICdhdG9taWMtcGxhY2Vob2xkZXInfWBdOiAhIWNsYXNzTmFtZSB9KX1cbiAgICAgICAgICAgIHN0eWxlPXt7IC4uLnN0eWxlcy5wcmltYXJ5QnV0dG9uLCAuLi4oc3R5bGUgPz8ge30pIH19XG4gICAgICAgICAgICAgIFxuICAgICAgICAgIHsuLi5yZXN0fVxuICAgICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICApXG4gICAgfVxuXG4gIHJldHVybiAoXG4gICAgICBcbiAgICAgXG4gICAgICA8YnV0dG9uXG4gICAgICAgIGNsYXNzTmFtZT17Y2xzKFwiYnRuIGJ0bi1wcmltYXJ5XCIsIHtbYCR7Y2xhc3NOYW1lID8/ICdhdG9taWMtcGxhY2Vob2xkZXInfWBdOiAhIWNsYXNzTmFtZSB9KX1cbiAgICAgICAgc3R5bGU9e3sgLi4uc3R5bGVzLmJ1dHRvbiwgLi4uKHN0eWxlID8/IHt9KSB9fVxuIFxuICAgICAgICB7Li4ucmVzdH1cbiAgICAgICAgb25DbGljaz17b25DbGlja31cbiAgICAgID5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9idXR0b24+XG4gICAgICAgIFxuICAgICBcbiAgICApXG5cbn1cblxuY29uc3Qgc3R5bGVzID0ge1xuICBncmFkaWVudDoge1xuICAgIGJvcmRlcldpZHRoOiAwLFxuICAgIGJvcmRlclJhZGl1czogU0laRVMuQkFTRSAqIDIsXG4gICAgYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnB1cnBsZVByaW1hcnksXG4gIH0sXG4gIGJ1dHRvbjoge1xuICAgIGJvcmRlcldpZHRoOiAwLFxuICAgIGJvcmRlclJhZGl1czogU0laRVMuQkFTRSAqIDIsXG4gICAgLy8gYmFja2dyb3VuZENvbG9yOiBwYWxldHRlLnBpbmtQcmltYXJ5LFxuICB9LFxuICBkaXNhYmxlZEJ1dHRvbjoge1xuICAgIGJvcmRlcldpZHRoOiAwLFxuICAgIGJvcmRlclJhZGl1czogU0laRVMuQkFTRSAqIDIsXG4gIH0sXG4gIGZvbGxvd2luZ0J1dHRvbjoge1xuICAgIGJvcmRlcldpZHRoOiAwLFxuICAgIGJhY2tncm91bmRDb2xvcjogcGFsZXR0ZS53aGl0ZSxcbiAgICBib3JkZXJSYWRpdXM6IFNJWkVTLkJBU0UgKiAyLFxuICAgIC8vIGJvcmRlckNvbG9yOiBwYWxldHRlLmJsYWNrNjAsXG4gIH0sXG4gIHByaW1hcnlCdXR0b246IHtcbiAgICBib3JkZXJXaWR0aDogMCxcbiAgICBib3JkZXJSYWRpdXM6IFNJWkVTLkJBU0UgKiAyLFxuICB9LFxufVxuIl19