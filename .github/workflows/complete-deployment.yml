```name: Complete Cloud Automation & Public Release

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18"
  RUST_VERSION: "stable"

jobs:
  # 1. Cloud Infrastructure Setup
  prepare-cloud-environment:
    runs-on: ubuntu-latest
    outputs:
      cloud-urls: ${{ steps.setup.outputs.urls }}
      project-id: ${{ steps.setup.outputs.project-id }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup cloud project identifiers
        id: setup
        run: |
          PROJECT_ID="atom-web-dev-${GITHUB_SHA:0:7}"
          echo "project-id=$PROJECT_ID" >> $GITHUB_OUTPUT
          echo "urls={\"web\":\"https://$PROJECT_ID.vercel.app\",\"api\":\"https://$PROJECT_ID-api.vercel.app\"}" >> $GITHUB_OUTPUT

  # 2. Build Next.js Cloud Application
  build-cloud-app:
    runs-on: ubuntu-latest
    needs: prepare-cloud-environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: atomic-docker/app_build_docker/package-lock.json

      - name: Install dependencies
        run: |
          cd atomic-docker/app_build_docker
          npm ci --silent

      - name: Build Next.js application
        run: |
          cd atomic-docker/app_build_docker
          npm run build
          npm run export

      - name: Upload cloud build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cloud-app
          path: atomic-docker/app_build_docker/out

  # 3. Desktop App Compilation
  build-desktop-apps:
    needs: prepare-cloud-environment
    strategy:
+      matrix:
+        include:
+          - os: ubuntu-latest
+            arch: x64
+            target: x86_64-unknown-linux-gnu
+            extension: .deb
++
+          - os: windows-latest
+            arch: x64
+            target: x86_64-pc-windows-msvc
+            extension: .exe
++
+          - os: macos-latest
+            arch: x64
++            target: x86_64-apple-darwin
++            extension: .dmg
++
++          - os: macos-latest
++            arch: arm64
++            target: aarch64-apple-darwin
++            extension: .dmg
++
++    runs-on: ${{ matrix.os }}
++
++    steps:
++      - name: Checkout repository
++        uses: actions/checkout@v4
++
++      - name: Setup Node.js
++        uses: actions/setup-node@v4
++        with:
++          node-version: ${{ env.NODE_VERSION }}
++          cache: 'npm'
++          cache-dependency-path: desktop/tauri/package-lock.json
++
++      - name: Install Rust
++        uses: dtolnay/rust-toolchain@stable
++        with:
++          targets: ${{ matrix.target }}
++
++      - name: Cache Rust dependencies
++        uses: Swatinem/rust-cache@v2
++
++      - name: Install system dependencies (Linux)
++        if: matrix.os == 'ubuntu-latest'
++        run: |
++          sudo apt-get update
++          sudo apt-get install -y webkit2gtk-4.0 build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
++
++      - name: Install dependencies
++        run: |
++          cd desktop/tauri
++          npm ci
++          npm run build
++
++      - name: Build desktop application
++        run: |
++          cd desktop/tauri
++          npm run tauri build -- --target ${{ matrix.target }} --bundles app,dmg,msi,deb
++
++      - name: Upload desktop app
++        uses: actions/upload-artifact@v4
++        with:
++          name: desktop-app-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.extension }}
++          path: desktop/tauri/target/release/bundle/*/*${{ matrix.extension }}
+
+  # 4. Cloud Deployment Automation
+  deploy-cloud-infrastructure:
+    needs: [build-cloud-app, build-desktop-apps]
+    runs-on: ubuntu-latest
+
+    steps:
+      - name: Checkout code
+        uses: actions/checkout@v4
+
+      - name: Deploy to Vercel (Public)
+        run: |
+          echo "ðŸš€ Deploy
