name: Cloud Preview Deployment
on:
  push:
    branches: [ main, develop ]
    paths:
      - 'atomic-docker/app_build_docker/**'
      - 'desktop/tauri/**'
      - 'src/**'
      - 'package*.json'
      - 'Dockerfile*'
      - '!**/*.md'
      - '!docs/**'
      - '!README*'
      - '!**/.*'
  pull_request:
    branches: [ main ]
    paths:
      - 'atomic-docker/app_build_docker/**'
      - 'desktop/tauri/**'
      - 'src/**'
      - 'package*.json'
      - 'Dockerfile*'
      - '!**/*.md'
      - '!docs/**'
      - '!README*'
      - '!**/.*'

jobs:
  build-web:
    runs-on: ubuntu-latest
    environment: preview
    outputs:
      preview-url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'atomic-docker/app_build_docker/package-lock.json'

      - name: Install dependencies
        run: |
          cd atomic-docker/app_build_docker
          npm ci

      - name: Build Next.js app
        run: |
          cd atomic-docker/app_build_docker
          npm run build
          npm run export

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        if: github.event_name == 'push'
        id: deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=atomic-docker/app_build_docker/out --prod

      - name: Deploy preview to Netlify
        uses: netlify/actions/cli@master
        if: github.event_name == 'pull_request'
        id: preview
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=atomic-docker/app_build_docker/out --alias=pr-${{github.event.number}}

      - name: Comment preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployed to:** https://pr-${{github.event.number}}--atom-preview.netlify.app`
            })

  deploy-vercel:
    runs-on: ubuntu-latest
    environment: preview
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: atomic-docker/app_build_docker

  notify-desktop:
    runs-on: ubuntu-latest
    needs: build-web
    if: always()

    steps:
      - name: Notify desktop app of deployment
        run: |
          echo "Preview URL: ${{ needs.build-web.outputs.preview-url }}"
          echo "Status: ${{ job.status }}"
