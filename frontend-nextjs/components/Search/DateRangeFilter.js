"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const DateRangeFilter = ({ filters, onChange }) => {
    const handleDateChange = (field, value) => {
        // If the date is cleared, pass undefined to remove it from the filter state
        const dateValue = value ? new Date(value).toISOString() : undefined;
        onChange({ [field]: dateValue });
    };
    const handleFieldChange = (e) => {
        onChange({ date_field_to_filter: e.target.value });
    };
    // Helper to format ISO string to YYYY-MM-DD for the date input value
    const getInputValue = (isoString) => {
        if (!isoString)
            return '';
        try {
            return isoString.split('T')[0];
        }
        catch {
            return '';
        }
    };
    return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Filter by Date" }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-3 p-2 border rounded-md bg-gray-50 dark:bg-gray-700/50 border-gray-200 dark:border-gray-600", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: "date_field_select", className: "block text-xs font-medium text-gray-600 dark:text-gray-400 mb-1", children: "Date Type" }), (0, jsx_runtime_1.jsxs)("select", { id: "date_field_select", value: filters.date_field_to_filter || 'ingested_at', onChange: handleFieldChange, className: "block w-full text-sm rounded-md border-gray-300 dark:border-gray-500 dark:bg-gray-600 dark:text-white shadow-sm focus:border-sky-500 focus:ring-sky-500", children: [(0, jsx_runtime_1.jsx)("option", { value: "ingested_at", children: "Ingested Date" }), (0, jsx_runtime_1.jsx)("option", { value: "created_at_source", children: "Creation Date" }), (0, jsx_runtime_1.jsx)("option", { value: "last_modified_source", children: "Modified Date" })] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: "date_after", className: "block text-xs font-medium text-gray-600 dark:text-gray-400 mb-1", children: "From" }), (0, jsx_runtime_1.jsx)("input", { type: "date", id: "date_after", value: getInputValue(filters.date_after), onChange: (e) => handleDateChange('date_after', e.target.value), className: "block w-full text-sm rounded-md border-gray-300 dark:border-gray-500 dark:bg-gray-600 dark:text-white shadow-sm focus:border-sky-500 focus:ring-sky-500" })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { htmlFor: "date_before", className: "block text-xs font-medium text-gray-600 dark:text-gray-400 mb-1", children: "To" }), (0, jsx_runtime_1.jsx)("input", { type: "date", id: "date_before", value: getInputValue(filters.date_before), onChange: (e) => handleDateChange('date_before', e.target.value), className: "block w-full text-sm rounded-md border-gray-300 dark:border-gray-500 dark:bg-gray-600 dark:text-white shadow-sm focus:border-sky-500 focus:ring-sky-500" })] })] })] }));
};
exports.default = DateRangeFilter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0ZVJhbmdlRmlsdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRGF0ZVJhbmdlRmlsdGVyLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFrQkEsTUFBTSxlQUFlLEdBQW1DLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRTtJQUVoRixNQUFNLGdCQUFnQixHQUFHLENBQUMsS0FBbUMsRUFBRSxLQUFhLEVBQUUsRUFBRTtRQUM5RSw0RUFBNEU7UUFDNUUsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ3BFLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUNuQyxDQUFDLENBQUM7SUFFRixNQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBdUMsRUFBRSxFQUFFO1FBQ3BFLFFBQVEsQ0FBQyxFQUFFLG9CQUFvQixFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBa0IsRUFBRSxDQUFDLENBQUM7SUFDbEUsQ0FBQyxDQUFDO0lBRUYscUVBQXFFO0lBQ3JFLE1BQU0sYUFBYSxHQUFHLENBQUMsU0FBa0IsRUFBRSxFQUFFO1FBQzNDLElBQUksQ0FBQyxTQUFTO1lBQUUsT0FBTyxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDO1lBQ0gsT0FBTyxTQUFTLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLENBQUM7UUFBQyxNQUFNLENBQUM7WUFDUCxPQUFPLEVBQUUsQ0FBQztRQUNaLENBQUM7SUFDSCxDQUFDLENBQUM7SUFFRixPQUFPLENBQ0wsNENBQ0Usa0NBQU8sU0FBUyxFQUFDLGlFQUFpRSwrQkFFMUUsRUFDUixpQ0FBSyxTQUFTLEVBQUMsaUlBQWlJLGFBRTlJLDRDQUNFLGtDQUFPLE9BQU8sRUFBQyxtQkFBbUIsRUFBQyxTQUFTLEVBQUMsaUVBQWlFLDBCQUV0RyxFQUNSLG9DQUNFLEVBQUUsRUFBQyxtQkFBbUIsRUFDdEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxvQkFBb0IsSUFBSSxhQUFhLEVBQ3BELFFBQVEsRUFBRSxpQkFBaUIsRUFDM0IsU0FBUyxFQUFDLHlKQUF5SixhQUVuSyxtQ0FBUSxLQUFLLEVBQUMsYUFBYSw4QkFBdUIsRUFDbEQsbUNBQVEsS0FBSyxFQUFDLG1CQUFtQiw4QkFBdUIsRUFDeEQsbUNBQVEsS0FBSyxFQUFDLHNCQUFzQiw4QkFBdUIsSUFDcEQsSUFDTCxFQUdOLDRDQUNFLGtDQUFPLE9BQU8sRUFBQyxZQUFZLEVBQUMsU0FBUyxFQUFDLGlFQUFpRSxxQkFFL0YsRUFDUixrQ0FDRSxJQUFJLEVBQUMsTUFBTSxFQUNYLEVBQUUsRUFBQyxZQUFZLEVBQ2YsS0FBSyxFQUFFLGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEVBQ3hDLFFBQVEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQy9ELFNBQVMsRUFBQyx5SkFBeUosR0FDbkssSUFDRSxFQUdOLDRDQUNFLGtDQUFPLE9BQU8sRUFBQyxhQUFhLEVBQUMsU0FBUyxFQUFDLGlFQUFpRSxtQkFFaEcsRUFDUixrQ0FDRSxJQUFJLEVBQUMsTUFBTSxFQUNYLEVBQUUsRUFBQyxhQUFhLEVBQ2hCLEtBQUssRUFBRSxhQUFhLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUN6QyxRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUNoRSxTQUFTLEVBQUMseUpBQXlKLEdBQ25LLElBQ0UsSUFDRixJQUNGLENBQ1AsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLGtCQUFlLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBIeWJyaWRTZWFyY2hGaWx0ZXJzIH0gZnJvbSAnLi4vLi4vLi4vbGliL2RhdGFUeXBlcy9TZWFyY2hSZXN1bHRzVHlwZXMnOyAvLyBBZGp1c3QgcGF0aCBpZiBuZWVkZWRcblxudHlwZSBEYXRlRmllbGQgPSAnaW5nZXN0ZWRfYXQnIHwgJ2NyZWF0ZWRfYXRfc291cmNlJyB8ICdsYXN0X21vZGlmaWVkX3NvdXJjZSc7XG5cbmludGVyZmFjZSBEYXRlUmFuZ2VGaWx0ZXJQcm9wcyB7XG4gIGZpbHRlcnM6IHtcbiAgICBkYXRlX2FmdGVyPzogc3RyaW5nO1xuICAgIGRhdGVfYmVmb3JlPzogc3RyaW5nO1xuICAgIGRhdGVfZmllbGRfdG9fZmlsdGVyPzogRGF0ZUZpZWxkO1xuICB9O1xuICBvbkNoYW5nZTogKHVwZGF0ZToge1xuICAgIGRhdGVfYWZ0ZXI/OiBzdHJpbmc7XG4gICAgZGF0ZV9iZWZvcmU/OiBzdHJpbmc7XG4gICAgZGF0ZV9maWVsZF90b19maWx0ZXI/OiBEYXRlRmllbGQ7XG4gIH0pID0+IHZvaWQ7XG59XG5cbmNvbnN0IERhdGVSYW5nZUZpbHRlcjogUmVhY3QuRkM8RGF0ZVJhbmdlRmlsdGVyUHJvcHM+ID0gKHsgZmlsdGVycywgb25DaGFuZ2UgfSkgPT4ge1xuXG4gIGNvbnN0IGhhbmRsZURhdGVDaGFuZ2UgPSAoZmllbGQ6ICdkYXRlX2FmdGVyJyB8ICdkYXRlX2JlZm9yZScsIHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICAvLyBJZiB0aGUgZGF0ZSBpcyBjbGVhcmVkLCBwYXNzIHVuZGVmaW5lZCB0byByZW1vdmUgaXQgZnJvbSB0aGUgZmlsdGVyIHN0YXRlXG4gICAgY29uc3QgZGF0ZVZhbHVlID0gdmFsdWUgPyBuZXcgRGF0ZSh2YWx1ZSkudG9JU09TdHJpbmcoKSA6IHVuZGVmaW5lZDtcbiAgICBvbkNoYW5nZSh7IFtmaWVsZF06IGRhdGVWYWx1ZSB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVGaWVsZENoYW5nZSA9IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MU2VsZWN0RWxlbWVudD4pID0+IHtcbiAgICBvbkNoYW5nZSh7IGRhdGVfZmllbGRfdG9fZmlsdGVyOiBlLnRhcmdldC52YWx1ZSBhcyBEYXRlRmllbGQgfSk7XG4gIH07XG5cbiAgLy8gSGVscGVyIHRvIGZvcm1hdCBJU08gc3RyaW5nIHRvIFlZWVktTU0tREQgZm9yIHRoZSBkYXRlIGlucHV0IHZhbHVlXG4gIGNvbnN0IGdldElucHV0VmFsdWUgPSAoaXNvU3RyaW5nPzogc3RyaW5nKSA9PiB7XG4gICAgaWYgKCFpc29TdHJpbmcpIHJldHVybiAnJztcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIGlzb1N0cmluZy5zcGxpdCgnVCcpWzBdO1xuICAgIH0gY2F0Y2gge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIGRhcms6dGV4dC1ncmF5LTMwMCBtYi0xXCI+XG4gICAgICAgIEZpbHRlciBieSBEYXRlXG4gICAgICA8L2xhYmVsPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0zIGdhcC0zIHAtMiBib3JkZXIgcm91bmRlZC1tZCBiZy1ncmF5LTUwIGRhcms6YmctZ3JheS03MDAvNTAgYm9yZGVyLWdyYXktMjAwIGRhcms6Ym9yZGVyLWdyYXktNjAwXCI+XG4gICAgICAgIHsvKiBEYXRlIEZpZWxkIFNlbGVjdG9yICovfVxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiZGF0ZV9maWVsZF9zZWxlY3RcIiBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS02MDAgZGFyazp0ZXh0LWdyYXktNDAwIG1iLTFcIj5cbiAgICAgICAgICAgIERhdGUgVHlwZVxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPHNlbGVjdFxuICAgICAgICAgICAgaWQ9XCJkYXRlX2ZpZWxkX3NlbGVjdFwiXG4gICAgICAgICAgICB2YWx1ZT17ZmlsdGVycy5kYXRlX2ZpZWxkX3RvX2ZpbHRlciB8fCAnaW5nZXN0ZWRfYXQnfVxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUZpZWxkQ2hhbmdlfVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmxvY2sgdy1mdWxsIHRleHQtc20gcm91bmRlZC1tZCBib3JkZXItZ3JheS0zMDAgZGFyazpib3JkZXItZ3JheS01MDAgZGFyazpiZy1ncmF5LTYwMCBkYXJrOnRleHQtd2hpdGUgc2hhZG93LXNtIGZvY3VzOmJvcmRlci1za3ktNTAwIGZvY3VzOnJpbmctc2t5LTUwMFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImluZ2VzdGVkX2F0XCI+SW5nZXN0ZWQgRGF0ZTwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImNyZWF0ZWRfYXRfc291cmNlXCI+Q3JlYXRpb24gRGF0ZTwvb3B0aW9uPlxuICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT1cImxhc3RfbW9kaWZpZWRfc291cmNlXCI+TW9kaWZpZWQgRGF0ZTwvb3B0aW9uPlxuICAgICAgICAgIDwvc2VsZWN0PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7LyogRGF0ZSBBZnRlciAqL31cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8bGFiZWwgaHRtbEZvcj1cImRhdGVfYWZ0ZXJcIiBjbGFzc05hbWU9XCJibG9jayB0ZXh0LXhzIGZvbnQtbWVkaXVtIHRleHQtZ3JheS02MDAgZGFyazp0ZXh0LWdyYXktNDAwIG1iLTFcIj5cbiAgICAgICAgICAgIEZyb21cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cImRhdGVcIlxuICAgICAgICAgICAgaWQ9XCJkYXRlX2FmdGVyXCJcbiAgICAgICAgICAgIHZhbHVlPXtnZXRJbnB1dFZhbHVlKGZpbHRlcnMuZGF0ZV9hZnRlcil9XG4gICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IGhhbmRsZURhdGVDaGFuZ2UoJ2RhdGVfYWZ0ZXInLCBlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJibG9jayB3LWZ1bGwgdGV4dC1zbSByb3VuZGVkLW1kIGJvcmRlci1ncmF5LTMwMCBkYXJrOmJvcmRlci1ncmF5LTUwMCBkYXJrOmJnLWdyYXktNjAwIGRhcms6dGV4dC13aGl0ZSBzaGFkb3ctc20gZm9jdXM6Ym9yZGVyLXNreS01MDAgZm9jdXM6cmluZy1za3ktNTAwXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICB7LyogRGF0ZSBCZWZvcmUgKi99XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJkYXRlX2JlZm9yZVwiIGNsYXNzTmFtZT1cImJsb2NrIHRleHQteHMgZm9udC1tZWRpdW0gdGV4dC1ncmF5LTYwMCBkYXJrOnRleHQtZ3JheS00MDAgbWItMVwiPlxuICAgICAgICAgICAgVG9cbiAgICAgICAgICA8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgdHlwZT1cImRhdGVcIlxuICAgICAgICAgICAgaWQ9XCJkYXRlX2JlZm9yZVwiXG4gICAgICAgICAgICB2YWx1ZT17Z2V0SW5wdXRWYWx1ZShmaWx0ZXJzLmRhdGVfYmVmb3JlKX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gaGFuZGxlRGF0ZUNoYW5nZSgnZGF0ZV9iZWZvcmUnLCBlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJibG9jayB3LWZ1bGwgdGV4dC1zbSByb3VuZGVkLW1kIGJvcmRlci1ncmF5LTMwMCBkYXJrOmJvcmRlci1ncmF5LTUwMCBkYXJrOmJnLWdyYXktNjAwIGRhcms6dGV4dC13aGl0ZSBzaGFkb3ctc20gZm9jdXM6Ym9yZGVyLXNreS01MDAgZm9jdXM6cmluZy1za3ktNTAwXCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRGF0ZVJhbmdlRmlsdGVyO1xuIl19