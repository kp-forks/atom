"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
// A hardcoded list of document types. In a real app, this might come from a config file.
const DOCUMENT_TYPES = [
    { value: 'gdrive_pdf', label: 'Google Drive PDF' },
    { value: 'gdrive_docx', label: 'Google Drive Doc' },
    { value: 'gdrive_sheet', label: 'Google Drive Sheet' },
    { value: 'gdrive_slide', label: 'Google Drive Slide' },
    { value: 'email_snippet', label: 'Email' },
    { value: 'notion_summary', label: 'Notion Page' },
    { value: 'document_chunk', label: 'Uploaded Document' },
    { value: 'upload_html', label: 'HTML File' },
];
const DocTypeFilter = ({ selectedTypes, onChange }) => {
    const handleCheckboxChange = (typeValue) => {
        const newSelectedTypes = selectedTypes.includes(typeValue)
            ? selectedTypes.filter(t => t !== typeValue)
            : [...selectedTypes, typeValue];
        onChange(newSelectedTypes);
    };
    return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("label", { className: "block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1", children: "Document Types" }), (0, jsx_runtime_1.jsx)("div", { className: "grid grid-cols-2 md:grid-cols-3 gap-2 p-2 border rounded-md bg-gray-50 dark:bg-gray-700/50 border-gray-200 dark:border-gray-600", children: DOCUMENT_TYPES.map(docType => ((0, jsx_runtime_1.jsxs)("label", { className: "flex items-center space-x-2 text-sm text-gray-800 dark:text-gray-200", children: [(0, jsx_runtime_1.jsx)("input", { type: "checkbox", className: "h-4 w-4 rounded border-gray-300 text-sky-600 focus:ring-sky-500", checked: selectedTypes.includes(docType.value), onChange: () => handleCheckboxChange(docType.value) }), (0, jsx_runtime_1.jsx)("span", { children: docType.label })] }, docType.value))) })] }));
};
exports.default = DocTypeFilter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRG9jVHlwZUZpbHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkRvY1R5cGVGaWx0ZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHlGQUF5RjtBQUN6RixNQUFNLGNBQWMsR0FBRztJQUNyQixFQUFFLEtBQUssRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLGtCQUFrQixFQUFFO0lBQ2xELEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsa0JBQWtCLEVBQUU7SUFDbkQsRUFBRSxLQUFLLEVBQUUsY0FBYyxFQUFFLEtBQUssRUFBRSxvQkFBb0IsRUFBRTtJQUN0RCxFQUFFLEtBQUssRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLG9CQUFvQixFQUFFO0lBQ3RELEVBQUUsS0FBSyxFQUFFLGVBQWUsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFO0lBQzFDLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixFQUFFLEtBQUssRUFBRSxhQUFhLEVBQUU7SUFDakQsRUFBRSxLQUFLLEVBQUUsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLG1CQUFtQixFQUFFO0lBQ3ZELEVBQUUsS0FBSyxFQUFFLGFBQWEsRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFO0NBQzdDLENBQUM7QUFPRixNQUFNLGFBQWEsR0FBaUMsQ0FBQyxFQUFFLGFBQWEsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFO0lBRWxGLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxTQUFpQixFQUFFLEVBQUU7UUFDakQsTUFBTSxnQkFBZ0IsR0FBRyxhQUFhLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQztZQUN4RCxDQUFDLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxTQUFTLENBQUM7WUFDNUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDbEMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLENBQUM7SUFDN0IsQ0FBQyxDQUFDO0lBRUYsT0FBTyxDQUNMLDRDQUNFLGtDQUFPLFNBQVMsRUFBQyxpRUFBaUUsK0JBRTFFLEVBQ1IsZ0NBQUssU0FBUyxFQUFDLGlJQUFpSSxZQUM3SSxjQUFjLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FDN0IsbUNBQTJCLFNBQVMsRUFBQyxzRUFBc0UsYUFDekcsa0NBQ0UsSUFBSSxFQUFDLFVBQVUsRUFDZixTQUFTLEVBQUMsaUVBQWlFLEVBQzNFLE9BQU8sRUFBRSxhQUFhLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFDOUMsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FDbkQsRUFDRiwyQ0FBTyxPQUFPLENBQUMsS0FBSyxHQUFRLEtBUGxCLE9BQU8sQ0FBQyxLQUFLLENBUWpCLENBQ1QsQ0FBQyxHQUNFLElBQ0YsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsa0JBQWUsYUFBYSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuLy8gQSBoYXJkY29kZWQgbGlzdCBvZiBkb2N1bWVudCB0eXBlcy4gSW4gYSByZWFsIGFwcCwgdGhpcyBtaWdodCBjb21lIGZyb20gYSBjb25maWcgZmlsZS5cbmNvbnN0IERPQ1VNRU5UX1RZUEVTID0gW1xuICB7IHZhbHVlOiAnZ2RyaXZlX3BkZicsIGxhYmVsOiAnR29vZ2xlIERyaXZlIFBERicgfSxcbiAgeyB2YWx1ZTogJ2dkcml2ZV9kb2N4JywgbGFiZWw6ICdHb29nbGUgRHJpdmUgRG9jJyB9LFxuICB7IHZhbHVlOiAnZ2RyaXZlX3NoZWV0JywgbGFiZWw6ICdHb29nbGUgRHJpdmUgU2hlZXQnIH0sXG4gIHsgdmFsdWU6ICdnZHJpdmVfc2xpZGUnLCBsYWJlbDogJ0dvb2dsZSBEcml2ZSBTbGlkZScgfSxcbiAgeyB2YWx1ZTogJ2VtYWlsX3NuaXBwZXQnLCBsYWJlbDogJ0VtYWlsJyB9LFxuICB7IHZhbHVlOiAnbm90aW9uX3N1bW1hcnknLCBsYWJlbDogJ05vdGlvbiBQYWdlJyB9LFxuICB7IHZhbHVlOiAnZG9jdW1lbnRfY2h1bmsnLCBsYWJlbDogJ1VwbG9hZGVkIERvY3VtZW50JyB9LFxuICB7IHZhbHVlOiAndXBsb2FkX2h0bWwnLCBsYWJlbDogJ0hUTUwgRmlsZScgfSxcbl07XG5cbmludGVyZmFjZSBEb2NUeXBlRmlsdGVyUHJvcHMge1xuICBzZWxlY3RlZFR5cGVzOiBzdHJpbmdbXTtcbiAgb25DaGFuZ2U6IChzZWxlY3RlZDogc3RyaW5nW10pID0+IHZvaWQ7XG59XG5cbmNvbnN0IERvY1R5cGVGaWx0ZXI6IFJlYWN0LkZDPERvY1R5cGVGaWx0ZXJQcm9wcz4gPSAoeyBzZWxlY3RlZFR5cGVzLCBvbkNoYW5nZSB9KSA9PiB7XG5cbiAgY29uc3QgaGFuZGxlQ2hlY2tib3hDaGFuZ2UgPSAodHlwZVZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBuZXdTZWxlY3RlZFR5cGVzID0gc2VsZWN0ZWRUeXBlcy5pbmNsdWRlcyh0eXBlVmFsdWUpXG4gICAgICA/IHNlbGVjdGVkVHlwZXMuZmlsdGVyKHQgPT4gdCAhPT0gdHlwZVZhbHVlKVxuICAgICAgOiBbLi4uc2VsZWN0ZWRUeXBlcywgdHlwZVZhbHVlXTtcbiAgICBvbkNoYW5nZShuZXdTZWxlY3RlZFR5cGVzKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICA8bGFiZWwgY2xhc3NOYW1lPVwiYmxvY2sgdGV4dC1zbSBmb250LW1lZGl1bSB0ZXh0LWdyYXktNzAwIGRhcms6dGV4dC1ncmF5LTMwMCBtYi0xXCI+XG4gICAgICAgIERvY3VtZW50IFR5cGVzXG4gICAgICA8L2xhYmVsPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0yIG1kOmdyaWQtY29scy0zIGdhcC0yIHAtMiBib3JkZXIgcm91bmRlZC1tZCBiZy1ncmF5LTUwIGRhcms6YmctZ3JheS03MDAvNTAgYm9yZGVyLWdyYXktMjAwIGRhcms6Ym9yZGVyLWdyYXktNjAwXCI+XG4gICAgICAgIHtET0NVTUVOVF9UWVBFUy5tYXAoZG9jVHlwZSA9PiAoXG4gICAgICAgICAgPGxhYmVsIGtleT17ZG9jVHlwZS52YWx1ZX0gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yIHRleHQtc20gdGV4dC1ncmF5LTgwMCBkYXJrOnRleHQtZ3JheS0yMDBcIj5cbiAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJoLTQgdy00IHJvdW5kZWQgYm9yZGVyLWdyYXktMzAwIHRleHQtc2t5LTYwMCBmb2N1czpyaW5nLXNreS01MDBcIlxuICAgICAgICAgICAgICBjaGVja2VkPXtzZWxlY3RlZFR5cGVzLmluY2x1ZGVzKGRvY1R5cGUudmFsdWUpfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gaGFuZGxlQ2hlY2tib3hDaGFuZ2UoZG9jVHlwZS52YWx1ZSl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPHNwYW4+e2RvY1R5cGUubGFiZWx9PC9zcGFuPlxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICkpfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBEb2NUeXBlRmlsdGVyO1xuIl19