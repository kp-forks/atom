# Enhanced gitignore to prevent all Python and cache conflicts
# Created by https://www.toptal.com/developers/gitignore/api/node,python,go,java,react,nextjs,django,flask,fastapi,macos,linux,windows,intellij,visualstudiocode,vim,git
# Edit at https://www.toptal.com/developers/gitignore?templates=node,os,macos,linux,windows,intellij,visualstudiocode

### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python - enhanced patterns
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.pytest_cache/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582
__pypackages__/
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo
*.tsbuildinfo.json

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local


# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache
.next/
out/

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/
.esbuild/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Serverless Webpack directories
.webpack/

# SvelteKit build / generate output
.svelte-kit


### Operating Systems ###
# OSX
.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Windows
Thumbs.db
ehthumbs.db
[Dd]esktop.ini

### IDEs / Editors ###
# IntelliJ
.idea/
*.iml
*.hprof

# VSCode
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Xcode
build/
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata
*.xccheckout
*.moved-aside
DerivedData
*.hmap
*.ipa
*.xcuserstate
ios/.xcode.env.local

# Python __pycache__ files and artifacts
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
.pytest_cache/
.coverage
.coverage.*
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# BUCK
buck-out/
\.buckd/
*.keystore
!debug.keystore

### Project Specific ###

# Secrets - DO NOT COMMIT
secrets.json
*.http
*.pem

# fastlane
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/
*/fastlane/report.xml
*/fastlane/Preview.html
*/fastlane/screenshots

# Bundle artifact
*.jsbundle

# Ruby / CocoaPods
*/ios/Pods/
*/vendor/bundle/

# Amplify (Auto-generated section)
#amplify-do-not-edit-begin
amplify/\#current-cloud-backend
amplify/.config/local-*
amplify/logs
amplify/mock-data
amplify/backend/amplify-meta.json
amplify/backend/.temp
build/
dist/
aws-exports.js
awsconfiguration.json
amplifyconfiguration.json
amplifyconfiguration.dart
amplify-build-config.json
amplify-gradle-config.json
amplifytools.xcconfig
.secret-*
**.sample
#amplify-do-not-edit-end

# Vercel
.vercel

# Wake Word Generation Files
/audio_samples
/negative_samples
*.npy
/atom_wake_word_env

# Docker builds
/optaplanner_build_docker/kotlin-quarkus/target
/classification_build_docker/app/models/

# Database
/project/postgres

# Personal IDE setup files
*_setup_*.md
*personal*
*private*

# IDE configuration files that may contain personal paths
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.idea/workspace.xml
.idea/tasks.xml
.idea/usage.statistics.xml
.idea/dictionaries
.idea/sonarlint/
.idea/httpRequests
.idea/dataSources/
.idea/dataSources.ids
.idea/dataSources.xml
.idea/dataSources.local.xml
.idea/sqlDataSources.xml
.idea/dynamic.xml
.idea/uiDesigner.xml
.idea/aws.xml
.idea/assetWizardSettings.xml

# Vim
*.swp
*.swo
*~
._*
.DS_Store

# Backup files
*.bak
*.tmp
*.tmp.*
*~.nib
local.properties
loadpath
.recommenders

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Git
*.orig
*.rej

# System-specific path references
*_setup_*.md
paths.cache

# OS user profiles
# Cache directories (SYSTEMATICALLY PREVENT CONFLICTS)
**/__pycache__/
**/*.py[ocd]
**/*.pyc
**/*.pyd
**/*.so
**/.pytest_cache/
**/.mypy_cache/
**/.ruff_cache/
**/.hypothesis/
**/.coverage*
coverage.xml
.pytest_cache/
.ruff_cache/
.mypy_cache/
poetry.lock
Pipfile.lock

# Build artifacts that might cause conflicts
*-profile
*-settings
*-config
.gitsecret/keys/random_seed
.gitsecret/keys/secring.gpg
.hashconfig.json

# Development tools cache
.pre-commit-config.yaml.cache
.pip-cache/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
*.log
*.lock

# Aider and AI tools
.aider*
.aider.chat.history.md
.aider.input.history
.aider.tags.cache.v4/

# System tools
*.tmp
*.temp
*.log.*
*.swo
*.swp
*~

# ===== TYPESCRIPT BUILD PREVENTION =====
# Prevent compiled TypeScript JavaScript files (source .ts files should be used)
# This prevents duplicate JS files from being committed
atomic-docker/*/src/**/*.js
atomic-docker/functions_build_docker/**/*.js
atomic-docker/project/functions/**/*.js
atomic-docker/app_build_docker/**/components/**/*.js
atomic-docker/app_build_docker/**/lib/**/*.js
atomic-docker/app_build_docker/**/src/**/*.js
atomic-docker/oauth_build_docker/**/*.js
atomic-docker/handshake_build_docker/**/*.js
atomic-docker/allure-results/**/*.js
!atomic-docker/**/next.config.js
!atomic-docker/**/postcss.config.js
!atomic-docker/**/tailwind.config.js
!atomic-docker/**/jest.config.js
!atomic-docker/**/babel.config.js

# === CACHE CONFLICT PREVENTION ===
# Systematically prevent .pyc, __pycache__, and build artifacts
**/__pycache__/
**/*.py[ocd]
**/*.pyd
**/*.so
**/.pytest_cache/
**/.mypy_cache/
**/.ruff_cache/
**/.hypothesis/
**/.coverage*
**/coverage.xml
**/.DS_Store
**/._*
**/Thumbs.db
**/ehthumbs.db
**/*.tmp
**/*.backup
**/*.orig
**/*.rej

# Build artifacts (systematically exclude)
**/build/
**/develop-eggs/
**/dist/
**/downloads/
**/eggs/
**/.eggs/
**/lib/
**/lib64/
**/parts/
**/sdist/
**/var/
**/wheels/
**/share/python-wheels/
**/*.egg-info/
**/.installed.cfg

# ===== TYPESCRIPT BUILD FILES TO IGNORE =====
# Build directory patterns
**/*.js.map
**/*.d.ts.map
**/*.tsbuildinfo

# Source directory build outputs (only .ts files should be committed)
**/src/**/*.js
**/src/**/*.mjs
**/src/**/*.cjs

# Exclude compiled JS files that have TS source
**/lib/**/*.js
**/components/**/*.js
**/functions/**/*.js
**/utils/**/*.js
**/services/**/*.js
**/hooks/**/*.js

# Allow specific config files (even though they're JS)
!**/next.config.js
!**/postcss.config.js
!**/tailwind.config.js
!**/jest.config.js
!**/babel.config.js
!**/webpack.config.js
!**/rollup.config.js
!**/vite.config.js
!**/esbuild.config.js
!**/eslint.config.js
!**/.eslintrc.js
!**/prettier.config.js
!**/.prettierrc.js

# Allow build/external directories that legitimately have JS files
!**/node_modules/**

# Development tool caches
**/.pip-cache/
**/.cache/
**/.parcel-cache/
**/.next/cache/
**/node_modules/.cache/
**/dist/prod/


# coding orchestrator
ai-coding-orchestrator/
