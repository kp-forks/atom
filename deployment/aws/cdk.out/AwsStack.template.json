{
 "Metadata": {
  "cdk_nag": {
   "rules_to_suppress": [
    {
     "reason": "Suppressing SSL check for this workshop",
     "id": "AwsSolutions-SNS3"
    },
    {
     "reason": "Suppressing VPC flow logs for this workshop",
     "id": "AwsSolutions-VPC7"
    },
    {
     "reason": "Suppressing Container Insights for this workshop",
     "id": "AwsSolutions-ECS4"
    },
    {
     "reason": "Suppressing IAM wildcard permissions for this workshop",
     "id": "AwsSolutions-IAM5"
    },
    {
     "reason": "Suppressing RDS storage encryption for this workshop",
     "id": "AwsSolutions-RDS2"
    },
    {
     "reason": "Suppressing RDS multi-AZ for this workshop",
     "id": "AwsSolutions-RDS3"
    },
    {
     "reason": "Suppressing RDS deletion protection for this workshop",
     "id": "AwsSolutions-RDS10"
    },
    {
     "reason": "S3 server access logging is not implemented for the data bucket in this phase.",
     "id": "AwsSolutions-S1"
    },
    {
     "reason": "ALB access logging is not implemented in this phase.",
     "id": "AwsSolutions-ELB2"
    },
    {
     "reason": "IAM DB Authentication is not currently a requirement; using native DB auth with Secrets Manager.",
     "id": "AwsSolutions-RDS6"
    },
    {
     "reason": "Using standard DB port is acceptable for this internal RDS instance.",
     "id": "AwsSolutions-RDS11"
    },
    {
     "reason": "Restricting all security group egress is a larger hardening task deferred for now.",
     "id": "AwsSolutions-EC23"
    },
    {
     "reason": "Read-only root filesystem for ECS tasks requires per-service analysis and is deferred.",
     "id": "AwsSolutions-ECS2"
    },
    {
     "reason": "EFS default encryption (AWS-managed KMS key) is considered sufficient for this phase.",
     "id": "AwsSolutions-EFS3"
    },
    {
     "reason": "CloudWatch Log groups are not encrypted with KMS by default in this stack; using default AWS-managed encryption.",
     "id": "AwsSolutions-LOG1"
    }
   ]
  }
 },
 "Parameters": {
  "CertificateArn": {
   "Type": "String",
   "Default": "",
   "Description": "Optional: ARN of an existing ACM certificate for the domain name."
  },
  "OperatorEmail": {
   "Type": "String",
   "AllowedPattern": ".+@.+\\..+",
   "Description": "Email address for operational alerts and notifications."
  },
  "DeploymentStage": {
   "Type": "String",
   "Default": "dev",
   "AllowedValues": [
    "dev",
    "staging",
    "prod"
   ],
   "Description": "The deployment stage (dev, staging, prod)."
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Conditions": {
  "IsProdStageCondition": {
   "Fn::Equals": [
    {
     "Ref": "DeploymentStage"
    },
    "prod"
   ]
  }
 },
 "Resources": {
  "AlarmTopicD01E77F9": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AlarmTopic/Resource"
   }
  },
  "AlarmTopicTokenSubscription17F7316A1": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Ref": "OperatorEmail"
    },
    "Protocol": "email",
    "TopicArn": {
     "Ref": "AlarmTopicD01E77F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AlarmTopic/TokenSubscription:1/Resource"
   }
  },
  "AtomicVpcD404E496": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      },
      {
       "reason": "VPC Flow Logs are not enabled for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet1SubnetA737E17C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet1/Subnet",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet1RouteTableC8413083": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet1/RouteTable",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet1RouteTableAssociation3FFCB815": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AtomicVpcPublicSubnet1RouteTableC8413083"
    },
    "SubnetId": {
     "Ref": "AtomicVpcPublicSubnet1SubnetA737E17C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet1/RouteTableAssociation",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet1DefaultRoute77B5AF36": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AtomicVpcIGW53D98970"
    },
    "RouteTableId": {
     "Ref": "AtomicVpcPublicSubnet1RouteTableC8413083"
    }
   },
   "DependsOn": [
    "AtomicVpcVPCGWDDE21E70"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet1/DefaultRoute",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet1EIP9FD64675": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet1/EIP",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet1NATGatewayCE22C011": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "AtomicVpcPublicSubnet1EIP9FD64675",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "AtomicVpcPublicSubnet1SubnetA737E17C"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "AtomicVpcPublicSubnet1DefaultRoute77B5AF36",
    "AtomicVpcPublicSubnet1RouteTableAssociation3FFCB815"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet1/NATGateway",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet2Subnet2EAC937E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet2/Subnet",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet2RouteTableD3009F6C": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet2/RouteTable",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet2RouteTableAssociationC2CC6134": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AtomicVpcPublicSubnet2RouteTableD3009F6C"
    },
    "SubnetId": {
     "Ref": "AtomicVpcPublicSubnet2Subnet2EAC937E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet2/RouteTableAssociation",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPublicSubnet2DefaultRoute3E137768": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "AtomicVpcIGW53D98970"
    },
    "RouteTableId": {
     "Ref": "AtomicVpcPublicSubnet2RouteTableD3009F6C"
    }
   },
   "DependsOn": [
    "AtomicVpcVPCGWDDE21E70"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PublicSubnet2/DefaultRoute",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet1Subnet9483CF54": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet1/Subnet",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet1RouteTable26C3C2B8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet1/RouteTable",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet1RouteTableAssociationDC304322": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AtomicVpcPrivateSubnet1RouteTable26C3C2B8"
    },
    "SubnetId": {
     "Ref": "AtomicVpcPrivateSubnet1Subnet9483CF54"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet1/RouteTableAssociation",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet1DefaultRoute786CBE3F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "AtomicVpcPublicSubnet1NATGatewayCE22C011"
    },
    "RouteTableId": {
     "Ref": "AtomicVpcPrivateSubnet1RouteTable26C3C2B8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet1/DefaultRoute",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet2SubnetD22D1428": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet2/Subnet",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet2RouteTable254CA10F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet2/RouteTable",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet2RouteTableAssociationCAA49C69": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "AtomicVpcPrivateSubnet2RouteTable254CA10F"
    },
    "SubnetId": {
     "Ref": "AtomicVpcPrivateSubnet2SubnetD22D1428"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet2/RouteTableAssociation",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcPrivateSubnet2DefaultRoute0BA66386": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "AtomicVpcPublicSubnet1NATGatewayCE22C011"
    },
    "RouteTableId": {
     "Ref": "AtomicVpcPrivateSubnet2RouteTable254CA10F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/PrivateSubnet2/DefaultRoute",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcIGW53D98970": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "AwsStack/AtomicVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/IGW",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcVPCGWDDE21E70": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "AtomicVpcIGW53D98970"
    },
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/VPCGW",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "AtomicVpcRestrictDefaultSecurityGroupCustomResource0C2758BC": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "AtomicVpcD404E496",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "987411942459"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicVpc/RestrictDefaultSecurityGroupCustomResource/Default",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing VPC flow logs for this workshop",
       "id": "AwsSolutions-VPC7"
      }
     ]
    }
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:987411942459:security-group/",
             {
              "Fn::GetAtt": [
               "AtomicVpcD404E496",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-987411942459-us-east-1",
     "S3Key": "7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200",
    "aws:asset:property": "Code"
   }
  },
  "AtomicCluster0DDF655C": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicCluster/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing Container Insights for this workshop",
       "id": "AwsSolutions-ECS4"
      },
      {
       "reason": "Container Insights are not enabled for this workshop",
       "id": "AwsSolutions-ECS4"
      }
     ]
    }
   }
  },
  "AtomicClusterFE52F359": {
   "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
   "Properties": {
    "CapacityProviders": [
     "FARGATE",
     "FARGATE_SPOT"
    ],
    "Cluster": {
     "Ref": "AtomicCluster0DDF655C"
    },
    "DefaultCapacityProviderStrategy": []
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicCluster/AtomicCluster"
   }
  },
  "ECSTaskRoleF2ADB362": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/ECSTaskRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Suppressing IAM wildcard permissions for this workshop",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "Allowing wildcard permissions for this workshop as per service requirements for S3 and ECR.",
       "id": "AwsSolutions-IAM5"
      }
     ]
    }
   }
  },
  "ECSTaskRoleDefaultPolicy82FC9293": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtomicDataBucketE642B1DA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AtomicDataBucketE642B1DA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "atomicappRepoBED6513B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "atomicfunctionsRepoA602F8DD",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "atomichandshakeRepo8D7DD10F",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "atomicoauthRepoD4F710CC",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "atomicoptaplannerRepoC039AD7C",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "atomicpythonagentRepoD31A96D9",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "ApiTokenSecret3A926DEB"
        },
        {
         "Ref": "AtomicPostgresDBSecretAttachmentDB0B9A31"
        },
        {
         "Ref": "DeepgramApiKeyBBD97097"
        },
        {
         "Ref": "MskBootstrapBrokers1579C88C"
        },
        {
         "Ref": "NotionApiTokenC39ED238"
        },
        {
         "Ref": "NotionNotesDbId35185EF9"
        },
        {
         "Ref": "NotionResearchProjectsDbId3DE8B9E6"
        },
        {
         "Ref": "NotionResearchTasksDbIdAEA8F7F3"
        },
        {
         "Ref": "OpenAiApiKeyAB1C389B"
        },
        {
         "Ref": "OptaplannerDbConnString28A909E6"
        },
        {
         "Ref": "PostGraphileDbConnString646E2AA0"
        },
        {
         "Ref": "PostGraphileJwtSecret61960B62"
        },
        {
         "Ref": "SupertokensDbConnStringE1799986"
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AppLogGroup7D8CD952",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "SupertokensLogGroup841B0C09",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": [
        "secretsmanager:DescribeSecret",
        "secretsmanager:GetSecretValue"
       ],
       "Effect": "Allow",
       "Resource": {
        "Ref": "SupertokensDbConnStringE1799986"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ECSTaskRoleDefaultPolicy82FC9293",
    "Roles": [
     {
      "Ref": "ECSTaskRoleF2ADB362"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/ECSTaskRole/DefaultPolicy/Resource"
   }
  },
  "AtomicDataBucketE642B1DA": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicDataBucket/Resource"
   }
  },
  "AtomicDataBucketPolicy5E8D6043": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "AtomicDataBucketE642B1DA"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtomicDataBucketE642B1DA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AtomicDataBucketE642B1DA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "AtomicDataBucketE642B1DA",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AtomicDataBucketE642B1DA",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicDataBucket/Policy/Resource"
   }
  },
  "AtomicDataBucketAutoDeleteObjectsCustomResource942CD73A": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "AtomicDataBucketE642B1DA"
    }
   },
   "DependsOn": [
    "AtomicDataBucketPolicy5E8D6043"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicDataBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-987411942459-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "AtomicDataBucketE642B1DA"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "atomicfunctionsRepoA602F8DD": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "atomic-functions",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-functionsRepo/Resource"
   }
  },
  "atomicfunctionsRepoAutoDeleteImagesCustomResource25E8E3AA": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "atomicfunctionsRepoA602F8DD"
    }
   },
   "DependsOn": [
    "atomicfunctionsRepoA602F8DD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-functionsRepo/AutoDeleteImagesCustomResource/Default"
   }
  },
  "CustomECRAutoDeleteImagesCustomResourceProviderRole665F2773": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ecr:BatchDeleteImage",
          "ecr:DescribeRepositories",
          "ecr:ListImages",
          "ecr:ListTagsForResource"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ecr:us-east-1:987411942459:repository/*"
            ]
           ]
          }
         ],
         "Condition": {
          "StringEquals": {
           "ecr:ResourceTag/aws-cdk:auto-delete-images": "true"
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/Custom::ECRAutoDeleteImagesCustomResourceProvider/Role"
   }
  },
  "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-987411942459-us-east-1",
     "S3Key": "35a53bc183aaf4d7fe84d5e5ed06d48f33ef294fa1325c16cf5db800fa6ee72d.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderRole665F2773",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting images in ",
       {
        "Ref": "atomicfunctionsRepoA602F8DD"
       },
       " repository."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomECRAutoDeleteImagesCustomResourceProviderRole665F2773"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/Custom::ECRAutoDeleteImagesCustomResourceProvider/Handler",
    "aws:asset:path": "asset.35a53bc183aaf4d7fe84d5e5ed06d48f33ef294fa1325c16cf5db800fa6ee72d",
    "aws:asset:property": "Code"
   }
  },
  "atomichandshakeRepo8D7DD10F": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "atomic-handshake",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-handshakeRepo/Resource"
   }
  },
  "atomichandshakeRepoAutoDeleteImagesCustomResource746E5F18": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "atomichandshakeRepo8D7DD10F"
    }
   },
   "DependsOn": [
    "atomichandshakeRepo8D7DD10F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-handshakeRepo/AutoDeleteImagesCustomResource/Default"
   }
  },
  "atomicoauthRepoD4F710CC": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "atomic-oauth",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-oauthRepo/Resource"
   }
  },
  "atomicoauthRepoAutoDeleteImagesCustomResource756CCADA": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "atomicoauthRepoD4F710CC"
    }
   },
   "DependsOn": [
    "atomicoauthRepoD4F710CC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-oauthRepo/AutoDeleteImagesCustomResource/Default"
   }
  },
  "atomicappRepoBED6513B": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "atomic-app",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-appRepo/Resource"
   }
  },
  "atomicappRepoAutoDeleteImagesCustomResource00C9A267": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "atomicappRepoBED6513B"
    }
   },
   "DependsOn": [
    "atomicappRepoBED6513B"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-appRepo/AutoDeleteImagesCustomResource/Default"
   }
  },
  "atomicoptaplannerRepoC039AD7C": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "atomic-optaplanner",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-optaplannerRepo/Resource"
   }
  },
  "atomicoptaplannerRepoAutoDeleteImagesCustomResourceE7AA0615": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "atomicoptaplannerRepoC039AD7C"
    }
   },
   "DependsOn": [
    "atomicoptaplannerRepoC039AD7C"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-optaplannerRepo/AutoDeleteImagesCustomResource/Default"
   }
  },
  "atomicpythonagentRepoD31A96D9": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": "atomic-python-agent",
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-images",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-python-agentRepo/Resource"
   }
  },
  "atomicpythonagentRepoAutoDeleteImagesCustomResourceE5F1DF60": {
   "Type": "Custom::ECRAutoDeleteImages",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomECRAutoDeleteImagesCustomResourceProviderHandler8D89C030",
      "Arn"
     ]
    },
    "RepositoryName": {
     "Ref": "atomicpythonagentRepoD31A96D9"
    }
   },
   "DependsOn": [
    "atomicpythonagentRepoD31A96D9"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/atomic-python-agentRepo/AutoDeleteImagesCustomResource/Default"
   }
  },
  "RdsSecurityGroup632A77E4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AwsStack/RdsSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/RdsSecurityGroup/Resource"
   }
  },
  "RdsSecurityGroupfromAwsStackSupertokensSGC2B15E925432F0961C4B": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from AwsStackSupertokensSGC2B15E92:5432",
    "FromPort": 5432,
    "GroupId": {
     "Fn::GetAtt": [
      "RdsSecurityGroup632A77E4",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "SupertokensSG8D961012",
      "GroupId"
     ]
    },
    "ToPort": 5432
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/RdsSecurityGroup/from AwsStackSupertokensSGC2B15E92:5432"
   }
  },
  "AtomicPostgresDBSubnetGroup067D56E3": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnet group for AtomicPostgresDB database",
    "SubnetIds": [
     {
      "Ref": "AtomicVpcPrivateSubnet1Subnet9483CF54"
     },
     {
      "Ref": "AtomicVpcPrivateSubnet2SubnetD22D1428"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicPostgresDB/SubnetGroup/Default",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "RDS managed secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "AwsStackAtomicPostgresDBSecret13CD6E0E3fdaad7efa858a3daf9490cf0a702aeb": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"PostgresAdminCredentials\"}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicPostgresDB/Secret/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "RDS managed secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "AtomicPostgresDBSecretAttachmentDB0B9A31": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "AwsStackAtomicPostgresDBSecret13CD6E0E3fdaad7efa858a3daf9490cf0a702aeb"
    },
    "TargetId": {
     "Ref": "AtomicPostgresDB2E9D697F"
    },
    "TargetType": "AWS::RDS::DBInstance"
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicPostgresDB/Secret/Attachment/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "RDS managed secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "AtomicPostgresDB2E9D697F": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "AllocatedStorage": "100",
    "BackupRetentionPeriod": 1,
    "CopyTagsToSnapshot": true,
    "DBInstanceClass": "db.t3.small",
    "DBName": "atomicdb",
    "DBSubnetGroupName": {
     "Ref": "AtomicPostgresDBSubnetGroup067D56E3"
    },
    "DeletionProtection": true,
    "Engine": "postgres",
    "EngineVersion": "15",
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "AwsStackAtomicPostgresDBSecret13CD6E0E3fdaad7efa858a3daf9490cf0a702aeb"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "MasterUsername": "PostgresAdminCredentials",
    "MultiAZ": true,
    "PubliclyAccessible": false,
    "StorageEncrypted": true,
    "StorageType": "gp2",
    "VPCSecurityGroups": [
     {
      "Fn::GetAtt": [
       "RdsSecurityGroup632A77E4",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicPostgresDB/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "RDS managed secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "SupertokensDbConnStringE1799986": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/SupertokensDbConnString"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensDbConnString/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "PostGraphileDbConnString646E2AA0": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/PostGraphileDbConnString"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/PostGraphileDbConnString/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "PostGraphileJwtSecret61960B62": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/PostGraphileJwtSecret"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/PostGraphileJwtSecret/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "ApiTokenSecret3A926DEB": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/ApiTokenSecret"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/ApiTokenSecret/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "OpenAiApiKeyAB1C389B": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/OpenAiApiKey"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/OpenAiApiKey/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "OptaplannerDbConnString28A909E6": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/OptaplannerDbConnString"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/OptaplannerDbConnString/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "NotionApiTokenC39ED238": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/NotionApiToken"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/NotionApiToken/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "DeepgramApiKeyBBD97097": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/DeepgramApiKey"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/DeepgramApiKey/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "NotionNotesDbId35185EF9": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/NotionNotesDbId"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/NotionNotesDbId/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "NotionResearchProjectsDbId3DE8B9E6": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/NotionResearchProjectsDbId"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/NotionResearchProjectsDbId/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "NotionResearchTasksDbIdAEA8F7F3": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/NotionResearchTasksDbId"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/NotionResearchTasksDbId/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "MskBootstrapBrokers1579C88C": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "GenerateSecretString": {},
    "Name": "AwsStack/MskBootstrapBrokers"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/MskBootstrapBrokers/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "Secret rotation is not required for this workshop.",
       "id": "AwsSolutions-SMG4"
      }
     ]
    }
   }
  },
  "AlbSecurityGroup86A59E99": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AwsStack/AlbSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "from 0.0.0.0/0:443",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AlbSecurityGroup/Resource"
   }
  },
  "AtomicAlbF873927A": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AlbSecurityGroup86A59E99",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "AtomicVpcPublicSubnet1SubnetA737E17C"
     },
     {
      "Ref": "AtomicVpcPublicSubnet2Subnet2EAC937E"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "AtomicVpcPublicSubnet1DefaultRoute77B5AF36",
    "AtomicVpcPublicSubnet1RouteTableAssociation3FFCB815",
    "AtomicVpcPublicSubnet2DefaultRoute3E137768",
    "AtomicVpcPublicSubnet2RouteTableAssociationC2CC6134"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicAlb/Resource"
   }
  },
  "AtomicAlbHttpListener370F09B3": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "RedirectConfig": {
       "Port": "443",
       "Protocol": "HTTPS",
       "StatusCode": "HTTP_301"
      },
      "Type": "redirect"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "AtomicAlbF873927A"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicAlb/HttpListener/Resource"
   }
  },
  "AtomicAlbHttpsListener9D23ED41": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "Certificates": [
     {
      "CertificateArn": {
       "Ref": "CertificateArn"
      }
     }
    ],
    "DefaultActions": [
     {
      "FixedResponseConfig": {
       "StatusCode": "404"
      },
      "Type": "fixed-response"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "AtomicAlbF873927A"
    },
    "Port": 443,
    "Protocol": "HTTPS"
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicAlb/HttpsListener/Resource"
   }
  },
  "AtomicAlbHttpsListenerSupertokensRule79B95D02": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "SupertokensTargetGroupEC539A5A"
      },
      "Type": "forward"
     }
    ],
    "Conditions": [
     {
      "Field": "path-pattern",
      "PathPatternConfig": {
       "Values": [
        "/v1/auth/*"
       ]
      }
     }
    ],
    "ListenerArn": {
     "Ref": "AtomicAlbHttpsListener9D23ED41"
    },
    "Priority": 10
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicAlb/HttpsListener/SupertokensRule/Resource"
   }
  },
  "AtomicAlbHttpsListenerAppRuleBBC18247": {
   "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
   "Properties": {
    "Actions": [
     {
      "TargetGroupArn": {
       "Ref": "AppTargetGroup3D716DB6"
      },
      "Type": "forward"
     }
    ],
    "Conditions": [
     {
      "Field": "path-pattern",
      "PathPatternConfig": {
       "Values": [
        "/*"
       ]
      }
     }
    ],
    "ListenerArn": {
     "Ref": "AtomicAlbHttpsListener9D23ED41"
    },
    "Priority": 100
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AtomicAlb/HttpsListener/AppRule/Resource"
   }
  },
  "SupertokensSG8D961012": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AwsStack/SupertokensSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensSG/Resource"
   }
  },
  "SupertokensSGfromAwsStackAlbSecurityGroupFEFFD71B35672816E8EC": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from AwsStackAlbSecurityGroupFEFFD71B:3567",
    "FromPort": 3567,
    "GroupId": {
     "Fn::GetAtt": [
      "SupertokensSG8D961012",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AlbSecurityGroup86A59E99",
      "GroupId"
     ]
    },
    "ToPort": 3567
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensSG/from AwsStackAlbSecurityGroupFEFFD71B:3567"
   }
  },
  "SupertokensTaskDef562C1644": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "POSTGRESQL_TABLE_NAMES_PREFIX",
        "Value": "Supertokens"
       }
      ],
      "Essential": true,
      "Image": "registry.supertokens.io/supertokens/supertokens-postgresql:6.0",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "SupertokensLogGroup841B0C09"
        },
        "awslogs-stream-prefix": "supertokens",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "Supertokens",
      "PortMappings": [
       {
        "ContainerPort": 3567,
        "Protocol": "tcp"
       }
      ],
      "Secrets": [
       {
        "Name": "POSTGRESQL_CONNECTION_URI",
        "ValueFrom": {
         "Ref": "SupertokensDbConnStringE1799986"
        }
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ECSTaskRoleF2ADB362",
      "Arn"
     ]
    },
    "Family": "supertokens",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ECSTaskRoleF2ADB362",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensTaskDef/Resource"
   }
  },
  "SupertokensLogGroup841B0C09": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/ecs/Supertokens",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensLogGroup/Resource"
   }
  },
  "SupertokensService6D0139D7": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "AtomicCluster0DDF655C"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "Supertokens",
      "ContainerPort": 3567,
      "TargetGroupArn": {
       "Ref": "SupertokensTargetGroupEC539A5A"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "SupertokensSG8D961012",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "AtomicVpcPrivateSubnet1Subnet9483CF54"
       },
       {
        "Ref": "AtomicVpcPrivateSubnet2SubnetD22D1428"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "SupertokensTaskDef562C1644"
    }
   },
   "DependsOn": [
    "AtomicAlbHttpsListenerSupertokensRule79B95D02",
    "ECSTaskRoleDefaultPolicy82FC9293",
    "ECSTaskRoleF2ADB362"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensService/Service"
   }
  },
  "SupertokensTargetGroupEC539A5A": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/hello",
    "Port": 3567,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/SupertokensTargetGroup/Resource"
   }
  },
  "AppSG652848D9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "AwsStack/AppSG",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AppSG/Resource"
   }
  },
  "AppSGfromAwsStackAlbSecurityGroupFEFFD71B300050A217E7": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "from AwsStackAlbSecurityGroupFEFFD71B:3000",
    "FromPort": 3000,
    "GroupId": {
     "Fn::GetAtt": [
      "AppSG652848D9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "AlbSecurityGroup86A59E99",
      "GroupId"
     ]
    },
    "ToPort": 3000
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AppSG/from AwsStackAlbSecurityGroupFEFFD71B:3000"
   }
  },
  "AppTaskDef32F3E122": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "NEXT_PUBLIC_SUPERTOKENS_API_DOMAIN",
        "Value": "https://app.example.com/v1/auth"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "atomicappRepoBED6513B",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "atomicappRepoBED6513B",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Ref": "atomicappRepoBED6513B"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "AppLogGroup7D8CD952"
        },
        "awslogs-stream-prefix": "app",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "App",
      "PortMappings": [
       {
        "ContainerPort": 3000,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "ECSTaskRoleF2ADB362",
      "Arn"
     ]
    },
    "Family": "app",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "ECSTaskRoleF2ADB362",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AppTaskDef/Resource"
   }
  },
  "AppLogGroup7D8CD952": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/aws/ecs/App",
    "RetentionInDays": 30
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwsStack/AppLogGroup/Resource"
   }
  },
  "AppServiceA2F9036C": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "AtomicCluster0DDF655C"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "App",
      "ContainerPort": 3000,
      "TargetGroupArn": {
       "Ref": "AppTargetGroup3D716DB6"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "AppSG652848D9",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "AtomicVpcPrivateSubnet1Subnet9483CF54"
       },
       {
        "Ref": "AtomicVpcPrivateSubnet2SubnetD22D1428"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "AppTaskDef32F3E122"
    }
   },
   "DependsOn": [
    "AtomicAlbHttpsListenerAppRuleBBC18247",
    "ECSTaskRoleDefaultPolicy82FC9293",
    "ECSTaskRoleF2ADB362"
   ],
   "Metadata": {
    "aws:cdk:path": "AwsStack/AppService/Service"
   }
  },
  "AppTargetGroup3D716DB6": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "HealthCheckPath": "/",
    "Port": 3000,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "AtomicVpcD404E496"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/AppTargetGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1YbW/bNhD+LdPHgtW6FOiHfHOctDCWNp6ddsCMoDiTZ4UJRWrk0akr+L8PfJEsp+kL2i3whn0QRB7vjg+PvOMjHZVHz16Uz36CO/eUi9unSi7Ldk7Ab9l4padgoUZCGzpjo4UkaTSDO/e+ddqV7aVpJF8UT4qroBF7bO6XjlvZBNVFW1AQFsfFk4IVqEVjpKbcbawhw40qjgusQaqCFSupCO3UKMk3WWso+l3S9Wt0Dio8MaLTEAjiHInQ/ubRY5RuI6Ihli1DflS27xq+aIsaPow+umyvgV4B4R1s3MD23XTMpn6pJJ/7pUZatAWsQSpYSiVp84fRmO3XDZ+I3OZS2BNl+G3u19AkJ5PmQp+D1/y6OCbrkRWyWb8Y31MH52SlJ836xUgIi85d6LFFCPgTNHYgKCIQId70oSuO4zk4GICHgaI/hhoptGbGE17CUuFOvpONnDNcRge9cmicTabhtQs2m1q5BsK//WSuQLkDiPmPwTgcJAcCI53CiSa0GvszlGpc7o2IgF/XqInNkXsrafPKGt8s2gC2m0opczdS6sLT0ngtUnLkUjDRVZh95hWmWhA2IryCTqwL3+WoLTjoiVZSY5KkfORGa+RhkV0V91r+6TGHNS76wP3F4MSN/ec9n31tbx5T50cP1Bdi9jmtz2HaKT0qqHQrDPPsE0F2EViLK9ux8o7Q7mUj6nBnvARbAeEYGuCSNlNr1lKgdTvUX9NbZDx5jkHzvvLgfnLsEtztKa6kjqQwLvIbnkQU90zZ2GgCqdEOZBnuHO1aclwMrbNsyyTUZTszCsMF6JyvUZxsiuO2aKzUXDagRpwb3/PNpBMMRnxXHvOWXZppZ9XRz0WX87E2pkzsx3qy88XB6Pe+uy9P9ogmBzV6lSiPQpbEKW1yfC9NGPkk7J+KhZgTEIaLzO1N++8Tx4CkWGyZe162J57fRrZnsTbrXfgKgY6s2YQj7smcokLCi+UNcnLdrbEMjCHxihHn6FxfRLjdNDkb5s/fvx69Gb06O40jK2M5zufnuZREPAkDS6+8UW2xjN3Bx9NwPJQwW7YzbIyTZOwmrqDrvIG6Y0XfsqxJDRUOitv/jh7LUcrP3tWWWeHK9hQIluBwoh2B5qEUo65kYLpd63LTdJM6qSuFbx3amaF4j4yaRkm+Y6ssG71D66KsLVZeqb6bKfKNsUPRlhVN968i3p4voZZqs+dxTyRwBV5RQKK7mGxZIfMqBpB39+26yX8CXEDlYjMr5s+x4MINL3GXSxMruEWBmiSoLvNEjtw37YkjY6HCs5StKLq0rr0iOfrYZznwW9/MkMJUfbhE2Exp9NQawnzz5S1NC+qYvsD+b8l3rv7+Crp6cHoymIl1h2aO3MaCtqtCv2K3RS4O7kUnHpUZVj33DafbD/fwAbOHfOMHrrzA8TVY4BRZUD8FcLzQU3DuzlgxtpLQShhfg+5T4WEoeZ1dImxZQuJq0FChLdvE8CzGLyyLdAm2Qtp9eC3aDD6DoTg+/Jv1oBnro3hv6SE4/y3R1ZahAkeSKwNiCQo0l7paH5XtoI6cGxAncQzt4j71HA6yoZF0hHrf4EHu2ik+ZBz4/lAn9gd6aet6vj/obpkylSvbc1N1yahycy8D+sR+/uzz5SKE7gesc5yS/XbLZuiMt4mEX7Gxd2TqoeyrdL9TvmfbfVWcgEM2cg5pTlBJXQWbC0+Npy3TRmB5435eHx2Vv4Q/1TdOyqfWa5I1lrP0/guyP6ALxhYAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "AwsStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "atomicfunctionsRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicfunctionsRepoA602F8DD",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicfunctionsRepoA602F8DD",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "atomicfunctionsRepoA602F8DD"
      }
     ]
    ]
   }
  },
  "atomichandshakeRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomichandshakeRepo8D7DD10F",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomichandshakeRepo8D7DD10F",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "atomichandshakeRepo8D7DD10F"
      }
     ]
    ]
   }
  },
  "atomicoauthRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicoauthRepoD4F710CC",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicoauthRepoD4F710CC",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "atomicoauthRepoD4F710CC"
      }
     ]
    ]
   }
  },
  "atomicappRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicappRepoBED6513B",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicappRepoBED6513B",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "atomicappRepoBED6513B"
      }
     ]
    ]
   }
  },
  "atomicoptaplannerRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicoptaplannerRepoC039AD7C",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicoptaplannerRepoC039AD7C",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "atomicoptaplannerRepoC039AD7C"
      }
     ]
    ]
   }
  },
  "atomicpythonagentRepoUri": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::Select": [
        4,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicpythonagentRepoD31A96D9",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".dkr.ecr.",
      {
       "Fn::Select": [
        3,
        {
         "Fn::Split": [
          ":",
          {
           "Fn::GetAtt": [
            "atomicpythonagentRepoD31A96D9",
            "Arn"
           ]
          }
         ]
        }
       ]
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "atomicpythonagentRepoD31A96D9"
      }
     ]
    ]
   }
  },
  "ApplicationEndpoint": {
   "Value": "https://app.example.com"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}