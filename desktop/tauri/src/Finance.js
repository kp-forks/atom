"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const SideBarWithHeader_1 = __importDefault(require("./layouts/SideBarWithHeader"));
const user_context_1 = require("./lib/user-context");
const user_context_2 = require("./lib/user-context");
const material_1 = require("@mui/material");
const Icon_1 = require("@mui/material/Icon");
const recharts_1 = require("recharts");
// Comprehensive finance dashboard component
const FinanceDashboard = () => {
    const { user } = (0, user_context_1.useUser)();
    const { hasRole } = (0, user_context_2.useUserRole)();
    const [activeView, setActiveView] = (0, react_1.useState)('overview');
    const [accounts, setAccounts] = (0, react_1.useState)([]);
    const [transactions, setTransactions] = (0, react_1.useState)([]);
    const [budgets, setBudgets] = (0, react_1.useState)([]);
    const [goals, setGoals] = (0, react_1.useState)([]);
    const [investments, setInvestments] = (0, react_1.useState)([]);
    const [netWorth, setNetWorth] = (0, react_1.useState)({ current: 0, change: 0, percent: 0, history: [] });
    const [loading, setLoading] = (0, react_1.useState)(true);
    +;
    // Mock data for demo - equivalent to maybe-finance feature set
    const mockAccounts = [
        { id: "wallet_checking", name: "Primary Checking", type: "checking", balance: 5234.56, institution: "Chase Bank", lastUpdate: "2024-12-20" },
        { id: "wallet_savings", name: "Emergency Savings", type: "savings", balance: 15890.23, institution: "Ally Bank", lastUpdate: "2024-12-20" },
        { id: "wallet_investment", name: "Investment Portfolio", type: "investment", balance: 48750.89, institution: "Vanguard", lastUpdate: "2024-12-20" },
        { id: "wallet_credit", name: "Rewards Credit Card", type: "credit", balance: -2984.78, institution: "Citi", lastUpdate: "2024-12-20" },
    ];
    const mockTransactions = [
        { id: "txn_001", description: "Grocery Shopping", amount: -127.45, date: "2024-12-19", category: "Groceries", merchant: "Whole Foods", account: "wallet_checking" },
        { id: "txn_002", description: "Salary Deposit", amount: 3500.00, date: "2024-12-15", category: "Income", merchant: "Employer Inc", account: "wallet_checking" },
        { id: "txn_003", description: "Netflix Subscription", amount: -15.99, date: "2024-12-10", category: "Entertainment", merchant: "Netflix", account: "wallet_credit" },
        { id: "txn_004", description: "Gas Station", amount: -45.30, date: "2024-12-08", category: "Transportation", merchant: "Shell", account: "wallet_checking" },
        { id: "txn_005", description: "Dinner Out", amount: -78.50, date: "2024-12-05", category: "Dining", merchant: "Local Restaurant", account: "wallet_checking" },
    ];
    const mockBudgets = [
        { id: "budget_dining", name: "Dining Out", budgeted: 500, spent: 285, remaining: 215, color: "#FF6B6B", alerts: ["On track, 57% used"] },
        { id: "budget_groceries", name: "Groceries", budgeted: 400, spent: 420, remaining: -20, color: "#4ECDC4", alerts: ["Warning: 105% used"] },
        { id: "budget_entertainment", name: "Entertainment", budgeted: 200, spent: 85, remaining: 115, color: "#45B7D1", alerts: ["Good progress"] },
        { id: "budget_transportation", name: "Transportation", budgeted: 250, spent: 145, remaining: 105, color: "#96CEB4", alerts: ["Within budget"] },
    ];
    const mockGoals = [
        { id: "goal_emergency", name: "Emergency Fund", description: "6 months living expenses", target: 15000, saved: 8750, progress: 58.3, category: "emergency", deadline: "2025-06-01" },
        { id: "goal_vacation", name: "Hawaii Vacation", description: "Family trip to Hawaii", target: 8000, saved: 2200, progress: 27.5, category: "vacation", deadline: "2025-04-15" },
        { id: "goal_retirement", name: "IRA Contribution", description: "Annual retirement savings", target: 6500, saved: 4800, progress: 73.8, category: "retirement", deadline: "2024-12-31" },
    ];
    const mockNetWorth = {
        current: 125430.50,
        change: 2340.12,
        percent: 1.9,
        history: [
            +{ date: "Aug '24", netWorth: 116290, assets: 133290, liabilities: 17000 },
            +{ date: "Sep '24", netWorth: 119890, assets: 137890, liabilities: 18000 },
            +{ date: "Oct '24", netWorth: 122190, assets: 141190, liabilities: 19000 },
            +{ date: "Nov '24", netWorth: 123430, assets: 142430, liabilities: 19000 },
            { date: "Dec '24", netWorth: 125430.50, assets: 145430.50, liabilities: 20000 }
        ]
    };
    const fetchFinanceData = (0, react_1.useCallback)(async () => {
        setLoading(true);
        try {
            await new Promise(resolve => setTimeout(resolve, 1000));
            setAccounts(mockAccounts);
            setTransactions(mockTransactions);
            setBudgets(mockBudgets);
            setGoals(mockGoals);
            setNetWorth(mockNetWorth);
            setLoading(false);
        }
        catch (error) {
            console.error("Error loading finance data:", error);
            setLoading(false);
        }
    }, []);
    (0, react_1.useEffect)(() => {
        if (user && hasRole('finance')) {
            fetchFinanceData();
        }
    }, [user, hasRole, fetchFinanceData]);
    const calculateTotalAssets = () => accounts.filter(a => ['checking', 'savings', 'investment'].includes(a.type)).reduce((sum, acc) => sum + acc.balance, 0);
    const calculateTotalLiabilities = () => accounts.filter(a => ['credit', 'loan'].includes(a.type)).reduce((sum, acc) => sum + Math.abs(acc.balance), 0);
    const QuickStats = () => ((0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 2, style: { marginBottom: 20 }, children: [(0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 3, children: [(0, jsx_runtime_1.jsxs)(Card, { elevation: 6, style: { backgroundColor: "#1e3a8a", color: "white" }, children: [(0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", alignItems: "center", justifyContent: "space-between", children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: "Net Worth" }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", children: ["$", netWorth.current.toLocaleString()] }), (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", alignItems: "center", gap: 1, children: [netWorth.change > 0 ? (0, jsx_runtime_1.jsx)(Icon_1.ArrowUpward, { fontSize: "small" }) : (0, jsx_runtime_1.jsx)(Icon_1.ArrowDownward, { fontSize: "small" }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", children: [netWorth.percent > 0 ? "+" : "", netWorth.percent, "%"] })] })] }), (0, jsx_runtime_1.jsx)(Icon_1.TrendingUp, { style: { fontSize: 40, opacity: 0.7 } })] }), "+          "] }), "+        "] }), "+      "] }), (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 3, children: [(0, jsx_runtime_1.jsxs)(Card, { elevation: 4, children: [(0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: "Assets" }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", color: "success.main", children: ["+              $", calculateTotalAssets().toLocaleString(), "+            "] }), "+            ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: "+              All liquid and investment assets +            " }), "+          "] }), "+        "] }), "+      "] }), "+", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 3, children: [(0, jsx_runtime_1.jsxs)(Card, { elevation: 4, children: [(0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: "Liabilities" }), (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", color: "error.main", children: ["+              $", calculateTotalLiabilities().toLocaleString(), "+            "] }), "+            ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: "+              Credit cards, loans, mortgages +            " }), "+          "] }), "+        "] }), "+      "] }), "+", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 3, children: [(0, jsx_runtime_1.jsxs)(Card, { elevation: 4, children: [(0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: "Fire Date" }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h4", children: "2037" }), (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: "+              Retirement projection +            " }), "+          "] }), "+        "] }), "+      "] }), "+    "] })
        + );
    const BudgetProgress = () => ((0, jsx_runtime_1.jsxs)(Card, { elevation: 4, style: { marginBottom: 20 }, children: [(0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Budget Progress" }), (0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, children: [budgets.map(budget => ((0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 6, children: ["+              ", (0, jsx_runtime_1.jsxs)(material_1.Box, { children: ["+                ", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { children: budget.name }), (0, jsx_runtime_1.jsx)(material_1.Badge, { color: budget.utilization > 100 ? "error" : "success", badgeContent: budget.utilization > 100 ? "OVER" : `${budget.utilization}%` })] }), "+                ", (0, jsx_runtime_1.jsx)(material_1.LinearProgress, {}), "+                  variant=\"determinate\" +                  value=", Math.min(budget.utilization, 100), "+                  color=", budget.utilization > 100 ? "error" : "primary", "+                  style=", { height: 6, borderRadius: 3 }, "+                /> +                ", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", mt: 1, children: ["+                  ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "caption", children: ["$", budget.spent.toLocaleString(), " spent"] }), "+                  ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "caption", children: ["$", budget.remaining.toLocaleString(), " remaining"] }), "+                "] }), "+              "] }), "+            "] }, budget.id)
                                + )), "+        "] }), "+      "] }), "+    "] })
        + );
    const GoalsProgress = () => ((0, jsx_runtime_1.jsxs)(Card, { elevation: 4, style: { marginBottom: 20 }, children: [(0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Financial Goals" }), (0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, children: [goals.map(goal => ((0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 4, children: ["+              ", (0, jsx_runtime_1.jsxs)(Card, { elevation: 2, children: ["+                ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+                  ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: goal.name }), "+                  ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", gutterBottom: true, children: goal.description }), "+", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 1, children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h5", children: ["+                      $", goal.saved.toLocaleString(), " / $", goal.target.toLocaleString(), "+                    "] }), "+                    ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h6", color: "primary", children: ["+                      ", goal.progress.toFixed(1), "% +                    "] }), "+                  "] }), "+", (0, jsx_runtime_1.jsx)(material_1.LinearProgress, {}), "+                    variant=\"determinate\" +                    value=", goal.progress, "+                    style=", { height: 8, borderRadius: 4 }, "+                  /> +", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", mt: 1, children: [(0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "caption", children: ["Target: ", new Date(goal.deadline).toLocaleDateString()] }), "+                    ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "caption", color: goal.progress >= 80 ? "success" : "warning", children: ["+                      ", goal.target - goal.saved, " to go +                    "] }), "+                  "] }), "+                "] }), "+              "] }), "+            "] }, goal.id)
                                + )), "+        "] }), "+      "] }), "+    "] })
        + );
    const InvestmentHoldings = () => ((0, jsx_runtime_1.jsxs)(Card, { elevation: 4, style: { marginBottom: 20 }, children: ["+      ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+        ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Investment Holdings" }), "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, children: ["+          ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 8, children: ["+            ", (0, jsx_runtime_1.jsxs)(recharts_1.ResponsiveContainer, { width: "100%", height: 300, children: ["+              ", (0, jsx_runtime_1.jsxs)(recharts_1.PieChart, { children: ["+                ", (0, jsx_runtime_1.jsx)(recharts_1.Pie, {}), "+                  data=", [
                                                        +{ name: "Stocks", value: 35000 },
                                                        +{ name: "Bonds", value: 8000 },
                                                        +{ name: "Cash", value: 5750 }
                                                            + 
                                                    ], "+                  cx=\"50%\" +                  cy=\"50%\" +                  outerRadius=", 120, "+                  fill=\"#8884d8\" +                  dataKey=\"value\" +                  label=", ({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`, "+                > +                  ", (0, jsx_runtime_1.jsx)(recharts_1.Cell, { fill: "#FF8042" }), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.Cell, { fill: "#00C49F" }), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.Cell, { fill: "#0088FE" }), "+                "] }), "+                ", (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, {}), "+              "] }), "+            "] }), "+          "] }), "+          ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 4, children: ["+            ", (0, jsx_runtime_1.jsxs)(material_1.Box, { children: ["+              ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", children: ["+                $", accounts.find(a => a.type === 'investment')?.balance.toLocaleString() || '$0', "+              "] }), "+              ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: "+                Total Portfolio Value +              " }), "+            "] }), "+          "] }), "+        "] }), "+      "] })
        + ), Card;
     >
        +;
    ;
    const RecentTransactions = () => ((0, jsx_runtime_1.jsxs)(Card, { elevation: 4, children: ["+      ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+        ", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 2, children: ["+          ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", children: "Recent Transactions" }), "+          ", (0, jsx_runtime_1.jsx)(material_1.Button, { size: "small", variant: "outlined", children: "View All" }), "+        "] }), "+ +        ", transactions.slice(0, 5).map(transaction => (+(0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", py: 2, borderBottom: "1px solid #eee", children: ["+            ", (0, jsx_runtime_1.jsxs)(material_1.Box, { children: ["+              ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "subtitle1", fontWeight: "medium", children: ["+                ", transaction.description, "+              "] }), "+              ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", color: "textSecondary", children: ["+                ", transaction.merchant, " \u2022 ", new Date(transaction.date).toLocaleDateString(), "+              "] }), "+            "] }), "+ +            ", (0, jsx_runtime_1.jsx)(material_1.Typography, {}), "+              variant=\"h6\" +              color=", transaction.amount < 0 ? "error.main" : "success.main", "+            > +              $", Math.abs(transaction.amount).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }), "+            "] }, transaction.id)
                        + )), "          "] }), "+        ))} +      "] })
        + ), Card;
     >
        +;
    ;
    const FeatureActions = () => ((0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", gap: 2, marginBottom: 3, children: ["+      ", (0, jsx_runtime_1.jsx)(material_1.Button, { variant: "contained", color: "primary", startIcon: (0, jsx_runtime_1.jsx)(Icon_1.Add, {}), onClick: () => console.log('Create budget'), children: "+        Create Budget +      " }), "+ +      ", (0, jsx_runtime_1.jsx)(material_1.Button, { variant: "contained", color: "success", startIcon: (0, jsx_runtime_1.jsx)(Icon_1.Add, {}), onClick: () => console.log('Set goal'), children: "+        Set Goal +      " }), "+ +      ", (0, jsx_runtime_1.jsx)(material_1.Button, { variant: "outlined", startIcon: (0, jsx_runtime_1.jsx)(Icon_1.AccountBalance, {}), onClick: () => console.log('Connect account'), children: "+        Connect Account +      " })] })
        + );
    if (!hasRole('finance')) {
        +;
        return (+(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-center h-96", children: ["+        ", (0, jsx_runtime_1.jsxs)(Card, { children: ["+          ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+            ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h5", color: "error", gutterBottom: true, children: "+              Finance Features Access Required +            " }), "+            ", (0, jsx_runtime_1.jsx)(material_1.Typography, { children: "+              Check with your system administrator to enable personal finance management features. +            " }), "+          "] }), "+        "] }), "+      "] })
            + );
        +;
    }
    if (loading) {
        +;
        return (+(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-center h-96", children: ["+        ", (0, jsx_runtime_1.jsxs)(Card, { children: ["+          ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+            ", (0, jsx_runtime_1.jsx)(material_1.Typography, { children: "Loading comprehensive finance data..." }), "+            ", (0, jsx_runtime_1.jsx)(material_1.LinearProgress, { className: "w-full" }), "+          "] }), "+        "] }), "+      "] })
            + );
        +;
    }
    return (+(0, jsx_runtime_1.jsxs)("div", { className: "p-6 bg-gray-50 min-h-screen", children: ["+      ", (0, jsx_runtime_1.jsxs)(material_1.Box, { mb: 4, children: ["+        ", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", alignItems: "center", mb: 4, children: ["+          ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h4", className: "font-bold text-gray-900", children: "+            \uD83D\uDCB0 Atom Finance Dashboard +          " }), "+ +          ", (0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", gap: 2, children: ["+            ", (0, jsx_runtime_1.jsx)(material_1.Button, { variant: "outlined", onClick: fetchFinanceData, children: "+              Refresh Data +            " }), "+ +            ", (0, jsx_runtime_1.jsx)(material_1.Button, { variant: "contained", color: "primary", children: "+              Add Account +            " }), "+          "] }), "+        "] }), "+ +        ", (0, jsx_runtime_1.jsxs)(material_1.Alert, { severity: "info", className: "mb-4", children: ["+          ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "body2", children: ["+            ", (0, jsx_runtime_1.jsx)("strong", { children: "Feature Parity Achieved:" }), " This dashboard provides comprehensive financial management including net worth tracking, budgets, goals, and investments - equivalent to maybe-finance functionality. +          "] }), "+        "] }), "+      "] }), "+      ", (0, jsx_runtime_1.jsx)(QuickStats, {}), "+ +      ", (0, jsx_runtime_1.jsxs)(material_1.Box, { mb: 4, children: ["+        ", (0, jsx_runtime_1.jsx)(FeatureActions, {}), "+      "] }), "+      ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 4, children: ["+        ", "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, lg: 8, children: ["+          ", (0, jsx_runtime_1.jsxs)(Card, { elevation: 4, children: ["+            ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+              ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Net Worth Trend" }), "+              ", (0, jsx_runtime_1.jsxs)(recharts_1.ResponsiveContainer, { width: "100%", height: 300, children: ["+                ", (0, jsx_runtime_1.jsxs)(recharts_1.LineChart, { data: netWorth.history, children: ["+                  ", (0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, { strokeDasharray: "3 3" }), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.XAxis, { dataKey: "date" }), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.YAxis, {}), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, { formatter: (value) => `$${value.toLocaleString()}` }), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.Line, { type: "monotone", dataKey: "netWorth", stroke: "#3b82f6", strokeWidth: 3 }), "+                "] }), "+              "] }), "+            "] }), "+          "] }), "+        "] }), "+        ", "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, lg: 4, children: ["+          ", (0, jsx_runtime_1.jsxs)(Card, { elevation: 4, children: ["+            ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+              ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Asset Allocation" }), "+              ", (0, jsx_runtime_1.jsxs)(recharts_1.ResponsiveContainer, { width: "100%", height: 300, children: ["+                ", (0, jsx_runtime_1.jsxs)(recharts_1.PieChart, { children: ["+                  ", (0, jsx_runtime_1.jsx)(recharts_1.Pie, {}), "+                    data=", [
                                                                +{ name: "Assets", value: totalAssets },
                                                                +{ name: "Liabilities", value: totalLiabilities }
                                                                    + 
                                                            ], "+                    cx=\"50%\" +                    cy=\"50%\" +                    outerRadius=", 100, "+                    dataKey=\"value\" +                    label=", ({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`, "+                  > +                    ", (0, jsx_runtime_1.jsx)(recharts_1.Cell, { fill: "#10b981" }), "+                    ", (0, jsx_runtime_1.jsx)(recharts_1.Cell, { fill: "#ef4444" }), "+                  "] }), "+                  ", (0, jsx_runtime_1.jsx)(recharts_1.Tooltip, { formatter: (value) => `$${value.toLocaleString()}` }), "+                "] }), "+              "] }), "+            "] }), "+          "] }), "+        "] }), "+        ", "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, children: ["+          ", (0, jsx_runtime_1.jsx)(BudgetProgress, {}), "+        "] }), "+        ", "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, children: ["+          ", (0, jsx_runtime_1.jsx)(GoalsProgress, {}), "+        "] }), "+        ", "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, children: ["+          ", (0, jsx_runtime_1.jsx)(InvestmentHoldings, {}), "+        "] }), "+        ", "+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, children: ["+          ", (0, jsx_runtime_1.jsx)(RecentTransactions, {}), "+        "] }), "+      "] })
        +
            +{ /* Detailed Sections */}
        + (0, jsx_runtime_1.jsxs)(material_1.Box, { mt: 6, children: ["+        ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { container: true, spacing: 3, children: ["+          ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 6, children: ["+            ", (0, jsx_runtime_1.jsxs)(Card, { elevation: 2, children: ["+              ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+                ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Account Overview" }), "+                ", accounts.map(account => (+(0, jsx_runtime_1.jsxs)(material_1.Box, { display: "flex", justifyContent: "space-between", py: 1, borderBottom: "1px solid #f3f4f6", children: ["+                    ", (0, jsx_runtime_1.jsxs)(material_1.Box, { children: ["+                      ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "subtitle1", children: account.name }), "+                      ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: account.institution }), "+                    "] }), "+                    ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h6", color: account.balance < 0 ? "error" : "primary", children: ["+                      $", account.balance.toLocaleString(), "+                    "] }), "+                  "] }, account.id)
                                                    + )), "+              "] }), "+            "] }), "+          "] }), "+          ", (0, jsx_runtime_1.jsxs)(material_1.Grid, { item: true, xs: 12, md: 6, children: ["+            ", (0, jsx_runtime_1.jsxs)(Card, { elevation: 2, children: ["+              ", (0, jsx_runtime_1.jsxs)(material_1.CardContent, { children: ["+                ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "h6", gutterBottom: true, children: "Monthly Budget Summary" }), "+                ", (0, jsx_runtime_1.jsxs)(material_1.Box, { children: ["+                  ", (0, jsx_runtime_1.jsxs)(material_1.Typography, { variant: "h4", color: "primary", children: ["+                    $", budgets.reduce((sum, b) => sum + b.spent, 0).toLocaleString(), " / +                    $", budgets.reduce((sum, b) => sum + b.budgeted, 0).toLocaleString(), "+                  "] }), "+                  ", (0, jsx_runtime_1.jsx)(material_1.Typography, { variant: "body2", color: "textSecondary", children: "+                    Total monthly spending vs budget +                  " }), "+                "] }), "+              "] }), "+            "] }), "+          "] }), "+        "] }), "+      "] })
        + );
    div >
        +;
    ;
    +;
};
exports.default = (0, SideBarWithHeader_1.default)(FinanceDashboard);
//# sourceMappingURL=data:application/json;base64,