"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
/**
 * A component that protects a view based on the user's active roles.
 * If the user has the required role, it renders the children. Otherwise, it
 * displays an "Access Denied" message with an option to go to settings.
 *
 * @param {FeatureViewGuardProps} props - The component's props.
 * @returns {React.ReactElement} The protected content or an access denied message.
 */
const FeatureViewGuard = ({ activeRoles, requiredRole, roleName, onNavigateToSettings, children, }) => {
    // Check if the user has the required role.
    const hasAccess = activeRoles.includes(requiredRole);
    if (hasAccess) {
        return children;
    }
    // If the user does not have access, render the access denied message.
    return ((0, jsx_runtime_1.jsxs)("div", { className: "access-denied", style: { padding: "20px", textAlign: "center" }, children: [(0, jsx_runtime_1.jsx)("h2", { children: "Access Denied" }), (0, jsx_runtime_1.jsxs)("p", { children: ["You need to activate the '", roleName, "' role to view this page."] }), (0, jsx_runtime_1.jsx)("button", { onClick: onNavigateToSettings, children: "Go to Settings" })] }));
};
exports.default = FeatureViewGuard;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmVhdHVyZVZpZXdHdWFyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkZlYXR1cmVWaWV3R3VhcmQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQW1CQTs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLEVBQ3hCLFdBQVcsRUFDWCxZQUFZLEVBQ1osUUFBUSxFQUNSLG9CQUFvQixFQUNwQixRQUFRLEdBQ2MsRUFBNkIsRUFBRTtJQUNyRCwyQ0FBMkM7SUFDM0MsTUFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUVyRCxJQUFJLFNBQVMsRUFBRSxDQUFDO1FBQ2QsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUVELHNFQUFzRTtJQUN0RSxPQUFPLENBQ0wsaUNBQ0UsU0FBUyxFQUFDLGVBQWUsRUFDekIsS0FBSyxFQUFFLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLGFBRS9DLDJEQUFzQixFQUN0Qix3RUFBOEIsUUFBUSxpQ0FBOEIsRUFDcEUsbUNBQVEsT0FBTyxFQUFFLG9CQUFvQiwrQkFBeUIsSUFDMUQsQ0FDUCxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsa0JBQWUsZ0JBQWdCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBSb2xlIH0gZnJvbSBcIi4uL1VzZXJSb2xlXCI7XG5cbi8qKlxuICogUHJvcHMgZm9yIHRoZSBGZWF0dXJlVmlld0d1YXJkIGNvbXBvbmVudC5cbiAqL1xuaW50ZXJmYWNlIEZlYXR1cmVWaWV3R3VhcmRQcm9wcyB7XG4gIC8qKiBUaGUgY3VycmVudGx5IGFjdGl2ZSByb2xlcyBmb3IgdGhlIHVzZXIuICovXG4gIGFjdGl2ZVJvbGVzOiBSb2xlW107XG4gIC8qKiBUaGUgcm9sZSByZXF1aXJlZCB0byBhY2Nlc3MgdGhlIGd1YXJkZWQgY29udGVudC4gKi9cbiAgcmVxdWlyZWRSb2xlOiBSb2xlO1xuICAvKiogQSB1c2VyLWZyaWVuZGx5IG5hbWUgZm9yIHRoZSBmZWF0dXJlIG9yIHJvbGUgYmVpbmcgZ3VhcmRlZC4gKi9cbiAgcm9sZU5hbWU6IHN0cmluZztcbiAgLyoqIEEgY2FsbGJhY2sgZnVuY3Rpb24gdG8gbmF2aWdhdGUgdGhlIHVzZXIgdG8gdGhlIHNldHRpbmdzIHZpZXcuICovXG4gIG9uTmF2aWdhdGVUb1NldHRpbmdzOiAoKSA9PiB2b2lkO1xuICAvKiogVGhlIGNvbnRlbnQgdG8gcmVuZGVyIGlmIHRoZSB1c2VyIGhhcyB0aGUgbmVjZXNzYXJ5IHJvbGUuICovXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdEVsZW1lbnQgfCBudWxsO1xufVxuXG4vKipcbiAqIEEgY29tcG9uZW50IHRoYXQgcHJvdGVjdHMgYSB2aWV3IGJhc2VkIG9uIHRoZSB1c2VyJ3MgYWN0aXZlIHJvbGVzLlxuICogSWYgdGhlIHVzZXIgaGFzIHRoZSByZXF1aXJlZCByb2xlLCBpdCByZW5kZXJzIHRoZSBjaGlsZHJlbi4gT3RoZXJ3aXNlLCBpdFxuICogZGlzcGxheXMgYW4gXCJBY2Nlc3MgRGVuaWVkXCIgbWVzc2FnZSB3aXRoIGFuIG9wdGlvbiB0byBnbyB0byBzZXR0aW5ncy5cbiAqXG4gKiBAcGFyYW0ge0ZlYXR1cmVWaWV3R3VhcmRQcm9wc30gcHJvcHMgLSBUaGUgY29tcG9uZW50J3MgcHJvcHMuXG4gKiBAcmV0dXJucyB7UmVhY3QuUmVhY3RFbGVtZW50fSBUaGUgcHJvdGVjdGVkIGNvbnRlbnQgb3IgYW4gYWNjZXNzIGRlbmllZCBtZXNzYWdlLlxuICovXG5jb25zdCBGZWF0dXJlVmlld0d1YXJkID0gKHtcbiAgYWN0aXZlUm9sZXMsXG4gIHJlcXVpcmVkUm9sZSxcbiAgcm9sZU5hbWUsXG4gIG9uTmF2aWdhdGVUb1NldHRpbmdzLFxuICBjaGlsZHJlbixcbn06IEZlYXR1cmVWaWV3R3VhcmRQcm9wcyk6IFJlYWN0LlJlYWN0RWxlbWVudCB8IG51bGwgPT4ge1xuICAvLyBDaGVjayBpZiB0aGUgdXNlciBoYXMgdGhlIHJlcXVpcmVkIHJvbGUuXG4gIGNvbnN0IGhhc0FjY2VzcyA9IGFjdGl2ZVJvbGVzLmluY2x1ZGVzKHJlcXVpcmVkUm9sZSk7XG5cbiAgaWYgKGhhc0FjY2Vzcykge1xuICAgIHJldHVybiBjaGlsZHJlbjtcbiAgfVxuXG4gIC8vIElmIHRoZSB1c2VyIGRvZXMgbm90IGhhdmUgYWNjZXNzLCByZW5kZXIgdGhlIGFjY2VzcyBkZW5pZWQgbWVzc2FnZS5cbiAgcmV0dXJuIChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9XCJhY2Nlc3MtZGVuaWVkXCJcbiAgICAgIHN0eWxlPXt7IHBhZGRpbmc6IFwiMjBweFwiLCB0ZXh0QWxpZ246IFwiY2VudGVyXCIgfX1cbiAgICA+XG4gICAgICA8aDI+QWNjZXNzIERlbmllZDwvaDI+XG4gICAgICA8cD5Zb3UgbmVlZCB0byBhY3RpdmF0ZSB0aGUgJ3tyb2xlTmFtZX0nIHJvbGUgdG8gdmlldyB0aGlzIHBhZ2UuPC9wPlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtvbk5hdmlnYXRlVG9TZXR0aW5nc30+R28gdG8gU2V0dGluZ3M8L2J1dHRvbj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEZlYXR1cmVWaWV3R3VhcmQ7XG4iXX0=