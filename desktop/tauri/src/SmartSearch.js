"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const tauri_1 = require("@tauri-apps/api/tauri");
const SmartSearch = () => {
    const [query, setQuery] = (0, react_1.useState)("");
    const [results, setResults] = (0, react_1.useState)([]);
    const handleSearch = async () => {
        const data = await (0, tauri_1.invoke)("smart_search", { query });
        setResults(data);
    };
    return ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "Smart Search" }), (0, jsx_runtime_1.jsx)("p", { children: "Search across all agent skills." }), (0, jsx_runtime_1.jsx)("input", { type: "text", placeholder: "Enter your search query", value: query, onChange: (e) => setQuery(e.target.value) }), (0, jsx_runtime_1.jsx)("button", { onClick: handleSearch, children: "Search" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h3", { children: "Results" }), results.map((result) => ((0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsxs)("a", { href: result.url, children: [(0, jsx_runtime_1.jsx)("b", { children: result.skill }), (0, jsx_runtime_1.jsx)("p", { children: result.title })] }) }, result.skill)))] })] }));
};
exports.default = SmartSearch;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU21hcnRTZWFyY2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJTbWFydFNlYXJjaC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBQXdDO0FBQ3hDLGlEQUErQztBQUUvQyxNQUFNLFdBQVcsR0FBRyxHQUFHLEVBQUU7SUFDdkIsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQUMsRUFBRSxDQUFDLENBQUM7SUFDdkMsTUFBTSxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsR0FBRyxJQUFBLGdCQUFRLEVBQUMsRUFBRSxDQUFDLENBQUM7SUFFM0MsTUFBTSxZQUFZLEdBQUcsS0FBSyxJQUFJLEVBQUU7UUFDOUIsTUFBTSxJQUFJLEdBQUcsTUFBTSxJQUFBLGNBQU0sRUFBQyxjQUFjLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1FBQ3JELFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuQixDQUFDLENBQUM7SUFFRixPQUFPLENBQ0wsNENBQ0UsMERBQXFCLEVBQ3JCLDRFQUFzQyxFQUN0QyxrQ0FDRSxJQUFJLEVBQUMsTUFBTSxFQUNYLFdBQVcsRUFBQyx5QkFBeUIsRUFDckMsS0FBSyxFQUFFLEtBQUssRUFDWixRQUFRLEVBQUUsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUN6QyxFQUNGLG1DQUFRLE9BQU8sRUFBRSxZQUFZLHVCQUFpQixFQUM5Qyw0Q0FDRSxxREFBZ0IsRUFDZixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUN2QiwwQ0FDRSwrQkFBRyxJQUFJLEVBQUUsTUFBTSxDQUFDLEdBQUcsYUFDakIsd0NBQUksTUFBTSxDQUFDLEtBQUssR0FBSyxFQUNyQix3Q0FBSSxNQUFNLENBQUMsS0FBSyxHQUFLLElBQ25CLElBSkksTUFBTSxDQUFDLEtBQUssQ0FLaEIsQ0FDUCxDQUFDLElBQ0UsSUFDRixDQUNQLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixrQkFBZSxXQUFXLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGludm9rZSB9IGZyb20gXCJAdGF1cmktYXBwcy9hcGkvdGF1cmlcIjtcblxuY29uc3QgU21hcnRTZWFyY2ggPSAoKSA9PiB7XG4gIGNvbnN0IFtxdWVyeSwgc2V0UXVlcnldID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtyZXN1bHRzLCBzZXRSZXN1bHRzXSA9IHVzZVN0YXRlKFtdKTtcblxuICBjb25zdCBoYW5kbGVTZWFyY2ggPSBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IGludm9rZShcInNtYXJ0X3NlYXJjaFwiLCB7IHF1ZXJ5IH0pO1xuICAgIHNldFJlc3VsdHMoZGF0YSk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPGgyPlNtYXJ0IFNlYXJjaDwvaDI+XG4gICAgICA8cD5TZWFyY2ggYWNyb3NzIGFsbCBhZ2VudCBza2lsbHMuPC9wPlxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIHNlYXJjaCBxdWVyeVwiXG4gICAgICAgIHZhbHVlPXtxdWVyeX1cbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRRdWVyeShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAvPlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtoYW5kbGVTZWFyY2h9PlNlYXJjaDwvYnV0dG9uPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGgzPlJlc3VsdHM8L2gzPlxuICAgICAgICB7cmVzdWx0cy5tYXAoKHJlc3VsdCkgPT4gKFxuICAgICAgICAgIDxkaXYga2V5PXtyZXN1bHQuc2tpbGx9PlxuICAgICAgICAgICAgPGEgaHJlZj17cmVzdWx0LnVybH0+XG4gICAgICAgICAgICAgIDxiPntyZXN1bHQuc2tpbGx9PC9iPlxuICAgICAgICAgICAgICA8cD57cmVzdWx0LnRpdGxlfTwvcD5cbiAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKSl9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNtYXJ0U2VhcmNoO1xuIl19