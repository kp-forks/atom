version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: atom-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-atom_production}
      POSTGRES_USER: ${POSTGRES_USER:-atom_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-local_password}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-atom_user} -d ${POSTGRES_DB:-atom_production}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Python API Server
  api:
    build:
      context: ./backend/python-api-service
      dockerfile: Dockerfile
    container_name: atom-api
    ports:
      - "${API_PORT:-5058}:5058"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-atom_user}:${POSTGRES_PASSWORD:-local_password}@postgres:5432/${POSTGRES_DB:-atom_production}
      - FLASK_ENV=production
      - ATOM_OAUTH_ENCRYPTION_KEY=${ATOM_OAUTH_ENCRYPTION_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - DROPBOX_APP_KEY=${DROPBOX_APP_KEY}
      - DROPBOX_APP_SECRET=${DROPBOX_APP_SECRET}
      - TRELLO_API_KEY=${TRELLO_API_KEY}
      - TRELLO_API_TOKEN=${TRELLO_API_TOKEN}
      - ASANA_CLIENT_ID=${ASANA_CLIENT_ID}
      - ASANA_CLIENT_SECRET=${ASANA_CLIENT_SECRET}
      - NOTION_TOKEN=${NOTION_TOKEN}
    volumes:
      - ./backend/python-api-service:/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5058/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
